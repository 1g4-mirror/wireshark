commit f7d7d54bbd
Author: Martin Mathieson <martin.mathieson@keysight.com>
Date:   Mon Nov 13 21:19:03 2023 +0000

    tshark: -U must be one of the export PDU taps

    If instead give a protocol, can crash (e.g. -U sip -Y sip ...)

    (cherry picked from commit 9b3e1ee6840c7969d472ffa0bec415efb91cf922)

commit b59a50bdfe
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Nov 15 10:11:24 2023 +0100

    Qt: Update correct row in Advanced preferences

    When changing a value in Advanced preferences the index given to
    dataChanged() must be made for correct parent.

    Update all columns because the font may have changed.

    (cherry picked from commit a2e90a655760b5b91dee58987f542d89d674118f)

commit 5f390a1e80
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Nov 13 16:43:05 2023 -0800

    Prep for 4.0.11

commit 9976e2fd64
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 12 16:20:09 2023 +0000

    [Automatic update for 2023-11-12]

    Update manuf, services enterprise numbers, translations, and other items.

    services failed.

commit c1fc456a74
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Nov 11 10:29:27 2023 -0500

    isdn-sup: Properly register dissectors

    Clang 17 correctly warns about this code, which has been wrong
    for a decade.

    wireshark/epan/dissectors/packet-isdn-sup.c:2944:5: error: code will never be executed [-Werror,-Wunreachable-code]
     2944 |                   dissector_add_string("q932.ros.global.res", isdn_sup_global_op_tab[i].oid, create_dissector_handle(isdn_sup_global_op_tab[i].res_pdu, proto_isdn_sup));
          |                   ^~~~~~~~~~~~~~~~~~~~
    1 error generated.

    Fix #19477

    (cherry picked from commit cf5811140de73932e37b786112f5a2538c3bd848)

commit 0fc53ea626
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Nov 10 14:16:35 2023 -0800

    Add a newline at the end of the last line.

    The last line didn't end with a newline.

    [skip ci]

    (cherry picked from commit ca78434471c9188e0a6bafa30349baddfee408b8)

commit 623009d692
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Nov 10 11:59:32 2023 -0800

    Windows: Upgrade Minizip to 1.3

    (cherry picked from commit a5e0be51df50e0e8a8f3091413aa036847282369)

    Conflicts:
            CMakeLists.txt
            tools/win-setup.ps1

commit ab4518c4ed
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Nov 10 10:09:04 2023 -0800

    Windows: Upgrade c-ares to 1.19.1

    (cherry picked from commit cefcf0ac02352757a39bd3ab9defb4ec3e089819)

    Conflicts:
            tools/win-setup.ps1

commit d2d9efb431
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Nov 9 12:14:23 2023 -0800

    GitHub CI: Use the latest version of macOS

    Use the "macos-latest" image, otherwise we might run into support issues
    with Homebrew.

    [skip ci]

    (cherry picked from commit adfbd315b65c39e33bfabf0906a1fac348d95869)

commit 42743a4382
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Nov 8 13:35:06 2023 +0100

    Qt: SyntaxLineEdit state-icon top position

    Arrange the SyntaxLineEdit state-icon to always be in the middle.

    (cherry picked from commit c568589189e6ef67ddf93dd6f7ef51ff75cff6c6)

commit 3235f96948
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Thu Nov 9 15:16:40 2023 +0100

    GSM SIM: fix dissection of READ / UPDATE BINARY commands

    Fixes #19472

    (cherry picked from commit 5eea10e4e46de3b0be1e4c4e6c1ede2a5e5e581e)

commit e136fa145b
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Thu Nov 9 14:37:42 2023 +0100

    Qt: Use QLineEdit border only on macOS

    Only specify the InterfaceToolbar QLineEdit border on macOS because
    the default looks ok on other platforms.

commit c596dd9108
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Nov 8 21:53:26 2023 +0100

    Qt: Change InterfaceToolbarLineEdit border color

    Change the border color to match the border of buttons and drop-downs.

    (cherry picked from commit b2f5ac5123feda21c7082c39f599f9180b99392f)

commit 0e5f4c573a
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Nov 8 09:52:25 2023 +0100

    Qt: Add InterfaceToolbarLineEdit border

    Add a border and a border-radius to make the LineEdit look better
    on macOS. This is the same style as used in DisplayFilterEdit.

    (cherry picked from commit d93cbe28f6dcc7fc33493960df360b18a39489cb)

commit 373b3600d5
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Nov 7 19:36:53 2023 -0500

    Qt: Fix Export Packet Dissections Help button, connections on non-Windows

    We have to call findChild to find the QDialogButtonBox after setting
    the option to use the Qt dialog instead of the native dialog, not
    before. Otherwise, we might not find the QDialogButtonBox.

    Fixes adding the Help button to the Export Packet Dissections
    dialog, and enabling the validity checks that disable the
    save button when, e.g. an illegal range is entered.

    (cherry picked from commit 5880b2195e9670740fc924f40ef61183da0344aa)

commit 6695d3189d
Author: Niels Widger <niels@qacafe.com>
Date:   Tue Nov 7 10:51:21 2023 -0500

    sharkd: Fix displayed delta times in "frames" method

    As noted in #17923, commit c4731738 broke timereferences and displayed
    delta time (`frame.time_delta_displayed`) in the `frames` method of
    `sharkd`.  This commit adds back to `sharkd_session_process_frames`
    the local variables `prev_dis_num`, `current_ref_frame` and
    `ref_frame` which are used to determine the `frame_ref_num` and
    `prev_dis_num` arguments to each call to `sharkd_dissect_request` in
    the main loop of `sharkd_session_process_frames`.

    Below is an example on `master` (`b7cc44eb34`, specifically) of a
    `frames` request for packets 1 and 800 of the capture
    `./test/captures/logistics_multicast.pcapng` where we ask for columns
    `frame.time_relative`, `frame.time_delta` and
    `frame.time_delta_displayed`:

        # ./cmake-build-debug/run/sharkd -
        Running as user "root" and group "root". This could be dangerous.
        Hello in child.
        {"jsonrpc":"2.0","id":1,"method":"load","params":{"file":"./test/captures/logistics_multicast.pcapng"}}
        load: filename=./test/captures/logistics_multicast.pcapng
        {"jsonrpc":"2.0","id":1,"result":{"status":"OK"}}
        {"jsonrpc":"2.0", "id":2, "method":"frames","params":{"filter":"frame.number==1||frame.number==800","column0":"frame.time_relative:1","column1":"frame.time_delta:1","column2":"frame.time_delta_displayed:1"}}
        {"jsonrpc":"2.0","id":2,"result":[{"c":["0.000000000","0.000000000","0.000000000"],"num":1},{"c":["191.872111000","0.193716000","0.193716000"],"num":800}]}

    Note that the `frame.time_delta_displayed` column value for packet 800
    is `0.193716000`, which is time difference between it and packet 799,
    not packet 1.

    Compare this to the same `frames` request using the changes from this
    commit:

        # ./cmake-build-debug/run/sharkd -
        Running as user "root" and group "root". This could be dangerous.
        Hello in child.
        {"jsonrpc":"2.0","id":1,"method":"load","params":{"file":"./test/captures/logistics_multicast.pcapng"}}
        load: filename=./test/captures/logistics_multicast.pcapng
        {"jsonrpc":"2.0","id":1,"result":{"status":"OK"}}
        {"jsonrpc":"2.0", "id":2, "method":"frames","params":{"filter":"frame.number==1||frame.number==800","column0":"frame.time_relative:1","column1":"frame.time_delta:1","column2":"frame.time_delta_displayed:1"}}
        {"jsonrpc":"2.0","id":2,"result":[{"c":["0.000000000","0.000000000","0.000000000"],"num":1},{"c":["191.872111000","0.193716000","191.872111000"],"num":800}]}

    Note that the `frame.time_delta_displayed` column value for packet 800
    is now `191.872111000`, the time difference between it and packet 1.
    This is the expected value since only packets 1 and 800 are visible
    due to the request's `filter` parameter.

    A new `test_sharkd_req_frames_delta_times` unit test has been added to
    verify this fix and prevent it the bug from being accidentally
    sneaking in again.  If this fix is accepted, this change should
    probably be cherry-picked to the `release-4.2` branch.

    Fixes #17923.

    (cherry picked from commit 99a7079bc0ea8a377968f3dc893e8060ff520128)

commit 75bc9a2287
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sat May 20 19:03:34 2023 -0700

    Windows: Update our GnuTLS packages

    Use custom-built packages with MSYS2 dependencies and add an Arm64
    package. This adds duplicate iconv and intl DLLs; hopefully that won't
    be an issue.

    (cherry picked from commit 46dd9c31bb392836395943c2279023e386a00d8e)

    Conflicts:
            tools/win-setup.ps1

commit b29ad47568
Author: Haiyun Liu <liu0hy@gmail.com>
Date:   Mon Nov 6 16:45:34 2023 +0800

    ISO15765: Remove the duplicated text in the "Information" column

    Similar text appended by the branch code below.

    (cherry picked from commit 817e7c01cfea6f86a7a2b35822d3e4ac5f38418b)

commit ebcb530af4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 5 16:21:12 2023 +0000

    [Automatic update for 2023-11-05]

    Update manuf, services enterprise numbers, translations, and other items.

commit 4da59dbd00
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Sat Nov 4 10:12:44 2023 +0100

    OpenFlow(v1): Add Actions to FLOW_MOD

    Close: #17072

    (cherry picked from commit 4b6438ee3696a80bf8acaf31db72c804bcad205c)

commit bde4f07366
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Nov 1 17:06:32 2023 -0700

    pcapng: convert FCS lengths between bytes and bits.

    The FCS length in a pcapng IDB is in bits, but the length in an EPB is
    in bytes; convert the latter to bits.

    The FCS length in the Ethernet pseudo-header is in bytes; convert the
    length-in-bits to a length-in-bytes before using it to set the FCS
    length in the pseudo-header.

    While we're at it, note, in a comment, that we convert the length in
    pcap files, which is in units of 16 bits, to bits.

    Fixes #19174.

    (cherry picked from commit a3fd4fd25bd3009aed8053cc612129af209b18ea)

commit a3f6cf41dc
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Oct 31 10:23:56 2023 +0100

    tcp: TCP Segment Len is not found in the packet bytes

    Do not set offset and length for the TCP Segment Len field because
    the value is not found in the packet bytes.

    (cherry picked from commit b9667fa9cebc137a619170ca83db9c27557da173)

commit d826901fe3
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Tue Oct 31 14:39:37 2023 +0100

    OSPF: Fix offset for dissect_ospf_lsa_opaque_ri

    Fixes: #19444

    (cherry picked from commit 946f1fd1a47d52b8b39d16c291e7f06815187c7a)

commit 0db7bbfac6
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 29 16:20:36 2023 +0000

    [Automatic update for 2023-10-29]

    Update manuf, services enterprise numbers, translations, and other items.

commit 5cddf3b0f0
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Oct 29 07:06:15 2023 -0400

    ZigBee: Fix decryption of first APS packet

    When processing a ZigBee network layer key security header with
    the nonce (which hence gives us the extended source address), go
    ahead and map that long address with the network layer short address
    immediately, instead of just with the IEEE 802.15.4 layer.

    This will mean that any Application Support Layer Data in the same
    packet as this first Network Layer security header will also have
    access to the long address and will be able to be decrypted (if
    we have the key via some source.)

    If we don't do this, then subsequent packets with the same network
    layer short address will find the long address by looking it up via
    the IEEE data table, but that doesn't work for the very first packet
    because we've already tried that lookup by the time we process the
    Security Header.

    Fix #16507

    (cherry picked from commit 41be4c8cf7e56265aa8184159d3b75120870b2e0)

commit 64a2a485e6
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Oct 27 21:02:21 2023 -0400

    Qt: Fix leak in prefs

    This prefSearchData struct is only used to carry a pointer and a
    module name into the prefs foreach function and can be declared
    on the stack. Either way, we don't want to leak it.

    (cherry picked from commit e15d826b53e8655d8719c84a94efa6c256b431ce)

commit 66212f3b0d
Author: João Valverde <j@v6e.pt>
Date:   Fri May 26 14:16:06 2023 +0100

    CMake: Remove module LocatePythonModule.cmake

    This module is unnecessary and frequently causes hard-to-debug
    issues during CMake's configure run. Nuke it.

    Additionally, it uses the Python imp module, which was removed
    in Python 3.12 (importlib has replacement functions since Python 3.4,
    but we don't need this, since we expect our modules to be inside
    our source tree.)

    (backported from 601bf39e6b2eaff9e77588ff1b1a8a987dad404d)

commit c9a595207e
Author: João Valverde <j@v6e.pt>
Date:   Wed Jan 18 01:26:54 2023 +0000

    CMake: Do no install some misc CMake modules

    These are build files, not part of the installation.

    (cherry picked from commit 728073ade057f5376f6b984115a962e8e812264b)

commit a03c91b229
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Wed Oct 25 12:29:19 2023 +0200

    IEEE 1722: Fix unitialized can_info

    The can_info should be filled before passing it to
    socket_call_subdissectors.

    (cherry picked from commit 75f50ad622834501c0e99139f61a7ba41190eb3e)

commit fe2890c135
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Tue Oct 24 09:23:23 2023 +0200

    Translation(4.0): Update to Transifex API v3

commit dd726b9b3c
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Oct 23 22:25:19 2023 -0700

    capture-wpcap.c: fix typo, move a #include.

    Fix a typo in a comment.

    Move a wsutil include in with most of the rest of the wsutil includes.

    (backported from commit a0edd523b4229898bfc9b6b73a80911924e314b0)

commit b406a055f6
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Oct 23 19:07:41 2023 -0700

    dumpcap: recommend upgrading Npcap for promiscuous-mode errors.

    If the user gets the "failed to set hardware filter to promiscuous mode"
    error, and they're running Npcap 1.71 to 1.73, recommend that they
    upgrade to the current version of Npcap.

    Clean up the helpful-hint generation code a bit while we're at it.

    (backported from commit 9375a43d485937e63668fc4f643e3322162587db)

commit cc16853eac
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Mon Oct 23 14:31:52 2023 +0200

    TECMP: Fixing length of CAN payload (BUGFIX)

    TECMP passes the wrong length for a CAN payload in the can_info data,
    which leads to subdissectors failing (e.g., ISO 15765).

    (cherry picked from commit 7f7e153100b4ad73b52c09a43ce0db17e61bc298)

commit 35d824427f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 22 16:20:52 2023 +0000

    [Automatic update for 2023-10-22]

    Update manuf, services enterprise numbers, translations, and other items.

commit 6c75482075
Author: Bart-Baekelandt <bart.stefan.baekelandt@gmail.com>
Date:   Wed Oct 18 23:53:40 2023 +0200

    DHCP: Fix offset for SIP Server (option 120)

    (cherry picked from commit 666a4f7f09ba14611d13d99e7d4a8724ed9339ee)

commit 86cb6b6418
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 18 19:51:17 2023 -0400

    gnutls: Set FIPS mode to lax if enabled

    As of GnuTLS 3.6.2, it's possible to set FIPS mode to non-enforcing
    when FIPS is enabled. That's what we want to do, for the same reasons
    as gcrypt and commit d5492abc89f526f04d9224051bde0b89d53c44a2

    Related to #18441

    (cherry picked from commit 3d4689d8195343e7a4c76f74ef043c06c63d7006)

commit 160d1e454a
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Oct 17 22:08:42 2023 -0700

    netscreen: do bounds checking for each byte of packet data.

    Make sure each byte we add to the packet data from the file fits in the
    buffer, rather than stuffing bytes into the buffer and checking
    afterwards.

    This prevents a buffer overflow.

    Fixes #19404, which was filed as part of Trend Micro's Zero Day
    Initiative as ZDI-CAN-22164.

    While we're at it, expand a comment and make error messages give some
    more detail.

    (cherry picked from commit 3be1c99180a6fc48c34ae4bfc79bfd840b29ae3e)

commit f81062a0e6
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 15 16:19:23 2023 +0000

    [Automatic update for 2023-10-15]

    Update manuf, services enterprise numbers, translations, and other items.

commit f72189ef99
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Oct 12 21:16:30 2023 -0400

    wireguard: Handle unexpected inability to decrypt due to FIPS mode

    Even though we require libgcrypt 1.8.0 starting with Wireshark 4.0,
    if libgcrypt is in FIPS mode Blake2S and ChaCha20, and hence Wireguard
    decryption aren't supported. We can only test this at runtime, not
    at compile time.

    For libgcrypt 1.10.0 and higher, we can force FIPS mode off, but
    not before. If we lack support, instead of having a console warning
    every startup (even if there isn't Wireguard) and failing with
    DISSECTOR_ASSERTs, don't attempt decryption and put expert infos
    into the tree instead.

    Note that running the tests will still fail in FIPS mode.

    Fix #18441

    (cherry picked from commit 66df826c47b5cbf8447aae6886f9282392151b53)

commit 5695663a6a
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 11 20:11:12 2023 -0400

    wireguard: Get rid of some redundant log warning text

    ws_warning already adds the function name, so we don't need
    to add it a second time with G_STRFUNC. Fixes:

    ** (wireshark:37760) 20:07:41.523125 [packet-wireguard WARNING] epan/dissectors/packet-wireguard.c:1899 -- proto_register_wg(): proto_register_wg: decryption will not be possible due to lack of algorithms support

    (cherry picked from commit df2f966d159e31cc3bd41774843bf15f30675543)

commit 7acbdb8dfc
Author: Dario Lombardo <lomato@gmail.com>
Date:   Fri Oct 13 15:49:16 2023 +0200

    github: fix macos workflow.

    (cherry picked from commit 28bc2c153622a98eb09ebe1f136b43b28eb619cd)

    Conflicts:
            .github/workflows/macos.yml

commit ce5576660a
Author: Mathis Marion <mathis.marion@silabs.com>
Date:   Fri Oct 13 10:04:41 2023 +0200

    Fix Wi-SUN LFNVER-IE display

    (cherry picked from commit 3f850e3d8a032a47b26fc24ad22183ec1b006f35)

commit 35025a2080
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 11 21:34:10 2023 -0400

    gcrypt: Disable FIPS mode if possible

    libgcrypt 1.10 added a new control command to force disable FIPS
    mode, regardless of any file or environment variable that would turn
    it on.

    FIPS mode makes it impossible to _decrypt_ non-NIST approved
    algorithms, both old insecure ones as well as simply unapproved
    ones like ChaCha20 and Poly1305. We're decrypting, not promising
    security.

    Related to #18441 (but doesn't help with distributions like the
    one in that bug, that have gcrypt older than 1.10.0)

    (cherry picked from commit d5492abc89f526f04d9224051bde0b89d53c44a2)

commit 923123e51d
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 11 19:23:27 2023 -0400

    wsutil: Do not use built in strcasestr

    System implementations of strcasestr are locale dependent; even
    though we always force to a UTF-8 locale, the Turkic languages
    produce a different result, as the upper case of i is U+0130,
    Latin Capital Letter I With Dot Above, and the lower case of I
    is is U+0131, Latin Small Letter Dotless i.

    For the purposes of dissectors we want the locale-independent ASCII
    search. (There may be exceptions in some user-facing GUI code.)

    FreeBSD, NetBSD, and macOS (but not OpenBSD currently) provide
    strcasestr_l, which could be used with the NULL (C) locale to
    produce the desired result.

    (cherry picked from commit f0df1484133386431c7f1c19f22f5c8639b2e826)

commit 51d88004d1
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Oct 11 16:51:56 2023 +0000

    wmem_list: increment count for insert_sorted

commit aa16212fe2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 8 16:19:58 2023 +0000

    [Automatic update for 2023-10-08]

    Update manuf, services enterprise numbers, translations, and other items.

commit 28ad7bdb67
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 4 19:50:48 2023 -0400

    ssh: Fix some invalid reads and writes, infinite loops

    Eliminate a few cases where tvb_get_ptr() is used with a certain
    length, but then the pointer can be accessed beyond that length,
    such as when an entire block is not present, or the SSH message
    length is (incorrectly) not a multiple of the block length.

    Don't return the offset on failure; return the entire tvb. The
    offset isn't incremented in that function, and returning the
    starting offset causes an infinite loop in dissect_ssh.

    For AES CBC we do *not* want GCRY_CIPHER_CBC_CTS (cipher text stealing)
    mode, which makes it impossible to use gcrypt on multiple blocks at
    a time.

    Fix #19369

    (cherry picked from commit 348c9991f955fe94d524050af6408fadda870a07)

commit cbdd6f1462
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Oct 6 15:30:03 2023 -0700

    Packaging: Make sure we stash our version info when creating a tarball

    (cherry picked from commit 82084f606fd8a3426d843219b79ce7d68fe931d5)

commit 2d71e2c95a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Oct 20 15:33:38 2022 -0700

    Packaging: Fix our tarball commit logic.

    If CI_COMMIT_SHA is set, it probably means we're building in GitLab CI.
    Prefer it over our stash commit ID.

    (cherry picked from commit 1321de7dc38ad981ffd8910e7bd348bef2cb9de9)

commit e3c8a4e8dd
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Oct 6 14:30:50 2023 -0700

    Tools: More update-appdata.py updates

    We don't need to fetch the most recent wireshark-* tag (which might not
    exist).

    (cherry picked from commit 5a2d1f11cad192935d550692775bc29c8e71e878)

commit 9e49d7da03
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Oct 6 13:48:51 2023 -0700

    Tools: Fix a comment in update-appdata.py

    [skip ci]

    (cherry picked from commit d0bc4c6505e361b2d943940b57acbc139b9b5791)

commit 366222a238
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Oct 6 12:27:14 2023 -0700

    GitLab CI: Update our Freedesktop metainformation when we build our tarball

    Fixes #19382

    (cherry picked from commit 8962b0c46b1c56692c96ea2d6f66fba12bce5f38)

    Conflicts:
            resources/freedesktop/org.wireshark.Wireshark.metainfo.xml

commit e2a842ef00
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Oct 4 17:11:22 2023 -0700

    Version: 4.0.10 → 4.0.11

    [skip ci]
