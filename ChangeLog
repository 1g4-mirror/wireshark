commit 786f6c71cc
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Jan 2 14:11:16 2024 -0800

    Prep for 3.6.20

    [skip ci]

commit 5e94986719
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 31 15:06:40 2023 -0800

    asn2wrs: Add recursion checks

    Add a recursion depth check whenever we have cyclic dependencies.
    Regenerate our dissectors.

    Fixes #19501

    (cherry picked from commit 8f797db63ca44875a07d0d8a5d298a79d09b44ec)

    Conflicts:
            epan/dissectors/asn1/x509sat/packet-x509sat-template.c
            epan/dissectors/packet-cmip.c
            epan/dissectors/packet-cmp.c
            epan/dissectors/packet-dap.c
            epan/dissectors/packet-disp.c
            epan/dissectors/packet-e2ap.c
            epan/dissectors/packet-glow.c
            epan/dissectors/packet-goose.c
            epan/dissectors/packet-h225.c
            epan/dissectors/packet-h245.c
            epan/dissectors/packet-h248.c
            epan/dissectors/packet-ieee1609dot2.c
            epan/dissectors/packet-ldap.c
            epan/dissectors/packet-mms.c
            epan/dissectors/packet-p22.c
            epan/dissectors/packet-p7.c
            epan/dissectors/packet-x509if.c
            epan/dissectors/packet-x509sat.c
            epan/dissectors/packet-z3950.c

commit e990e96b48
Author: Ilya Kulakov <kulakov.ilya@gmail.com>
Date:   Wed Dec 20 12:31:03 2023 -0800

    ChmodBPF: Specify AssociatedBundleIdentifiers in the Launch Daemon property list

    As per https://developer.apple.com/documentation/servicemanagement/updating_helper_executables_from_earlier_versions_of_macos

    (cherry picked from commit e07603d512bee0932c56205cbf55949d6bf55b8d)

commit fa8d02da01
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jan 1 12:25:09 2024 +0100

    Happy New Year 2024

    (cherry picked from commit 322ae0f0d86e62cedbea74dbe85fd9ca98d7f3a6)

commit 8837c1cf24
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 31 16:20:29 2023 +0000

    [Automatic update for 2023-12-31]

    Update manuf, services enterprise numbers, translations, and other items.

commit 2785d2ba45
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Dec 30 21:58:01 2023 -0800

    dumpcap: treat connect errors as remote capture errors.

    Treat errors beginning with "Is the server properly installed?" similarly
    to "The other host terminated the connection.", and don't tell the user
    to report them as Wireshark bugs.

    This should clear up at least some of the Wireshark side of #14920.
    (Libpcap should do a better job of reporting errors as well, although
    that will ultimately involve better libpcap APIs, for which there are
    other reasons as well.)

    (cherry picked from commit dc6f197726f8fbe60d2d9204ffefd22a6c470913)

commit 455aa2a204
Author: Ferry Huberts <ferry.huberts@pelagic.nl>
Date:   Thu Dec 28 21:58:05 2023 +0100

    packet-sv: fix the seqData validity

    Update to the latest specification, which specifies the currently used
    value for 'invalid' as 'backward compatible (do not use)'.

    See
      IEC 61850-9-2 Edition 2.1 2020-02,
      Section 8.6 Definitions for basic data types – Presentation layer functionality,
      Table 21

    Be aware that in the specification the bits are numbered in reverse (it
    specifies the least significant bit as bit 31 instead of as bit 0)!

    Signed-off-by: Ferry Huberts <ferry.huberts@pelagic.nl>

    (cherry picked from commit 1ccbc482a07683cddcd04df368e6d941bca993b1)

commit 135e0903af
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 24 16:20:37 2023 +0000

    [Automatic update for 2023-12-24]

    Update manuf, services enterprise numbers, translations, and other items.

commit c8ef9af699
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Dec 20 11:05:17 2023 -0500

    Qt: connect SCTP All Associations Analyze button correctly

    The filterPackets signal takes a QString by value, not by
    reference (which is fine in Qt due to implicit sharing), and
    must be connected correctly to work (at least on Qt6):

     ** (wireshark:829501) 10:56:20.423294 [GUI WARNING] -- QObject::connect: No such signal SCTPAssocAnalyseDialog::filterPackets(QString&,bool) in ui/qt/sctp_all_assocs_dialog.cpp:98
     ** (wireshark:829501) 10:56:20.423357 [GUI WARNING] -- QObject::connect:  (sender name:   'SCTPAssocAnalyseDialog')
     ** (wireshark:829501) 10:56:20.423382 [GUI WARNING] -- QObject::connect:  (receiver name: 'WiresharkMainWindow')

    Related to #19544

    (cherry picked from commit a0d904896dcc53f54023df26b85fcbc5b2533ee6)

commit ecb4a2f95f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 17 16:19:57 2023 +0000

    [Automatic update for 2023-12-17]

    Update manuf, services enterprise numbers, translations, and other items.

    services failed.

commit 929fcdb1cd
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Dec 13 09:13:59 2023 -0800

    GitLab CI: Switch to clang 17

    (cherry picked from commit 5353057795700e71ad1ea250c648f6c11065e3e7)

    Conflicts:
            .gitlab-ci.yml

commit a073e9a761
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Dec 12 20:49:51 2023 -0500

    Qt: Don't connect in the .ui file only to disconnect in constructor

    Don't connect the QDialogButtonBox accepted() signal to the
    dialog's accept() slot in the Qt Creator .ui XML only to
    disconnect that connection in the constructor.

    Apparently in Qt6 these things are parsed in somewhat different
    order, so the disconnection wasn't happening, leading to
    destroying the dialog while the FileDialog was still open.

    There's a case for moving the Save As actions to ActionRole buttons
    (though then the little save icon would have to be set manually.)

    Fix #19529

    (cherry picked from commit 897c94bd0422fb72c57aabddac91c8a0b8523156)

commit 451a43ded6
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 10 16:19:34 2023 +0000

    [Automatic update for 2023-12-10]

    Update manuf, services enterprise numbers, translations, and other items.

    services failed.

commit 1a158c9f32
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Dec 9 14:42:45 2023 -0800

    release notes: note support for if_tsoffset option in pcapng.

commit 649003c4cc
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Dec 9 12:15:50 2023 -0800

    nflog: time stamps are in seconds/microseconds, not seconds/nanoseconds.

    See

    1. https://www.tcpdump.org/linktypes/LINKTYPE_NFLOG.html

    2. The `nla_put(inst->skb, NFULA_TIMESTAMP, sizeof(ts), &ts))`
       call in net/netfilter/nfnetlink_log.c in the Linux kernel source.

    Add support for 16-byte and 12-byte seconds/microseconds time stamp, to
    match what we already have for seconds/nanoseconds time stamps, in
    `proto_tree_add_item()` etc., and use that.

    Fixes #19525.

    (backported from commit 17d479f87604da3859cb79323b6ce63d49f0af44)

commit 2af62953be
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Dec 7 18:18:49 2023 -0800

    GitLab CI: Make sure we set the ccache size in our fuzz jobs

    (cherry picked from commit 9a9b2e114fe29bfed31f29c231da8a975434d2b8)

commit d64219fd39
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 3 16:21:32 2023 +0000

    [Automatic update for 2023-12-03]

    Update manuf, services enterprise numbers, translations, and other items.

    services failed.

commit eabcb4a25f
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Nov 28 22:43:48 2023 -0800

    pcapng: support the if_tsoffset option.

    When calculating packet timestamps, add the timestamp offset to the
    seconds value of the timestamp.

    At least one DPDK developer considered using if_tsoffset, but abandoned
    the idea because of the lack of Wireshark support:

    https://lore.kernel.org/all/36758990.XM6RcZxFsP@thomas/t/#mafbe5280ba947327be1798bf15e0781d63b049a7

    and the pcapng code in the Rust pcap_parser crate:

    https://docs.rs/pcap-parser/latest/pcap_parser/

    supports if_tsoffset.

    libpcap doesn't currently support it, but I'll be changing it to do so.

    While we're at it, update comments to reflect the deprecation of
    if_tzone (never well defined, and, unless you can map them to IANA
    timezone names or something such as that, far from sufficient to allow
    converting UTC to the appropriate local time), and the clarification of
    the definition of if_tsoffset, in the pcapng spec.

    (backported from commit 1c2093eec8dc8667c9f6b7c5ec9f67e0c86c7571)

commit 4d1b9d575c
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Nov 28 15:35:57 2023 -0800

    debian: fix names in symbols file.

commit 225103b487
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Nov 28 00:17:23 2023 -0800

    libwiretap: add support for signed integer-valued options.

    if_tsoffset is one such option in pcapng.

    (backported from commit a8eef49a9edc372b1ea1ec06bb7d9cf6b9fa91a5)

commit f30d2427ae
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Nov 27 22:58:41 2023 -0800

    Handle the if_fcslen option as having an unsigned 1-byte value.

    That's how it's defined in pcapng.  Internally, we have a per-interface
    FCS length value that's a signed 32-bit value, with -1 meaning
    "unknown", but all possible values of if_fcslen fit in there.

    When printing it, print it as unsigned.

    (cherry picked from commit 14c524a278ee71de4120a5614da2d0493655b327)

commit 1833406733
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Nov 27 12:11:15 2023 +0100

    icmpv6: Make ND_RA_FLAG_RSV the two last bits

    The two last bits in Router Advertisement flags are reserved.

    (cherry picked from commit 83c94249b493e96dc5611045e9422e828d0853ec)

commit 7250621209
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Nov 27 20:50:46 2023 -0800

    editcap: fix a tpyo in a comment.

    [skip ci]

    (cherry picked from commit 10eece14e3b87a904e51de5c94c83a16ed526822)

commit 3de191d217
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 26 16:19:48 2023 +0000

    [Automatic update for 2023-11-26]

    Update manuf, services enterprise numbers, translations, and other items.

    services failed.

commit c96b4ec92b
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Sat Nov 25 16:21:02 2023 +0100

    Qt: Disable Ok button on invalid range preference

    Disable the Ok button when having a invalid range preference.
    This also prevents a crash in on_buttonBox_accepted() when doing
    pref_unstash().

    Enable Ok button for string preference.

    (cherry picked from commit d762dd521a34cf6c85d221fda7bd60e5cbb224ef)

commit 4953fa99e7
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Nov 23 13:47:51 2023 -0500

    gvcp: Don't try to add a NULL string to a column

    This was caught as an invalid argument by g_strlcpy before 4.2,
    but it was never a good idea.

    Fix #19496

    (backported from commit a8586fde3a6512466afb2a660538ef3fe712076b)

commit 4e966f2ade
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Nov 23 11:03:15 2023 -0800

    GitLab CI: Remove the ABI Check job

commit 8991758cb0
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Nov 20 20:16:57 2023 -0500

    Qt: Prevent infinite recursive stack smash in CaptureOptionsDialog

    updateInterfaceColumns can call setData, which triggers a line
    of signals QAbstractItemMode::dataChanged -> QTreeWidget::itemChanged
     -> CaptureInterfacesDialog::interfaceItemChanged->
     back to InterfaceTreeWidgetItem::updateInterfaceColumns again.

    Block the signals so that doesn't happen. It's rare, but can
    happen with cards that falsely report that they support monitor
    mode but then turn out not to so when we try to actually set
    monitor mode (23d1fed59f20e813088252bac268df142fa96e80)

    Fixes #16693

    (cherry picked from commit d1699f0c674df41acd58a377ac509199f4b77849)

commit c1aa5b0ec5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 19 16:19:09 2023 +0000

    [Automatic update for 2023-11-19]

    Update manuf, services enterprise numbers, translations, and other items.

commit b7b6bb8d73
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Nov 17 20:47:55 2023 -0500

    Fix saving recently used capture filters

    The recently used capture filters list was organized so that
    the newest filters were last, but when writing to recent_common
    we start with the beginning of the list and write up to the max.
    This meant that only the first 20 entries ever used for a profile
    would be written, after which the list would be frozen.

    Fix that. The best way to do that is to keep the most recently
    used filter first, in presentation order, by prepending each
    filter. That way we can AddItems to the combo boxes and write
    to the file in the natural way. In order to do so, we have to
    reverse the list after reading all the entries from the recent_common
    file on startup. This also has better performance, as it's O(N) to
    prepend a bunch of list items and them reverse them, but O(N^2)
    to add N list items to the end of a linked-list (that doesn't have
    a pointer to the end, unlike a GQueue.)

    Fix #12918

    (cherry picked from commit 2b4c88cb42182b05dafd7fac5ffc88783f9f618a)

commit 43a8ace542
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Nov 18 06:57:06 2023 -0500

    Qt: Don't try to compile capture filters for unknown dlts

    If an interface's active_dlt is set to -1 (an invalid value, used
    when permissions are bad, or set by CaptureOptionsDialog for
    "link-layer types libpcap/WinPcap/Npcap doesn't know about"),
    don't try to compile and check capture filters. Give the same
    yellow Deprecated background and warning about being unable to
    check the capture filter as for the DLT_USER types, instead of a
    cryptic error message.

    Fix #19480

    (cherry picked from commit 49f5bea629c6160b20faf46bac506e1862b257b6)

commit fc416f3f9c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Nov 15 13:04:14 2023 -0800

    Version: 3.6.19 → 3.6.20

    [skip ci]
