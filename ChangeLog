commit 123e11739e
Author: Will Aftring <will@wanl.blue>
Date:   Wed Jul 16 11:12:34 2025 -0400

    kerberos: Add new IAKerb error codes to Kerberos asn1 files

    (cherry picked from commit 2a0dc252538ffc132a502bcd6da7a27a9c03ac8b)

    dc9bebe7 Add IAKerb error codes to Kerberos asn1 files
    5941a7a8 Fix alignment

    Co-authored-by: Will Aftring <will@wanl.blue>

commit 99257c86fe
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jul 16 13:51:19 2025 +0000

    DLT: Register DLT storage dissector after registering its protocol

    Since this handle is registered to a different sub-protocol, register
    in the appropriate registration function. Otherwise it's being
    registered to the 0 protocol.

    Fixup 5468611d57cb0302d4f0f359f79c0bedc66ee888

    (cherry picked from commit e1b17d89c29d1191c1f4cd74d8a6d3166581d66d)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit b42cc40d88
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jul 14 16:37:03 2025 -0700

    Windows: Update GnuTLS to 3.8.10

    (cherry picked from commit c1bf5993bc53df246345dd97f2b1274a7ad38f49)

    Conflicts:
            tools/win-setup.ps1

commit 94303e3d22
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jul 14 16:03:34 2025 -0700

    macos-setup: Update GnuTLS to 3.8.10

    (cherry picked from commit 6854d872ba9b6a365b1d82fd91c7f34592343691)

commit a4838a2e0a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 13 09:17:08 2025 +0000

    [Automatic update for 2025-07-13]

    Update manuf, services enterprise numbers, translations, and other items.

commit c0bef8d6a5
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Jul 10 13:31:00 2025 +0000

    ipsec: Fix up bogus padding all-zeroes check

    The continue statemetn wasn't correct, because it wanted to break out
    of two levels of nested loop but was only continuing the for loop.
    Make the override a static function (we could also have a goto.)

    Fixup 2c84133c1e284499eff20530b6728a6f1eeb735e

    (cherry picked from commit 96c8d709b485d8779e38fa283eabd8cab1ad3c1a)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit cf91d33b31
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jul 8 16:45:49 2025 +0000

    androiddump: Have a timeout with non-blocking sockets on Windows too

    After ae9da806947f66d2ea8bf77ca9c2ccdcd89f5483 androiddump properly
    checks to see if sockets timeout on Windows (recv doesn't set errno
    on Windows), so we can use a timeout instead of stalling.

    Fix #20526

    (cherry picked from commit 0396917654a76302aed83aeeb85616b8b8d79e7c)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 99cb72c290
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jul 8 13:52:15 2025 +0000

    http-urlencoded: Handle byte sequences with no '='

    The "aberrant monstrosity" that is the application/x-www-form-urlencoded
    format is supposed to be serialized with a '=' when there is a name with
    an empty string value, but parsing is supposed to handle the case where
    there is no '=' separator by treating it entirely as name.

    Always skip on where the '&' was found when finishing a name-value
    pair byte sequence to handle both cases with a minimum of tests.

    https://url.spec.whatwg.org/#application/x-www-form-urlencoded
    https://url.spec.whatwg.org/#urlencoded-parsing
    https://url.spec.whatwg.org/#urlencoded-serializing

    Fix #20615

    (cherry picked from commit 0102bc0d6c87e0e795a8723260df7b3e45749f9d)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 0d31dd8664
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jul 8 11:41:53 2025 +0000

    DNP3: Fix Y2038 issue with timestamps on LLP64 systems (e.g., Windows)

    Cast to a time_t, not a long, when storing in the nstime_t secs, so as
    to work on platforms where time_t is 64-bit but long is 32 bit, such
    as Windows.

    These should just be added with ENC_TIME_MSECS|ENC_LITTLE_ENDIAN, which
    will be changed in a later commit, but this one liner is easier to
    backport.

    Fix #20618

    (cherry picked from commit cb3333ce21c4b856855da3ee4d5840f1d25ff36a)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit f59ef8c430
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 6 20:04:07 2025 -0500

    tools: Use a more unique fuzz ID

    If CI_JOB_ID is set, use it to identify our fuzz artifacts.

    (cherry picked from commit 95dc482a9857fc927b5cce61f1a83860178be130)

commit 057602dcb8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jul 7 13:49:36 2025 -0500

    GitLab CI: Remove an unneeded variable

    We set CLANG_VERSION in /clang-latest.env.

commit 64f4b947ff
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jun 30 11:18:12 2025 -0700

    DOF: Widen a loop variable

    Fix

        /wireshark/epan/dissectors/packet-dof.c:3554:21: error: loop variable has narrower type 'uint8_t' than iteration's upper bound 'const int' [bugprone-too-small-loop-variable,-warnings-as-errors]
         3554 |         for (i = 0; i < addr_key->addr.len; i++)
              |                     ^

    (cherry picked from commit d97ab008562d5be1cca1994f9f1c8bc8dd4858aa)

commit 2198ef985f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jun 30 11:20:41 2025 -0700

    ASTERIX: Widen a loop variable

    Fix

        /wireshark/epan/dissectors/packet-asterix.c:61495:35: error: loop variable has narrower type 'uint8_t' than iteration's upper bound 'const unsigned int' [bugprone-too-small-loop-variable,-warnings-as-errors]
         61495 |             for (i = 0, size = 0; i < field->header_length; i++) {
               |                                   ^

    (cherry picked from commit 6a6f5da68ef77ea285acaf6d75142b6c9aa5d62f)

commit b89ef84e6c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 6 09:16:27 2025 +0000

    [Automatic update for 2025-07-06]

    Update manuf, services enterprise numbers, translations, and other items.

commit c2b60cd0d1
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Jul 3 14:14:52 2025 +0000

    DTLS: Decrypt DTLS 1.2 after renegotiation

    DTLS, unlike TLS, only attempts decryption if SSL_HAVE_SESSION_KEY
    is set (for 1.2). However, when renegotiation starts, the
    SSL_HAVE_SESSION_KEY bit gets cleared from the state by
    ssl_reset_session, indicating that the session key needs to be
    re-derived.

    At this point, the session is in a liminal state with respect
    to the session key - the old session key needs to be used for
    decrypting Encrypted Handshake Messages in order to get the new
    key, but the bit needs to be clear in order for ssl_finalize_decryption
    to derive the new session key.

    TLS does not look at SSL_HAVE_SESSION_KEY before deciding whether
    or not to attempt decryption. Have DTLS do the same thing.

    DTLS has a special check for whether or not the cipher has null
    encryption, while TLS doesn't but packet-tls-utils.c handles
    ENC_NULL cipher suites appropriately. Remove the special DTLS
    handling and behave as TLS does, so as to remove a test on
    SSL_HAVE_SESSION_KEY.
    (The DTLS special handling for NULL ciphers was added several years
    earlier than the TLS generalized null cipher handling, compare commits
    48d421ec9987409df46379e7ae0cf6c081491769 and
    126c94d8c834538e3a2bc4bfe8f9534d6c189de5 and
    8058ba646aee63d13405d8b7152a6aeb37fb6113
    to
    f96c56103b12302b2b235382627f8c035a890bdf
    )

    The NULL cipher DTLS file from #5863 still works with this change.

    Fix #20362

    Note: we likely still need the work for TLS in #18867 for handling a
    case where a new cipher suite was selected in renegotiation than
    chosen for the first handshake. That doesn't occur in the sample
    for this issue.

    (cherry picked from commit a9540a4b40200475ca5498831c63d9902af5f2fa)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 53b08dc950
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 2 16:58:27 2025 +0000

    isobus: Fix description of the Get version command

    (cherry picked from commit 7a6763dcdcc9a256024bc2fa52d39ebd21fb2e74)

    Co-authored-by: Miklos Marton <martonmiklosqdev@gmail.com>

commit 7a4c8b3c60
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 2 16:57:27 2025 +0000

    gryphon: Fix Coverity CID 1159201

    Rather than taking the reported length remaining earlier and then
    subtracting 3 from it, just take it later, which handles underflow.

    (cherry picked from commit a00ef929df97291640838b18389703e56fcafe25)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 9619829d7c
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Jul 1 10:19:45 2025 +0000

    epan: Mark truncated improvement

    Do not add a leading space in the label when prepending the
    truncation mark […] using name_pos==0 (only data or only a field_name).

    (cherry picked from commit 2d927d69cfb7d5e5e54f44862ebc8431a32c6bff)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit f6ac21e4e1
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Jul 2 09:55:56 2025 +0000

    gsm_sim: Make p3 optional in default dissection

    The P3 parameter (Le or Lc) is not part of the command APDU header
    and is optional.

    (cherry picked from commit b70913371c1a499f2284b7c36c20a453c098c74c)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit f178a816f3
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Jul 1 11:09:04 2025 +0000

    gsm_sim: Detect Le byte on an unknown command type

    If we have a nonzero P3 byte with at least that length
    of data following it (= Lc + Data), and then there's one
    more byte present past that, it is Le. Possibly not if this is
    a GSMTAP capture from SIMtrace + SIMtrace2, which always
    combines the command and response APDUs into one packet:
    https://github.com/yarrick/scsniff/issues/1#issuecomment-2295835330

    Ping #20115

    (cherry picked from commit 98468ab88762d3651dc82d44a51787fb3ecf28b3)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit b1abf14349
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Jul 2 02:18:07 2025 +0000

    capture_opts: set the timestamp type to a *copy* of the default.

    Timestamp types for interfaces are strings, not the reuslt of calling
    pcap_tstamp_type_name_to_val() on the string.  If the timestamp type for
    an interface is changed, the old timestamp type is freed and replaced by
    a copy of the new type; this means that, when we create a set of options
    for a new interface, we must set its timestamp type to a *copy* of the
    default, so that, if it's subsequently freed, we're not freeing it out
    from under the default or from other interfaces that have been assigned
    the default.

    That's done with other string options, so it should be done here as
    well.

    This fixes a crash reported on the security mailing list.

    (cherry picked from commit 7867ac96dd1b2ea5b4514c1fca2ca95dbeffe47d)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit 8a62cb0295
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jul 1 00:05:07 2025 +0000

    Qt: Fix crash reloading Lua plugins with non default non custom columns

    Since register columns now get _ws.col registered fields, we have to
    recreate the columns even when there aren't custom columns, as one
    of those might have changed (as it does when reloading Lua plugins.)

    We don't have to if pref.col_list is NULL and stays NULL (the columns
    aren't registered and deregistered in that case), and if it switches
    to or from NULL, we recreate the columns anyway.

    In the case where the column preference was not the default, but it
    didn't contain any custom columns, we weren't rebuilding the columns.

    Fixup 1b82eda9ebb72a4ac5198a44072f8694ffc1e060

    Fix #20588

    (cherry picked from commit 219729d46d26ab36b772bd0d91fb0628756054ed)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 9283777ca0
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 29 09:15:49 2025 +0000

    [Automatic update for 2025-06-29]

    Update manuf, services enterprise numbers, translations, and other items.

commit ee99d8cfa7
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Jun 29 01:40:25 2025 +0000

    UDS: Fixing RDBPI payload (Bugfix)

    The UDS standard has no payload for the response.

    Closes: #20589

    (cherry picked from commit f7c34b24f1f4ec05ed9d03b9c22981b1307d1ef0)

    Co-authored-by: Dr. Lars Völker <lars.voelker@technica-engineering.de>

commit 5446c102d7
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jun 28 15:38:42 2025 +0000

    Qt: Use field value representations only once

    Fixes #20601

    (cherry picked from commit a2c98f8f19c056420b8377bb4f02c8c588255382)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 8d38837353
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sat Jun 28 10:15:36 2025 +0000

    Qt: Use field value representations when available

    Fixes #20590

    (cherry picked from commit 55ecc555a4147da1821fb267abdf3c52db85a952)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit f2806a96f8
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Jun 26 15:07:51 2025 +0000

    sll: Treat GRE over IPv6 as GRE over IPv4

    In ARPHRD_IP6GRE, like ARPHRD_IPGRE, the protocol type field in
    Linux cooked captures appears to be a GRE protocol type, which, while
    defined to be Ethertypes, has a few protocols with historical other
    values and a few protocols encapsulated in GRE differently than
    encapsulated directly over standard L2 protocols.

    See the example file using NHRP in
    https://gitlab.com/wireshark/wireshark/-/merge_requests/20242#note_2581638364

    (cherry picked from commit 6ee99b00f053550a0fb97fb2c1472104c4ee5afa)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit b434c8b41b
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jun 23 11:48:00 2025 +0200

    Qt: Copy data in Show Packet Bytes dialog

    Copy the tvb data to ensure it's available after selecting
    a different packet in the list. This will also enable some
    other functionality after closing the file.

    (cherry picked from commit 1206abdecac42872b5954920459b78b88b4c962e)

commit c89405a660
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jun 23 13:46:43 2025 +0000

    Qt: Initialize show selected enabled

    The Show Selected menu item only works when showing all bytes.
    Initialize this setting after reading settings in recent.

    This issue was introduced in commit 6738a873b3.

    (cherry picked from commit c0e59c5d62352cefdc6cad1eba08f077084f8f61)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 2e88d93067
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jun 23 12:25:59 2025 +0000

    etsi_card_app_toolkit: Dissect DNS server address

    The DNS server address depends on command type OPEN CHANNEL,
    not command number 0x40.

    This issue was introduced in commit e398c8ed6b.

    (cherry picked from commit d9a3ebff61fb98014ef094e2612ca01bd325f7d8)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 07f250a9a6
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jun 23 10:12:09 2025 +0000

    Qt: Fix include in proto_tree

    Add include <epan/print.h> for get_node_field_value() instead of
    the implicit include via show_packet_bytes_dialog.h and file.h.

    (cherry picked from commit 3c36ba82aac093677c2d950d8fc3f1af47d49a18)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 69895484fc
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 22 09:16:32 2025 +0000

    [Automatic update for 2025-06-22]

    Update manuf, services enterprise numbers, translations, and other items.

commit 8f1a2bfe55
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jun 21 08:11:10 2025 +0000

    Gryphon: Fix retrieval of destination ChannelID in CMD_MSGRESP_MODIFY

    The destination channel ID is found at offset - 9, not offset - 5;
    using offset - 5 is presumably from forgetting about the 4 byte
    command header between the Command Data and the Frame Header:

    https://www.dgtech.com/product/gryphon/manual/html/GCprotocol/client_howto/GCframeformat.php#Commands
    https://www.dgtech.com/product/gryphon/manual/html/GCprotocol/commands/Responder/modify_response.php

    Note that cmd_sched already correctly uses offset - 9 to retrieve the
    destination channel ID in an analogous situation.

    Also, do not use the %c printf specifier to print a byte, as that is
    not guaranteed to be valid UTF-8 in fuzzed data.

    Fix #20585

    (cherry picked from commit 24b7055869eab25b01433e90f2fb9972dfe9c445)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 6acef4d4df
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Thu Jun 19 17:38:26 2025 +0200

    TETRA: correct the length of the call identifier field

    as specified in the standard, the call identifier is a 14 bit word,
    but in many pdu-types in the in tetra.asn the call identifier was
    declared as a 10 bit word.
    This mistake is corrected, and the file epan/dissectors/packet-tetra.c
    is automatically generated with asn2wrs.py

    For reference see the following tables of ETSI TS 100 392-2:
    - Table 14.21
    - Table 14.23
    - Table 14.31
    - Table 14.32
    - Table 14.24
    - Table 14.22
    - Table 14.5
    - Table 14.4
    - Table 14.7
    - Table 14.8
    - Table 14.6
    - Table 14.16
    - Table 14.18

    (cherry picked from commit ed083678b7cbabad055bf60666e43511e0f8bd1d)

    Co-authored-by: Diego Figueroa <d.figueroa@procitec.de>

commit 1bd61b8ef5
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Jun 18 10:36:11 2025 +0000

    file: Count OPT_PKT_DROPCOUNT

    Add the block option OPT_PKT_DROPCOUNT to cf->drops. This will
    show the number of dropped packets in the status bar, and in the
    Capture File Properties dialog if the capture does not have a
    Interface Statistics Block.

    (cherry picked from commit 97afd107b75b3995293ee566e613542b6ac806c4)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 65bedf6b9e
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jun 17 15:10:55 2025 -0400

    androiddump: Use WSAGetLastError instead of checking errno on Windows

    "Error codes set by Windows Sockets are not made available through the
    errno variable... The WSAGetLastError function is intended to provide a
    reliable way for a thread in a multithreaded process to obtain per-thread
    error information."

    https://learn.microsoft.com/en-us/windows/win32/winsock/error-codes-errno-h-errno-and-wsagetlasterror-2

    So on Windows, do not check errno to determine if we have timed out but
    instead check if SOCKET_ERROR was returned and call WSAGetLastError.

    Ping #20526

    The next commit will re-introduce a timeout on non-blocking sockets
    (this change prevents re-opening #20386.)

    (backported from commit ae9da806947f66d2ea8bf77ca9c2ccdcd89f5483)

commit d8f7fbb2b7
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Jun 18 10:36:50 2025 +0000

    Qt: Calculate dropped packet count percentage

    Calculate the dropped packet count percentage from the total
    number of packets, not only the captured packages. This gives
    a better number for percentage of dropped packets.

    (cherry picked from commit 1409ce6d24211292293e003b94659c4635c62fce)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 0a2006a722
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jun 17 22:06:38 2025 +0000

    stcsig: Parse timestamp ns values correctly

    (cherry picked from commit b7060b512530a6951e6627032e1426f9cf3a3487)

    Co-authored-by: Ethan Stewart <estewart@iol.unh.edu>

commit ebd9f2a599
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Tue Jun 17 00:53:33 2025 +0200

    MBIM: Fix MBIM_CID_MS_LTE_ATTACH_STATUS 3.0 dissection

    MBIM_CID_MS_LTE_ATTACH_STATUS 3.0 inserts nw_error (4 bytes) as the
    second field.

    (cherry picked from commit 92e83a0d58bc16a29da7c78061789b58846a3828)

    Co-authored-by: Odysseus Yang <yongyang@microsoft.com>

commit c9bb1bf4f1
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 15 09:16:18 2025 +0000

    [Automatic update for 2025-06-15]

    Update manuf, services enterprise numbers, translations, and other items.

commit a71b0af310
Author: Guy Harris <gharris@sonic.net>
Date:   Sun Jun 15 09:01:39 2025 +0000

    editcap: make sure a file name was specified for --inject-secrets.

    Bug reported in a wirehark-security message.

    (cherry picked from commit 4c685ba9cc803bd22537bd2dd44cbcccd199a422)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit 0c4fca9991
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Sat Jun 14 17:46:35 2025 +0200

    rtcp: Fix erratic calculation of num_of_reported_pkts (RFC8888 Erratum ID 8166)

    See [Erratum ID 8166](https://www.rfc-editor.org/errata/eid8166) for
    [RFC 8888](https://www.rfc-editor.org/rfc/rfc8888).

    The code in epan/dissectors/packet-rtcp.c erratically calculates
    num_of_reported_pkts for "the range begin_seq to begin_seq+num_reports
    inclusive", when it should be for "the range begin_seq up to, but not including,
    begin_seq+num_reports".

    (cherry picked from commit cfda5ab07ecc32f956da9251e6af1766784d3ce6)

    Co-authored-by: Nico Cvitak <ncvitak@apple.com>

commit 0114ab63a9
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Jun 12 09:54:35 2025 -0700

    pcapng: report an error for unknwn Netflix BBLog block types.

    Otherwise, reading the file will stop before reading all of the blocks,
    without any indication  of what happened.

    (Already done in the main branch, as part of a significant change to
    provide mechanisms to allow individual custom block and option types to
    be added without having to modify core Wireshark code.)

commit b500508fd3
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jun 9 18:56:07 2025 +0200

    Qt: Add missing numerusform

    Add numerusform for "%Ln Selected Personal Profiles" and
    "Delete comments from %Ln packets".
    (cherry picked from commit 4aa1b3d65ae82f66242bfb994c2a17b56244fa0e)

commit aa16cd27cc
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jun 9 18:47:26 2025 +0200

    Qt: Plural and translatable "days"

    Make the capture file elapsed "days" plural and translatable.
    (cherry picked from commit 94f8f2f872775db611bf7c72afcccb939f94f0a2)

commit b4c8898059
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 8 09:15:58 2025 +0000

    [Automatic update for 2025-06-08]

    Update manuf, services enterprise numbers, translations, and other items.

commit e836304fa1
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jun 7 11:50:22 2025 +0000

    NPCAP: Update to 1.80

    (cherry picked from commit 3baf0782059da5682da649d17db35fb10467349f)

    Co-authored-by: Anders Broman <a.broman58@gmail.com>

commit e7b96a41f6
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jun 4 15:13:03 2025 -0700

    Version: 4.4.7 → 4.4.8

    [skip ci]
