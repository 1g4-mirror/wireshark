commit fb523858cc
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Oct 3 18:47:30 2023 -0700

    Prep for 3.6.17

commit 52a435e916
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Sep 29 15:01:13 2023 -0700

    GitLab CI: Generate Sparkle signatures on macOS

    (cherry picked from 19a8e8eb and related commits)

    (cherry picked from commit cfe9bd8df578a4d140a72de096b2fe4512bc3f94)

    Conflicts:
            .gitlab-ci.yml

commit 7c6ccacfd2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Oct 2 13:04:38 2023 -0700

    GitLab CI: Fix a regex

commit c1e1aef114
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Oct 2 10:49:30 2023 -0700

    GitLab CI: Display filter reference workflow updates

commit 2b68b7ea6d
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 1 16:18:59 2023 +0000

    [Automatic update for 2023-10-01]

    Update manuf, services enterprise numbers, translations, and other items.

commit 33c5fe55bb
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Sep 30 21:10:20 2023 -0400

    wsutil: memset mempbrk pattern when compiling

    Most of uses of ws_mempbrk use static ws_mempbrk_pattern structs so
    the pattern is automatically initialized to zero, but ensure that
    it is zero so that locally declared patterns don't have to be
    declared with = {0} (e.g., in cf_find_packet_data, where data is
    currently used unitialized but the compiler and static analysis
    doesn't catch it).

    This also allows re-compiling with a new pattern later.

    (backported from commit 3a0e70d6eba7d241e01e7091c450fe2c6f09f464)

commit de05506c46
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 27 20:42:31 2023 -0400

    Qt: Fix highlighting of protocol bytes when clicking proto tree item

    Commit d8ac2a046b85823019b6826e505aaa538e223484 broke the secondary
    highlighting of the surrounding protocol bytes when clicking a proto
    tree item, because it didn't find and set the parent field, which
    controls that setting.

    The field is selected twice by the ByteViewTab when clicked, once
    triggered by selectedChanged(), and once by clicked(). Previously
    only the former marked the protocol bytes, causing some brief
    flickering. Note that keyboard navigation and clicking the ByteViewText
    always worked to highlight the protocol bytes. (What is really needed
    is an equivalent to selectedChanged() that is sent even when the newly
    selected field is the same as the old one.)

    Also parent the new FieldInformation with the ProtoTree, so that
    ProtoTree::selectedFieldChanged() doesn't process a signal from
    the ProtoTree itself and clear and reselect an extra time.

    (backported from commit 24d88d3b74ec5b51568d2dbb8bc5a1d3ef39b9cd)

commit 09f5e23b20
Author: David Perry <boolean263@protonmail.com>
Date:   Tue Sep 26 08:02:16 2023 -0400

    dumpcap: `RINGBUFFER_MIN_NUM_FILES` logic error

    If `RINGBUFFER_MIN_NUM_FILES` is set greater than 0 in ringbuffer.h,
    a logic error causes that number of files to be used regardless of the
    user's desired number. Add braces to remove the logic error.

    (cherry picked from commit 47ae3fcdce7e351433605770ffe65da9aca676f2)

commit 47767a5b3a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 25 10:33:53 2023 -0700

    GitLab CI: Adjust fuzz times

commit de4dedc278
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Mon Sep 25 11:59:53 2023 +0000

    ieee1905: Fix wrong tfs for BSS Configuration Report TLV

commit 91b0f3260d
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 24 16:20:35 2023 +0000

    [Automatic update for 2023-09-24]

    Update manuf, services enterprise numbers, translations, and other items.

commit 5dfc479a5c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 21 18:22:03 2023 -0700

    GitLab CI: Fix a path

    Use Minio mc and not Visual Studio's Message Compiler.

    (cherry picked from commit cf5a2bba0dd53c806f0791099b035a64803087a7)

    Conflicts:
            .gitlab-ci.yml

commit 39c7f21777
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 21 14:08:58 2023 -0700

    GitLab CI: Use Minio mc to upload Windows packages

    (cherry picked from commit f81a863ed48778618a8990fb099597177919adea)

    Conflicts:
            .gitlab-ci.yml

commit 19e330f6be
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Sep 20 13:15:17 2023 -0700

    GitLab CI: More macOS code signing updates

    (cherry picked from commit 9c27eeb5ec3f07ff6762789dc41d4e58feed99f4)

    Conflicts:
            .gitlab-ci.yml

commit d237c3dbbc
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Sep 19 18:22:55 2023 -0700

    GitLab CI: Update our macOS code signing identity

    (cherry picked from commit e9695cd2642c59262325cecf66b474efc525d0b1)

commit e06e94eae5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Sep 19 13:31:20 2023 -0700

    GitLab CI: Set the macOS Arm CMAKE_PREFIX_PATH

commit 802a453904
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 18 17:08:27 2023 -0700

    GitLab CI+macOS: Update code signing

    (cherry picked from commit a43a1645e596374b2302d3e4c88988102487f143)

    Conflicts:
            .gitlab-ci.yml

commit 590f487a6b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Sep 19 08:46:34 2023 -0700

    GitLab CI+macOS: Remove a CMake flag that's no longer valid

    (cherry picked from commit e636669dd5bfab6551ff6e3bfcb37258b30e5d97)

    Conflicts:
            .gitlab-ci.yml

commit 71accea021
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 14 18:12:18 2023 -0700

    test: Skip global name resolution tests on macOS

    Global name resolution tests on macOS require adding a 'hosts' file to
    Contents/MacOS in the application bundle. Newer versions of Xcode appear
    to leave this unwritable after we've created our application bundle. We
    arguably shouldn't modify the application bundle anyway, so skip global
    name resolution tests if we have an application bundle.

    (cherry picked from commit a7cf7fd56198fdce5462788d634bdc0669cf85ea)

    Conflicts:
            test/suite_nameres.py
    (cherry picked from commit 830b63855f9f0c6d636c4752852d7c016fd9a4c5)

commit 09ac11e0d4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 18 14:18:01 2023 -0700

    GitLab CI+macOS: Move notarization to GitLab CI

    Switch to notarytool since the notary service will stop supporting
    altool soon.

    (cherry picked from commit a00771d9c23fb5c348414f0cde0b3744968a4175)

commit 895e7e0fca
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 17 16:18:35 2023 +0000

    [Automatic update for 2023-09-17]

    Update manuf, services enterprise numbers, translations, and other items.

commit fb03143d15
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Sep 15 17:01:22 2023 -0400

    RTP: Allow desegmenting on top of TCP desegmenting (RFC 4751)

    Save the current desegmentation state and restore it instead of
    setting it back to zero. This is needed in the case of RFC 4751
    RTP framed over TCP, where multiple RTP packets are contained in
    one TCP/IP frame, and the preference to check for RTP payload
    segmentation is enabled as well (as it is by default.)

    That's somewhat unusual, but it could happen if RTP packets over
    UDP use fragmentation, and then are individually encapsulated in
    TCP (without combining the payload) for forwarding by a middlebox,
    and then something like TSO is used.

    Fix #19345

    (cherry picked from commit 9f608b0fa0ea3ca3816976a6d20a0bc3a50dd49c)

commit 56a2e4249c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 14 13:38:05 2023 -0700

    macOS: Fix our dmgbuild configs

    Newer versions of dmgbuild don't use biplist and neither does our
    config, so don't try to import it.

    [skip ci]

    (cherry picked from commit 61c0d095823e1fecbeab8fda54f4f4d3e6cf892e)

    Conflicts:
            packaging/macosx/logray-app.dmgbuild.in

commit 52b5a3aafb
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Sep 12 20:47:45 2023 -0400

    SCCP: Fix double-shifting/masking of RSN

    Just add the values with proto_tree_add_item. Getting the
    values, shifting, and then adding them with proto_tree_add_uint
    with a bitmask set ends up shifting twice.

    Fix #19336

    (cherry picked from commit fb845cc4c483bbbbc2ebdc65998220cdd02aa7ee)

commit 71fc6b74c2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 10 16:19:01 2023 +0000

    [Automatic update for 2023-09-10]

    Update manuf, services enterprise numbers, translations, and other items.

    services failed.

commit a9324b904a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Sep 6 18:23:55 2023 -0700

    GitLab CI: Fix a file search

    (cherry picked from commit 98a99f616f4898c353a5a11ba51a7701f6dd8224)

commit 1921740b0b
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 6 06:13:23 2023 -0400

    RTPS: Check for signed overflow

    The offset is a signed integer, and we use negative offsets
    to mean "offset counting from the end of the tvb." That means
    that we can still have an excessive loop without unsigned overflow
    or running off the end of the tvb, if the result of adding a large
    unsigned integer to the offset results in a small negative number.

    Just check if the result of the addition makes the offset move
    backwards.

    Fix #19322

    (backported from commit 0de07f8fe4f8e06da9084485e64a24c8f85a20f4)

commit 708a757f92
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Sep 5 10:34:27 2023 -0700

    GitLab CI: Make sure our fuzz jobs fail correctly

    (cherry picked from commit 9e8d63f71e678ece3bfe64df7f5e1eebe45cfd8b)

commit 88e7ea82cf
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Sep 4 00:54:18 2023 -0700

    tibia: don't use string encodings for non-string items.

    We do not guarantee that will work, and, in fact, it doesn't work.

    (cherry picked from commit a0db76b4cce16d71d5a37b056ad30272542aff43)

commit e7e10bfd7b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 3 16:30:42 2023 -0700

    GitLab CI: Switch to clang 16

    (cherry picked from commit 777152455823d839be104500861a32463453986e)

commit 1311196d7f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 3 16:17:58 2023 +0000

    [Automatic update for 2023-09-03]

    Update manuf, services enterprise numbers, translations, and other items.

commit addaaf5219
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Sep 2 17:24:47 2023 -0700

    editcap: improve -A and -B documentation.

    State up front that both ISO 8601 and Unix-time formats are supported.
    Describe each format in separate paragraphs.  Give more information
    about the Unix-time format.

    (cherry picked from commit 524910488e3e9f9ebb7d3901e99bd7161fd0dc68)

commit 4c1f82b746
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Sep 2 16:01:24 2023 -0700

    nstime: fix unix_epoch_to_nstime().

    The text format for UNIX Epoch times is <secs>[[.,]<nsecs>], with <secs>
    representing "seconds since the Epoch".

    The format of an nstime is a time_t and a nanoseonds value, where a
    time_t is normally "seconds since the Epoch" (don't get me started on
    why that's quoted and why I added "normally"; hint, it involves the
    words "leap" and "seconds").

    So all unix_epoch_to_nstime() needs to do is conveert <secs> from ASCII
    decimal to binary and use it as the time_t (if it fits) and, if there's
    a [.,]<nsecs>, convert <nsecs> it from ASCII decimal to binary (as an
    "after the decimal indicator" value) and use it as the nanoseconds,
    otherwise set the nanoseconds to 0.

    It does *not*, in particular, have to involve struct tm in any fashion;
    doing that runs the risk of dragging in local time, but this isn't local
    time.

    This also means that it doesn't depend on strptime supporting "%s";
    that's not specified in the Single UNIX Specification.

    (backported from commit 9af86689dd53d2248de0ded478170713be4f1fcb)

commit a59fe10087
Author: Anders Broman <anders.broman@ericsson.com>
Date:   Thu Aug 31 17:11:22 2023 +0200

    ITS: Accept RTCMEM v1 and v2

    Treat both as v2 for now.

    (cherry picked from commit 04ec5dcaee697f2319cbe0ffb5aed17cfd7ce1a4)

commit ae2e52b2f5
Author: David Perry <boolean263@protonmail.com>
Date:   Tue Sep 20 08:09:57 2022 -0400

    esl_eth: support nanosecond timestamps

    Applies the patch from #18308, in lieu of original commenter doing so.

    Closes #18308

    (cherry picked from commit 68a581afdcb08fd31aab88494a87e1243b3db15d)

commit 5c61a355db
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 16 16:02:58 2023 -0700

    NSIS: Update the donation page

    (cherry picked from commit 1a4d139953f59a2d9733db068be98c70704e8317)

commit 0e84fcdb7c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 27 16:18:32 2023 +0000

    [Automatic update for 2023-08-27]

    Update manuf, services enterprise numbers, translations, and other items.

commit 14c52fb41a
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Tue Aug 22 15:36:40 2023 +0200

    kakfa: fix sync_group_request missing version check for instance_id

    Close #19290

    (cherry picked from commit 7e7cd293720186ee0af4479e581d74c566112a66)

commit e125e2faf8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Aug 23 13:44:27 2023 -0700

    Version: 3.6.16 → 3.6.17

    [skip ci]
