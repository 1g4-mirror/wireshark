commit fc5bf594c3
Author: Szilard Turi-Kovats <szilard.turi-kovats@commsignia.com>
Date:   Thu Feb 13 17:02:03 2025 +0000

    ITS: IEEE1609dot2: Add configurable PSID list for WSMP dissector

    Currently only 32 and 130 are supported (hardcoded).
    Now it is a list that can be configured in the settings.
    The default values are the most common wsmp services.
    The psid list has also been updated with the new services.

    (cherry-picked from commit bfc12d4a97f855b531fc2624f688c457228fe1a3)

    Co-authored-by: Szilard Turi-Kovats <szilard.turi-kovats@commsignia.com>

commit a734622180
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Feb 18 13:58:14 2025 +0000

    Qt: Don't crash when trying to sort while sorting

    Don't change the value of PacketListModel class private member variables
    if we're not actually going to perform the sort. In particular, we want
    to avoid the case where we're not sorting because we're in the middle of
    a sort. The sort comparison function uses the class private member
    variables to make the comparison. Changing them while the sort is
    ongoing will make the sort invalid, and probably violate assumptions that
    std::sort makes, leading to a crash.

    We might be able to handle queuing another sort while a sort is on-going
    if the comparison function were made a closure instead. (Though this
    would still probably not be great for performance.)

    Fix #20263

    (cherry picked from commit 9cb198d7aa1265b92fe2ea05239f7b428f1660d7)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 63373de206
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Wed Feb 19 06:47:48 2025 +0000

    TLS: Fix JA4_b when cipher list is empty

    Fixes: #20394

    (cherry picked from commit f6244c782cda81c9607da402fb4aba4939309a9b)

    Co-authored-by: Uli Heilmeier <uh@heilmeier.eu>

commit 4ec0511879
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Feb 17 14:38:28 2025 +0000

    Websocket: Fix decompression flag handling

    The first fragment of a multiframe Websocket message is not
    necessarily the first fragment of the Websocket conversation.
    We need to save the opcode and per message compression flag from
    the first fragment of the reassembled message, not the first
    frame of the conversation. Some conversations may have control
    frames.

    Also, since according to RFC 6455 5.5, control frames can be
    interjected in the middle of a fragmented message, can have
    a payload, and MUST NOT be fragmented, we do not save the first
    frag payload and per message compression flag until after checking
    if the frame is a control frame.

    Use proto_tree_add_ret_boolean in a couple places where possible.

    Fixup aa2b43b7456539947fc7756bd3297ea3cbbde0bb

    Fix #20390

    (cherry picked from commit 4bb577c21ae9571ef63654c8fddb31a1344558b3)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 4558f7c056
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Feb 16 14:00:09 2025 +0000

    addr_resolv: Fix extra host files

    Extra host files are only added to a list once at program startup,
    so that needs to be epan scope. They are re-read each time the
    address resolve scope is reset, but there's no way to clear the
    list of files. Since it's only used by tshark, this shouldn't be
    a problem.

    Fixup 0b0ac66fd7c293935362e5cf098762be4741eaea
    Fix #20391

    (cherry picked from commit 0a8f2e754119b55cf33c26305fd432289844dae6)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 792e56c26b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Feb 16 09:26:33 2025 +0000

    [Automatic update for 2025-02-16]

    Update manuf, services enterprise numbers, translations, and other items.

commit aeace7d507
Author: Szilard Turi-Kovats <szilard.turi-kovats@commsignia.com>
Date:   Thu Feb 13 16:51:17 2025 +0000

    ITS: CPM: Fix extensibility flag of WrappedCpmContainer

    asn2wr script generates C code marking this list as extensible.
    However, further constraining the field with WITH COMPONENT(S)
    removes this bit. To fix this, the flag is explicitly removed.

    (cherry-picked from commit e8a8056a6bdb8d255ce5d5b984e981eae943fc4b)

    Co-authored-by: Szilard Turi-Kovats <szilard.turi-kovats@commsignia.com>

commit 1ac29d822a
Author: Szilard Turi-Kovats <szilard.turi-kovats@commsignia.com>
Date:   Thu Feb 13 16:49:22 2025 +0000

    ITS: Fix protocol version for VRU Awareness Message (VAM) V2.2.1

    This update aligns the VAM implementation with ETSI TS 103 300-3, ensuring
    that the correct protocol version is used.
    ASN: PduHeader(WITH COMPONENTS {..., protocolVersion(3), messageId(vam)})
    Document: Shall be set to 3. (page 37, section 7.2)

    (cherry-picked from commit cb528e81572b8481e1e697cddc4810829b45db7b)

    Co-authored-by: tkszilu <tkszilu@gmail.com>

commit 5a528dd01d
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Fri Feb 14 21:37:25 2025 +0100

    MQTT: Fix v5.0 properties total length presentation

    Retrieving the Variable Byte Integer value from the TVB requires the
    addition of ENC_LITTLE_ENDIAN.

    Ref: https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901011

    Closes #20389

    (cherry picked from commit 062c5407e041bce89e26293e01231d656c7eb84e)

commit d4107f6d71
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Feb 12 20:32:57 2025 +0000

    androiddump: Go back to no timeout on blocking sockets on Windows

    On Windows, when blocking sockets are used use no timeout, since
    we don't test the error conditions using WSAGetLastError according
    to the WinSock API after calling recv. The non-Windows path checks
    errno, and uses a timeout even with the blocking sockets.

    Revert part of be5f98b85102efc6ebbbdfc565508bb818292585

    Fix #20386

    (cherry-picked from commit dd5d33a13f1262d52f94e765601f825ce31603ef)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 19ddfe1aa4
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Feb 12 21:18:30 2025 +0000

    tools: Allow GitLab's "Cherry-pick" commits

    git cherry-pick -x adds a line, with extra newline, like

    (cherry picked from ...)

    The GitLab GUI's "Cherry-pick" button started creating cherry-picked
    commits that are *almost* the same, but with an extra hyphen:

    (cherry-picked from ...)

    Allow those too.

    (cherry-picked from commit 293cb0ccf84030bbd651c1e5d85c20e949ca49a4)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit f8614a42bd
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Wed Feb 12 16:10:01 2025 +0100

    TECMP: Lifecycle in Status messages was wrong

    An hour should have 60 and not 24 minutes.

    Closes: #20387

commit 73d7d46bcc
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Feb 5 19:55:12 2025 -0800

    wscbor: Add a recursion check

    Blind-ish attempt at fixing #20373

    (cherry picked from commit 83c73a83ad9ec7baa4bbf06d6da9cdd91009d5ed)

commit 8f87a137d3
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Feb 9 12:23:31 2025 -0800

    GitLab CI: Disable the Fedora MinGW builds for now

    Fedora doesn't appear to have checks in place to ensure that their MinGW
    Qt packages work, so disable the MinGW builds for now. Someone other
    than us needs to be the canary in that particular coal mine.

    (cherry picked from commit e0000830728723bdc24ed291d14496b5cf39a551)

commit 11daf6d1aa
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Fri Feb 7 16:34:20 2025 +0000

    cmake: Fix for policy CMP0175

    Add argument POST_BUILD to add_custom_command() TARGET to fix a
    warning for CMake policy CMP0175.

    (cherry-picked from commit 556f4e1594e85a73ff2abea405c9b22f437e7b49)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 22433bb3c5
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Feb 6 09:24:02 2025 +0000

    RTP: Have shim header dissector return 0 on error

    (cherry picked from commit 62a7b949e4638a62138e1c2c8fee88ffe16b5b4d)

commit 22b1671d70
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Feb 9 09:27:35 2025 +0000

    [Automatic update for 2025-02-09]

    Update manuf, services enterprise numbers, translations, and other items.

commit 42142d14f3
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Feb 5 04:06:04 2025 +0000

    TCP: Create the per packet data if needed for manual seq analysis

    Prevent a crash if the calculate timestamps preference is disabled
    and manual TCP analysis is used.

    (cherry-picked from commit ddac5fbbf596ff3c213727cb7c9e02c1886cc11e)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 89a1536826
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Feb 5 03:23:17 2025 +0000

    TCP: Initialize the per packet data to zero

    Initialize the per packet data to zero when creating it. This avoids having
    to remember to initialize new struct members when adding them to the struct.
    (Such as the karn flag in the master branch, which apparently in some
    circumstances with fuzzed data was used uninitialized.)

    There are likely some other issues surrounding this per-packet data, since
    its existence depends on the timestamp and packet number preference being set.

    Also, change around the initialization so as to restore the stream packet
    number on the second and later passes, which was accidentally removed
    in 7ea8490ea86294f9990fb6ca59a7d2ff7764ee28.

    Fix #20300

    (cherry-picked from commit ddd6571704f582b81f8289303f2687f6c89f80dd)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 1c90fd9100
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Feb 2 09:28:04 2025 +0000

    [Automatic update for 2025-02-02]

    Update manuf, services enterprise numbers, translations, and other items.

commit 91540d8617
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Feb 1 19:37:03 2025 +0000

    DNS: fix stats crash when there is no qname

    Fixes: #20367

    (cherry picked from commit 0c5a57ad4fa9de254c208909283789e3462233f8)

    Co-authored-by: Uli Heilmeier <uh@heilmeier.eu>

commit c45e9e7f5d
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Feb 2 01:04:12 2025 +0000

    minizip-ng: Try to fix all the include nonsense

    The original minizip API uses constants defined in zlib.h like Z_DEFLATED.
    The original minizip's zip.h and unzip.h properly include zlib.h, but
    minizip-ng's compatibility layer does not until 4.0.8.
    (https://github.com/zlib-ng/minizip-ng/commit/91112baa265fcea729f534ceb085c54f4fd285d3)

    The minizip-ng library itself does include either zlib.h or zlib-ng.h, depending
    on which one was linked against when building.
    The zlib.h included with the MacOS SDK is built without ZLIB_CONST so it's
    not ABI compatible with zlib.h that do define ZLIB_CONST (or with zlib-ng.h
    in general) so if we include one here, we have to include the same one used
    when building minizip-ng.

    Fedora and Red Hat Linux provide minizip-ng and zlib-ng as minizip and zlib,
    respectively, so HAVE_MINIZIP being defined doesn't mean we have the original
    minizip instead of minizip-ng - luckily at least in that case both are
    renamed.

    If the constants we need aren't defined after including minizip, then
    try to include the appropriate zlib header file. (This isn't quite
    perfect, because someone could have a minizip-ng package built against
    the original zlib but also have zlib-ng installed, so to be perfect
    we'd need more checks in the CMake module.)

    (cherry picked from commit eb36fbf4800444b2658ff1f19fe98558e7f38535)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit a075e42d93
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Feb 2 00:39:44 2025 +0000

    CMake: Adapt to minizip-ng 4.0.8 include file changes

    At least since minizip-ng 2.10.2, minizip-ng, when built with the
    original minizip compatibility layer, has had include files with
    the original zip.h and unzip.h names from minizip.

    Prior to 4.0.8, these all just included the entire mz_compat.h header;
    in 4.0.8 the mz_compat.h header was removed in favor of having only
    the matching compatible files, each of which now only includes the same
    subset of functions and symbols as in the original minizip.

    Since the zip.h and unzip.h files have long existed, just search for
    and include those, since mz_compat.h has gone away in 4.0.8.

    By default, when minizip-ng is built with the compatibility layer,
    the library names itself minizip instead of minizip-ng so it can
    be used as a drop in replacement. However, some packagers, e.g.,
    Homebrew, build the compatibility layer but keep the -ng suffix
    (or even perhaps the short-lived minizip2 name) so that minizip
    and minizip-ng can co-exist on the same system.

    We prefer a library called minizip-ng *with* the compatibility
    layer to a library called minizip (which is presumably the old,
    slower version) on the same system, but prefer a library called
    minizip (which might be actually minizip-ng with the compatibility
    layer) to a library called minizip-ng *without* the compatibility
    layer.

    That's for now, at least unless we port our code to use the minizip-ng
    API.

    We probably could combine these into one CMake find module, but it
    might be easiest with the VALIDATOR option added to CMake 3.25 that
    would let use reject minizip-ng without the compatibility layer.

    (cherry picked from commit c3b410b50b2449519de899117a024007d9df29d3)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 3127f12879
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Thu Jan 30 16:49:42 2025 +0100

    PDU-Transport: Fixing an old typo

commit 6c78d67a9f
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jan 29 15:27:37 2025 +0000

    tls-utils: Fix exporting secrets with renegotiation

    Close the client random when inserting it into the hash map of
    used client randoms. Just inserting the pointer means that when
    renegotiation occurs, the data changes, which causes the last
    used Client Random to be exported N times instead of the N different
    Client Randoms.

    This can be tested with the tls-renegotiation.pcap test capture
    in the repository.

    Ping #20362

    (cherry picked from commit 670f7908259d1a33fdd30ca193e07e20094e7af9)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 015278360f
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Jan 27 10:30:13 2025 -0500

    Fix (bogus) latest gcc maybe-uninitialized errors

    These cannot be used uninitialized, but set default values to keep
    the latest gcc optimizer happy.

    Fix #20359

    (backported from commit 01f86e5858144e87cfc0efd78f5d99a7283ca20f)

commit 3cd638df61
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jan 26 09:27:40 2025 +0000

    [Automatic update for 2025-01-26]

    Update manuf, services enterprise numbers, translations, and other items.

commit 6e6f24db61
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jan 25 00:13:58 2025 +0000

    Qt: Don't crash when with an unexpected QModelIndex column in TCP Conversations

    A QModelIndex's column can be an unexpected value, especially -1 from
    clicking not on any column. Don't gratitously crash the application,
    just return an invalid QVariant.

    Fixup c56a81d41cff6aa5827e2e69321bfbabf564828d

    Fix #20357

    (cherry picked from commit 4da210bf73346ad3455f0662769fcdbf12d3f08a)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit e16afdb4d2
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Fri Jan 24 12:29:38 2025 +0000

    isobus: fix function instance and ECU instance field widths

    (cherry picked from commit 0931fae18c1c4aa82914b5b52d369f1ee78f99e3)

    Co-authored-by: Miklos Marton <martonmiklosqdev@gmail.com>

commit 2c7f9def8d
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Jan 23 12:44:43 2025 +0000

    Qt: Fix extcap interface toolbar Qt6 regression

    QComboBox Data is stored as a QVariant. In Qt5, QVariants are converted
    for equality comparison if possible, but in Qt6 conversion only happens
    in a more limited number of situations. In Qt5, QVariants from a
    QByteArray and a QString can compare equal if the QByteArray would
    convert to the string, but they never compare equal in Qt6.

    The payload passed to the Interface Toolbar is a QByteArray (UTF-8).
    Don't prematurely convert it to a QString (UTF-16) because passing it to a
    function that converts it to a QVariant, because then it won't compare
    equal to QVariants from the same QByteArray not converted.

    Also note that Qt5 and Qt6 convert QByteArrays with internal '\0'
    differently.

    Fix #20354

    (cherry picked from commit 190120d5cf72c79e324bf52b9fffdb659a5cfb25)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 5762a16525
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Mon Jan 20 10:59:38 2025 +0000

    MPLS: add additions to IANA registry for MPLS PW and PWAC types

    (cherry picked from commit 7d18438e9e86c234c515e03238c2c74166d138f1)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit be5bd26b9e
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Jan 19 22:19:08 2025 +0000

    MPLS: Don't hide expert items under if (tree) condition

    (cherry picked from commit c9f5583b748e1c9d1dd8d8fa1c043c7e0b4ac9ed)

    c9f5583b MPLS: Don't hide expert items under if (tree) condition

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit e2353e4cff
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Fri Jan 17 14:04:24 2025 +0100

    ipproto: introduce BIT-EMU

    (cherry picked from commit 1004df1febce78f4b4e1980570874aaf88f678b9)

commit 50ab6b41cf
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Jan 19 16:57:46 2025 +0100

    IPPROTO: Add new Homa entry

    (cherry picked from commit 5dec51a8c15d3ba47ed5c0ff2523b169ad9322c9)

commit 21d68c43af
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Jan 19 15:47:08 2025 +0100

    Add recent IPPROTO values for AGGFRAG and NSH

    (cherry picked from commit 883900f0f0dec5b3d547bb468bc05a4bbb89697b)

commit e3c5cc6f95
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jan 19 09:27:31 2025 +0000

    [Automatic update for 2025-01-19]

    Update manuf, services enterprise numbers, translations, and other items.

commit 9398bda438
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Jan 17 16:09:53 2025 +0000

    test: Skip extcap Python script if temp directory is NOEXEC

    Various guides and vulnerability scanners recommend setting /tmp to
    noexec. Extcap scripts have to be executable to work. Check if the
    test path is noexec and skip it if so.

    (cherry picked from commit c7952c6f9f20f435a786ae66f4e4d3222db57f7d)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 76dfc0669a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jan 12 09:27:14 2025 +0000

    [Automatic update for 2025-01-12]

    Update manuf, services enterprise numbers, translations, and other items.

commit ceb8b4d0c2
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Jan 10 12:22:36 2025 +0000

    Qt: Fix adding compression extension with Qt 6.8

    We need to add the list of suffixes to the hash under the 6.8 version
    of the extension filter too.

    Fixup 702116d425a1542c0db84e17236dae8c7e1b0bfd

    (cherry picked from commit 9de2298fdeeba681f6032048956bba1510321b8e)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit d9afcb33f0
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Jan 9 14:37:33 2025 +0000

    test: Skip a test that requires brotli if we don't have it

    The quic-with-secrets.pcapng file has brotli compressed data,
    so the results are different if we don't have brotli.

    Fix #20330

    (cherry picked from commit 454cad756177b003c7418be3ed5f027d21b271ee)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 33dc847809
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jan 8 18:07:14 2025 -0800

    Version: 4.4.3 → 4.4.4

    [skip ci]

commit 66d7a52feb
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jan 8 09:41:11 2025 -0800

    Build: 4.4.3

    [skip ci]

commit 046cc868b5
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jan 8 17:13:46 2025 +0000

    Qt: Don't use theme stock icons on Windows or macOS

    Qt 6.7 added QIcon::ThemeIcon with support for some, but not all,
    of the FreeDesktop standard stock icons. This is ok in some cases,
    theme icons next to our icons can look jarring, especially when, e.g.
    the Windows theme provides "go-previous" and "go-next" but not
    "go-jump", "go-first", and "go-last."

    For now, disable theme icons on Windows and macOS and just use our
    icons. This makes 6.7 and later look the same as 6.6 and earlier.

    (cherry picked from commit 2216614d23107afe9ac030c3bee09c0726191b9d)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit df63481eae
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jan 6 10:51:27 2025 -0800

    Prep for 4.4.3

    [skip ci]

commit 39311fcae4
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Jan 6 14:39:32 2025 +0000

    wsutil: Link to libm in wsutil_static as well

    Fixup 5919c84347313f78a473172f42f88be05ce439ed

    Fix #20326

    (cherry picked from commit 442d1cad22339985f43eef4f79bb5794b66d9a9b)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 900b875afc
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jan 5 09:27:17 2025 +0000

    [Automatic update for 2025-01-05]

    Update manuf, services enterprise numbers, translations, and other items.

commit 37d816311c
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jan 4 15:54:23 2025 +0000

    sFlow: Round up sampled header length only when advancing offset

    Align to four bytes only when advancing the offset, so as not
    to include the zero padding in the sampled header item and dissection.

    Fix #20320

    (cherry picked from commit d4ddd813688f4669d7f553224583ccd0a57b37e5)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 4e0f8b4039
Author: Michael Tuexen <tuexen@wireshark.org>
Date:   Thu Jan 2 22:39:59 2025 +0100

    BBLog: fix sender and receiver side window shift

    The scale shifts are provided as numbers, therefore no mask should
    be applied.

    (cherry picked from commit 888bf7125062f0a6c00ad382233a4d574e7a8316)

commit 73c759b50a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jan 3 13:10:09 2025 -0800

    GitLab CI: Prefix our release notes and info

    Add a "wireshark-" prefix to match the master branch.

commit c8615667f7
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Jan 1 14:53:52 2025 +0000

    Happy New Year 2025

    (cherry picked from commit b7a84b6d109f961a95274a9a8b1b1a4cb26e98af)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit ea9560aba8
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Dec 31 22:51:01 2024 +0000

    Qt: Import from Hex Dump missing regex hint double-escaped HTML

    ElidedLabel escapes HTML text (d9adb6f712a63dca13957802664d37c52ea4181c)
    so for missing_data_hint, set to regexHintLabel, an ElidedLabel,
    use unescaped HTML so that it doesn't get escaped twice and
    literal "%gt;" and "%lt;" appear in the hint.

    (cherry picked from commit a5744d7673737a978e64fe7aff006c3d80db5878)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 2167462f7d
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 29 09:27:01 2024 +0000

    [Automatic update for 2024-12-29]

    Update manuf, services enterprise numbers, translations, and other items.

commit d11238e26f
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Dec 26 15:03:08 2024 +0000

    Qt: Include tickLabelPadding in margin calculation

    Based on the diagram in the QCustomPlot documentation
    ( https://www.qcustomplot.com/documentation/classQCPAxis.html )
    QCPAxisRect::margin needs to include the (default nonzero)
    tickLabelPadding in addition to the width of the largest possible
    tick (i.e., time) in order for the entire time to be shown without
    cutting off the first digit when it is maximum width.

    Fix #20311

    (cherry picked from commit 87f820a192a03914118c72a8d6c80d83c750b841)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 4793a2ca2a
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Dec 26 14:00:47 2024 +0000

    UCP: Fix short data check calculation for Alphanumeric OAdC

    The plus one was on the wrong side of the comparison. The byte
    array needs to have room for the addrlength byte plus the number
    of octets in the packet GSM 7 bit encoding of the address (but
    no null termination, as it's GSM 7 bit encoding.)

    Fix #20313

    (cherry picked from commit 2d566e17e22de6aaf5716cc6447b2d04c081451c)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit a44b370bc6
Author: Guy Harris <gharris@sonic.net>
Date:   Sun Dec 22 22:42:04 2024 +0000

    cllog, ems: test the correct handle after an error.

    Test the handle on which the operation was done.

    (cherry picked from commit 9ce7843da194835ea682c0dde546832b6ca6da63)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit a4c4ca0f20
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 22 09:27:20 2024 +0000

    [Automatic update for 2024-12-22]

    Update manuf, services enterprise numbers, translations, and other items.

commit e9494a1fc5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Dec 20 13:18:27 2024 -0800

    CMake: Ignore Strawberry Perl's prefix

    Strawberry includes many components that are incompatible with our
    builds, including xsltproc and zlib. Find Perl early on and if it is
    Strawberry-flavored, ignore its prefix.

    Fixes #20304

    (cherry picked from commit f939396cb8d97b089acca78bc6182f0b8937254f)

commit 3dd25c184b
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Dec 20 14:57:32 2024 +0000

    doc: text2pcap typo

    [skip ci]

    (cherry picked from commit b0cbc7db0297f8a6d80eabc8290926cf26afcaab)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit ab9ee49b11
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Dec 18 14:35:46 2024 +0000

    Diameter: Fix Role-Of-ProSe-Function AVP (AVP code 3438) values

    See ETSI TS 132 299

    7.2.177aA Role-Of-ProSe-Function AVP
    The AVP may take the values as follows:
    0 HPLMN
    1 VPLMN
    2 Local PLMN

    (cherry picked from commit 1575c9e29fe0f8bb518d9bf9f56baf9b326f6adf)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 0681c62874
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Dec 15 17:42:02 2024 +0000

    nfs: Fix NFSv2 fattr mode value string swap

    The directory and character special file entries in the NFSv2
    fattr mode value string are swapped, because of the slightly
    unusual order in which they're written in RFC 1094.

    https://datatracker.ietf.org/doc/html/rfc1094#section-2.3.5

    Fix #20290

    (cherry picked from commit 6278e931edeed2086a1cb087e4d3785a8d7a0d26)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit f70ae1331c
Author: Martin Mayer <martin.mayer@m2-it-solutions.de>
Date:   Sun Dec 15 10:32:49 2024 +0100

    ICMPv6: Fix RA Flags Expansion Option

    Correct the dissection of  Flags Expansion Option (EFO/RA Opt. 26)
    to the meaning of bits 8-55 and its IANA assignment (RFC 5175 4./5.).

    (cherry picked from commit 991f9e52610aab35633eb44033dab52d784ec161)

commit f31c3424c7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 15 09:32:17 2024 +0000

    [Automatic update for 2024-12-15]

    Update manuf, services enterprise numbers, translations, and other items.

commit 1c151f3c27
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Dec 14 23:24:56 2024 +0000

    PLDM: UTF-16 encoding is a string, not a FT_UINT16

    All these types are strings, differing only in encoding. UTF-16 encodings are
    strings. UTF-8 is a string, not FT_UINT8. Do not add character strings
    with string encodings as FT_UINT8 or FT_UINT16 types.

    According to the PLDM specification:
     https://www.dmtf.org/sites/default/files/standards/documents/DSP0248_1.2.0.pdf

    strASCII means ISO-8859-1, not ASCII, for some reason.

    (cherry picked from commit 98d5cfc758a7d7ef20e533a8ff3f6e218e1cf19e)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit ab5ec39666
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Fri Dec 13 13:52:08 2024 +0000

    hci-mon: Fix dissection of HCI ISO Data

    The HCI ISO dissector should be called instead of the HCI ISO Data
    dissector. That is, the HCI header should be included.

    Fixes the implementation added in
    28be55d9ef1263c3bba97384e0c7af4bd54dc816.

    Signed-off-by: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>

    (cherry picked from commit 33885748ce68a945d6caabc1f4bef34d586d55ca)

    Co-authored-by: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>

commit a2c51ecadd
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Fri Dec 13 11:52:22 2024 +0000

    ieee80211: fix VS SGDSN altitude signedness

    As it can be seen in the protocol definition: the altitude is a **signed** int 16
    https://www.legifrance.gouv.fr/jorf/id/JORFTEXT000039685188

    (cherry picked from commit 2214dc0b4595b3b928aa6f8e8b6429683d76a38d)

    Co-authored-by: Yann Pomarède <yannpomarede@gmail.com>

commit 366dbcd4b2
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Dec 11 16:38:57 2024 +0000

    Protobuf: Support extension declaration syntax and update well known proto files

    Declaration syntax is not defined in the official spec but exists in the well known proto files and examples from Google.

    (cherry picked from commit 8bd9f7bb858424e2976c91e4c60c5e2873bf6874)

    Co-authored-by: Josh Strohminger <18415319-joshstrohminger@users.noreply.gitlab.com>

commit e760c2228b
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Tue Dec 10 09:10:49 2024 +0000

    NGAP: Fix a filter name

    (cherry picked from commit e98b9f69008abfd0b8d7bdc43a71833d954abfb9)

    e98b9f69 NGAP: Fix a filter name

    Co-authored-by: Martin Mathieson <martin.r.mathieson@gmail.com>

commit ccd96c6f65
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Mon Dec 9 14:55:29 2024 +0000

    MBIM: ignore junk in NDP headers after Null entry

    At least one NCM implementation that emits NDP headers of fixed length
    has been observed to leave the unused slots uninitialized. This is
    acceptable according to the spec:

        Any NCM Datagram pointer entry with an index field (wDatagramIndex,
        dwDatagramIndex) of zero or with a length field (wDatagramLength,
        dwDatagramLength) of zero, or with both index and length fields set
        to zero, shall be treated as a Null entry. Receivers shall process
        datagram pointer entries sequentially from the first entry in the
        NTB. The first Null entry shall be interpreted as meaning that all
        following NCM Datagram Pointer Entries in the NDP are to be ignored.

    However, this behavior confuses the MBIM dissector, as the junk data
    after the Null entry may sometimes contain seemingly valid indices and
    lengths. This can trigger false positive warnings, such as duplicate
    packets.

    This fix ensures that parsing stops at the first Null entry. Any extra
    data between the Null entry and the end of the NDP header is added to
    the protocol tree as `Padding`. This prevents unnecessary warnings and
    improves compatibility with spec-compliant devices.

    Co-authored-by: Håvard Sørbø <havard@hsorbo.no>

    (cherry picked from commit 7fdaac735a6a4fb08c9e60ab27d67ad126a2dab1)

    Co-authored-by: Ole André Vadla Ravnås <oleavr@gmail.com>

commit 92a7f84314
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 8 09:32:07 2024 +0000

    [Automatic update for 2024-12-08]

    Update manuf, services enterprise numbers, translations, and other items.

commit 805bd98060
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Sat Dec 7 13:21:38 2024 +0100

    PTP: Fix Management Path Trace (Bugfix)

commit 63b08f0e5d
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Fri Dec 6 15:17:38 2024 +0000

    GTPv2: fix ULI decoding

    Fixes #20276

    (cherry picked from commit 4b7dcd00b89bda277a0999118fa5cebd75d4d004)

    Co-authored-by: Pascal Quantin <pascal@wireshark.org>

commit affb5ab827
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Dec 2 14:26:49 2024 +0000

    extcap: Warn and fail on Windows with ProxyCommand (unsupported)

    libssh doesn't support ProxyCommand on Windows:
    https://gitlab.com/libssh/libssh-mirror/-/issues/75
    https://gitlab.com/libssh/libssh-mirror/-/issues/223

    Calling ssh_options_set "succeeds," however. The pre-0.11.0 behavior
    is to silently ignore the option. The 0.11.0 and later behavior is
    to then fail in ssh_connect (which will make the extcaps report an
    error.)
    https://gitlab.com/libssh/libssh-mirror/-/commit/bed4438695df2f4635617fc45f802d782fdd8479

    Fail on Windows with versions earlier than 0.11.0 so that users at
    least get a message rather than their ProxyCommand being silently
    ignored. Possibly we should disable the box as well.

    Ping #19991

    (cherry picked from commit 6039b9e03074ce320cddb8a4cff3ddc3e987d46f)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 0c7de7b158
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Dec 2 13:08:13 2024 +0000

    ftypes: Restore three way comparison

    ftype comparisons are supposed to return a three way value type that
    can be true, false, or non-comparable. Non-comparable values (that
    don't get caught by the semantic check) are being treated as true
    accidentally. Previously in some places a gboolean was used erroneously
    instead of the three-valued type; cascading changes due to changing
    gbooleans to bool affected this
    (bc3d35cef4fc3082be6475ed08c9826f8ce8deb7).

    Probably comparing unsigned to signed should do something a little
    more interesting than just fail the comparison.

    Ping #18960.

    (cherry picked from commit 6227a1238344b35dccdc29ed8ac88ecba24ad232)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 3be3829984
Author: Mike Beaumont <mjboamail@gmail.com>
Date:   Tue Nov 19 23:21:04 2024 +0100

    fix: only decode JoinGroup response skip_assignment with sufficient api_version

    (cherry picked from commit 6f6b8e9c4e76da5d5f8a3b18d848f36cd9f3e748)

commit e162d3d183
Author: Mike Beaumont <mjboamail@gmail.com>
Date:   Tue Nov 19 23:20:56 2024 +0100

    fix: only decode JoinGroup request reason with sufficient api_version

    (cherry picked from commit d0664942757cb24a6fb36a3f7d90bd24c5bbd05b)

commit d38947a7e2
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Mon Dec 2 10:10:46 2024 +0000

    LTE RRC: fix dissection of AbsoluteTimeInfo

    (cherry picked from commit d86c97744ba06395b763fb7d7be5e18477373301)

    Co-authored-by: Pascal Quantin <pascal@wireshark.org>

commit e921e27f01
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Mon Dec 2 09:28:36 2024 +0000

    NR RRC: fix dissection of AbsoluteTimeInfo

    (cherry picked from commit 34de215cb25e41dd219f97c1a3a273aae8764a78)

    Co-authored-by: Pascal Quantin <pascal@wireshark.org>

commit 7af40bcd62
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Dec 2 01:15:34 2024 +0000

    Fix a potential crash with WinPcap 4.1.x.

    Also, add a comment indicating why we do something similar elsewhere,
    and fix the indentation of the routine containing the comment while
    we're at it.

    See comment in issue #20261.

    (cherry picked from commit bfce1f9d9a2e18a9119e5e5faae084f73278095b)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit 7b33324b19
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Dec 1 23:47:00 2024 +0000

    dfilter: Don't crash on multiple relations with unary functions

    Don't assume in oper_dup that an operation is binary. Unary minus
    exists in the grammar. Trying to duplicate the null second operand
    will cause a null dereference, which can happen in chained comparisons:

    Change:
    $ ./run/dftest -s '1 < -_ws.ftypes.int8 <= 2'
    Filter:
     1 < -_ws.ftypes.int8 <= 2

    AddressSanitizer:DEADLYSIGNAL
    =================================================================
    ==637745==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000010 (pc 0x7f8c9408a5d2 bp 0x7ffe701aebf0 sp 0x7ffe701aead0 T0)
    ==637745==The signal is caused by a READ memory access.
    ==637745==Hint: address points to the zero page.
        #0 0x7f8c9408a5d2 in stnode_dup /home/johnthacker/wireshark/epan/dfilter/syntax-tree.c:280:20
        #1 0x7f8c940883a7 in oper_dup /home/johnthacker/wireshark/epan/dfilter/sttype-op.c:51:15

    Into:
    $ ./run/dftest -s '1 < -_ws.ftypes.int8 <= 2'
    Filter:
     1 < -_ws.ftypes.int8 <= 2

    Syntax tree:
     0 TEST_AND:
       1 TEST_LT:
         2 FVALUE(1 <FT_INT8>)
         2 OP_UNARY_MINUS:
           3 FIELD(_ws.ftypes.int8 <FT_INT8>)
       1 TEST_LE:
         2 OP_UNARY_MINUS:
           3 FIELD(_ws.ftypes.int8 <FT_INT8>)
         2 FVALUE(2 <FT_INT8>)

    Instructions:
     0000 READ_TREE        _ws.ftypes.int8  -> R0
     0001 IF_FALSE_GOTO    9
     0002 UNARY_MINUS      -R0              -> R1
     0003 ANY_LT           1 < R1
     0004 IF_FALSE_GOTO    9
     0005 READ_TREE        _ws.ftypes.int8  -> R0
     0006 IF_FALSE_GOTO    9
     0007 UNARY_MINUS      -R0              -> R2
     0008 ANY_LE           R2 <= 2
     0009 RETURN

    (cherry picked from commit 129565f0efb8587d44c0c7f6c262ac72a88d7aab)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 9f35cd5047
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Dec 1 09:32:18 2024 +0000

    [Automatic update for 2024-12-01]

    Update manuf, services enterprise numbers, translations, and other items.

commit 0c8e560b75
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Nov 29 23:07:42 2024 +0000

    More help output cleanup, making the output more alike.

    Note that the -B argument is in units of MiB.

    Put --update-interval in a "Capture display" section for TShark, as it
    affects how the output is displayed (printed).  Don't duplicate it for
    Wireshark, and put it at the end of the list.

    --only-protocols takes a list of protocol, not a single protocol; make
    the Wireshark output match the TShark output.

    (cherry picked from commit 9a24ae406e1d5fd0a369c6e70d776075687af0c9)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit 0afdca9a76
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Nov 29 20:01:03 2024 +0000

    Document --update-interval capture option better in help messages.

    Wireshark supports it as well, so add it to ui/commandline.c.

    Also, note that the number specified is in units of milliseoncds.

    (cherry picked from commit ec09e664a08f4b360ff54022abce3a598a5c181e)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit efc861ddaa
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Thu Nov 28 08:12:05 2024 +0000

    nas_eps: Fix a TLV PDU type

    Also fix TLV PDU type for "UE coarse location information UE coarse
    location information" in nas_emm_sec_mode_comp().

    (cherry picked from commit 1833edb5e78aae8bd1f60a258bdcabbe308d9817)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit eea114203b
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Nov 28 01:49:55 2024 +0000

    dfilter: FT_GUID is not a bytes type

    FT_GUID is not a bytes type, and is not compatible with the FT_BYTES
    family. This has been the case since 923855bb20845f55472dfe8e62b7b43660f2f63b
    in order to support both big and little endian GUIDs.

    This prevents:
    [GLib CRITICAL] -- g_bytes_compare: assertion 'bytes2 != NULL' failed
    (and always returning "equals") when comparing a member of the bytes
    equivalence class on the left hand side to a FT_GUID on the right hand
    side of a filter comparison (e.g. eth.addr == smb2.client_guid), and
    when the FT_GUID is on the left side, doing a memcmp with type-punning
    of the byte type to a e_guid_t.

    Also, use guid_cmp from "epan/guid-utils.h" to compare the e_guid_t
    structs element by element instead of using memcmp.

    (cherry picked from commit 1827d55967adc6b59513efee3ade91085ef78abb)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 54092b0cb2
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Nov 27 19:41:53 2024 +0000

    Qt: Window Scaling Bytes fixed for RAW SEQ numbers

    (cherry picked from commit 45c8bf0794c516916aa8ad447446ace9b8299f5d)

    74e6d3f3 Qt: Window Scaling Bytes fixed for RAW SEQ numbers

    Co-authored-by: Eugène Adell <eugene.adell@gmail.com>

commit 0aec15464b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Nov 25 12:10:32 2024 -0800

    IEEE 802.11: Update our multi link string handling

    Use a wmem_strbuf instead of manually managing an snprintf buffer.

    (cherry picked from commit c2b86923c95437d35c082c8cbb4866fd58abc3fe)

commit cd9821469e
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Nov 27 12:29:14 2024 +0000

    nas_eps: Fix a TLV id

    Fix TLV id for "UE coarse location information UE coarse
    location information" in nas_emm_sec_mode_comp().

    (cherry picked from commit 7206964cd21623f0e1aed18d29ffb3eadbaa8b9b)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit b7fa9caab8
Author: Stephen Donnelly <stephen.donnelly@endace.com>
Date:   Wed Nov 27 04:45:49 2024 +0000

    erf-interface-id-fix Fix erf_interface_id_from_flags()

    The erf_interface_id_from_flags() macro has an operator precedence error such that the mask is shifted before the comparison.

    This causes the returned interface_id value to be incorrect on most trace files.

    Fix adds brackets for operation order.

    (cherry picked from commit 3603225c5124afed9d321feee3966320e851cdd8)

    Co-authored-by: Stephen Donnelly <stephen.donnelly@endace.com>

commit a0efb4c8fd
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Sun Nov 24 22:09:45 2024 +0000

    gsm_a_common: Fix uncertainty radius abbrev

    Change uncertainty radius abbrev to gsm_a.gad.uncertainty_radius.

    Fixes #20247

    (cherry picked from commit 49eda3c46b6f6ba797a2b3682ea3bee5f8e3dcb9)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 6e64a13b7c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 24 09:32:09 2024 +0000

    [Automatic update for 2024-11-24]

    Update manuf, services enterprise numbers, translations, and other items.

commit 6a9aa475c4
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Nov 23 02:41:20 2024 +0000

    dfilter: Do not crash on vals() with incompatible fields with shared abbrevs

    Even though we check in the semantic check that an abbreviation can be
    be converted, we have to check when actually converting because some
    abbreviations are shared with multiple incompatible fields.

    For the same reason, the semantic check perhaps should allow the filter
    if at least one field registration works, not just the last. But really
    we should enforce not having incompatible fields.

    (cherry picked from commit d717f177a2f2658402e18b60bd4505d97be9d4b4)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit d49dfec81f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Nov 20 13:50:33 2024 -0800

    GitLab CI: Remove Logray builds

commit 9dc3416b6c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Nov 20 12:05:09 2024 -0800

    Version: 4.4.2 → 4.4.3

    [skip ci]

commit 9947b17309
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Nov 20 09:26:00 2024 -0800

    Build: 4.4.2

    [skip ci]

commit af7012e215
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Nov 18 15:27:09 2024 -0800

    TCP: Update a preference name

    Split "Clientport" into two words.

    (cherry picked from commit beafa7bb11683089be0d6fef03d1bb9046089045)

commit 5cdf69e7ad
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Nov 18 15:28:49 2024 -0800

    Prep for 4.4.2

commit 4970af966f
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Nov 19 11:55:14 2024 +0000

    dfilter: Do not crash on failed IEEE 11073 float conversions

    The IEEE 11073 float ftype does not set the error message on a
    failed conversion. The various fvalue_from_XXX functions assume
    that if a ftype has a conversion function that it will set the
    error message. The dfilter semcheck function assumes that the
    error message gets set on a failed conversion.

    Have the generic fvalue_from_XXX functions check the error message
    on all failed conversions, and if an error message wasn't set at all,
    set the same generic message used when there is no conversion function.

    Prevents errors like:

     ** (wireshark:1296614) 23:50:37.712468 [DFilter ERROR] epan/dfilter/dfilter.c:76 -- dfw_set_error_location(): assertion failed: dfw->error
     ** (wireshark:1296614) Aborting on fatal log level exception
    Aborted

    When typing in invalid filters like
    'btatt.temperature_measurement.value.celsius == bogus'

    (cherry picked from commit 1dd55199f57da0bab0f64880780c401f99fb55eb)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 8b1c8a752e
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Nov 17 15:47:54 2024 +0000

    pop: Assert if the per packet frame data doesn't exist on later passes

    If we have a continuation packet and no per-packet data, that indicates
    that dissection was different on the second pass and some kind of
    underlying problem. (In #20231, with the V-J decompression dissector.)

    Prevent a crash in #20231

    (cherry picked from commit 59efb4a203778c766d4f3386efe312892b56f1f6)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit e419e484be
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Nov 17 15:08:36 2024 +0000

    Qt: 6.8 deprecations

    QCheckBox::stateChanged was deprecated for QCheckBox::checkStateChanged,
    which was introduced in Qt 6.7. The difference is that one has an
    int as parameter, the other has the Qt::CheckState enum.

    Also, Qt::TimeSpec was unified with QTimeZone in 6.5:
    https://www.qt.io/blog/unifying-qttimespec-within-qtimezone
    which overall makes things simpler, and the Qt::TimeSpec versions
    are deprecated in 6.8

    There are a small number of time related changes necessary for
    qcustomplot as well, but that will be handled separately, as that
    is upstream code.

    The Qt documentation indicates that some of these are supposed to
    be deprecated in Qt 6.9, but they are deprecated in the 6.8
    release candidate. They might not be deprecated in the final Qt
    6.8 packages, but it doesn't hurt to move to the new functions now.

    (cherry picked from commit 2539385528b790e60ec472764c151901e6b178c0)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit fa6147f029
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 17 09:31:18 2024 +0000

    [Automatic update for 2024-11-17]

    Update manuf, services enterprise numbers, translations, and other items.

commit 00d76f98b4
Author: Sake Blok <sake.blok@syn-bit.nl>
Date:   Sat Nov 16 14:54:17 2024 +0000

    TCP: add missing NULL-check

    Add missing NULL-check on tcpd.

    Fix for !20226

    (cherry picked from commit caa32b41ae56a9ad407a57e5b388abc18756c5eb)

    Co-authored-by: Sake Blok <sake.blok@SYN-bit.nl>

commit 52ae7c5fb5
Author: Sake Blok <sake.blok@syn-bit.nl>
Date:   Sat Nov 16 10:39:14 2024 +0000

    TCP: Don't use client port for dissector selection

    (cherry picked from commit 92e1792bae61d91bf0c5bef2d1f8a718933e5519)

    9a50f299 TCP: Don't use client port for dissector selection

    Co-authored-by: Sake Blok <sake.blok@syn-bit.nl>

commit c0a29d91b8
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Fri Nov 15 19:58:21 2024 +0000

    btbredr_rf: fix a warning

    ```
    /home/ivan/svnrepos/wireshark/epan/dissectors/packet-btbredr_rf.c: In function ‘dissect_btbredr_rf’:
    /home/ivan/svnrepos/wireshark/epan/dissectors/packet-btbredr_rf.c:972:8: error: ‘ltaddr’ may be used uninitialized [-Werror=maybe-uninitialized]
      972 |     if (header_mode > 0 && ltaddr)
          |        ^
    /home/ivan/svnrepos/wireshark/epan/dissectors/packet-btbredr_rf.c:665:27: note: ‘ltaddr’ was declared here
      665 |     uint32_t              ltaddr;
          |                           ^~~~~~
    cc1: all warnings being treated as errors
    ```

    (cherry picked from commit 1a5f3fad000a446c32858344fb9f952f7f29794c)

    Co-authored-by: Ivan Nardi <nardi.ivan@gmail.com>

commit 073f253f0d
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Nov 15 12:11:22 2024 +0000

    lua: Add a fixture to test Lua scripts under different locales

    Add a cross-platform way to run a Lua script under a different
    locale by calling os.setlocale.

    On UN*X we could have a different test_env fixture with LC_ environment
    variables to override the native locale, but that doesn't seem to work
    on Windows.

    Add some tests to util.lua for setting range preferences with
    comma separated ranges.

    Change the way the dissector is added to the DissectorTable in
    protofield.lua so that it uses a comma separated range. Note this
    test will fail if only one of the ports is set (as happened silently
    with Lua 5.2 and earlier in locales using decimal comma).

    Run these tests with a German locale, so that the decimal and thousands
    separators are swapped from English.

    (cherry picked from commit 6e2e4440430b4b57e926d7838af92a7c9ff13193)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 4f2996f7f1
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Nov 15 03:09:08 2024 +0000

    Lua: Support comma separated DissectorTable ranges in decimal comma locales

    For numeric literals, Lua only uses "." as the decimal separator (as,
    e.g., the packet matching grammar for display filters does), but
    when converting strings back and forth, the locale native separator
    is used, unless Lua is specifically changed when compiled. On Lua 5.3
    and later, "." can always be used when converting from a string as well.

    The functions in epan/range.c use "," to separate ranges of integers,
    which are converted back and forth from strings.

    On locales which use "," as a decimal separator, this creates ambiguity;
    strings like "10,11" can either be converted to the numeric literal of
    ten and eleven-hundredths, or a range with two subranges, 10 and 11.

    To avoid ambiguity, only convert strings to ranges; do not attempt to
    convert strings to numbers/integers first. This will work fine for
    strings consisting of a single integer like "10", but does mean than
    on English and other locales that use dot as the decimal separator,
    "10.0" will no longer be allowed (the numeric literal 10.0 will still
    work, because the conversion is exact, see below.)

    On Lua 5.3 and later, conversions to an integer will return a failure
    if the conversion is not exact (again, unless overridden by a
    compilation option when compiling Lua, something we can't control when
    UN*X system Lua packages are used). On earlier Lua, floating point
    Numbers are simply cast to integer, truncating. This causes silent
    unexpected behavior on Wireshark 4.2 and earlier.

    Note we don't support (and have never done so) passing in our user
    UInt64 type (or the less relevant now Int64 type) to these functions,
    though if 64 bit dissector tables are ever implemented (see #20207)
    that may be a consideration.

    Fix #20216

    (cherry picked from commit fb64334c6a6a2aff0a04c6d45c26e9349af71a57)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 8fd60c6448
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Nov 14 10:56:37 2024 -0800

    ECMP: Exorcise a string buffer arithmetic gremlin

    Use a wmem_strbuf instead of manually allocating a string and managing
    its offsets.

    Avoid appending a dangling space to our string.

    Fixes #20214

    (cherry picked from commit c8e58870733f88f275ca9a6fa115ed085f987d94)

commit a9acddaf21
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Nov 12 18:30:45 2024 +0000

    Qt: setStyleSheet overrides setFont on prefs sample font line

    (cherry picked from commit f1c385025e50875dd1070a4d8f95cd2825672d67)

    Co-authored-by: Chuck Craft <bubbasnmp@gmail.com>

commit 5be69b0e28
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Nov 12 13:02:40 2024 +0000

    hsrp: Fix the display length of some TLV blocks

    Include both TLV size and TLV block length.

    (cherry picked from commit 6f7207a6ded2c323ce95a73aae74df7464252933)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 81e08e22e9
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Nov 12 12:40:44 2024 +0000

    Qt: Improvements in Font and Colors preferences

    Only use gradient styleSheet when colorstyle is gradient. The
    QLineEdit qlineargradient ss does not currently work on macOS,
    but this will fix display for System Default and Solid.

    Use the same border on the sample lines as in the color select
    buttons.

    (cherry picked from commit bc6c5bd260f8c804efb830201cfd850e1a9d7fee)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 13a1f70306
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Nov 11 12:52:55 2024 +0000

    lemon: Suppress type-limits warning on gcc with generated code

    After updating gcc, the lemon generated code starting giving
    warnings with -Wtype-limits (enabled by -Wextra):

    ./ascend_parser.c: In function ‘AscendParserFinalize’:
    ./ascend_parser.c:866:21: warning: comparison is always true due to limited range of data type [-Wtype-limits]

    The code in question:
        if( yytos->major>=YY_MIN_DSTRCTR ){

    compares a type #defined as an unsigned char to a value #defined as 0.
    Since there is no minimum symbol value to have a destructor, it's
    always true, but that's by intent.

    Ping #20175

    (cherry picked from commit 95eb257d8a84588a4f0e94734325297545b4c582)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 46fa38a40f
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Nov 11 10:29:08 2024 +0000

    dumpcap: Initialize failure message routines

    Initialize a set of failure message routines for dumpcap, so that
    if any code in libwsutil calls one of these routines, it prints a
    message instead of segfaulting. Put these routines in libwsutil,
    not libui, as dumpcap intentionally doesn't link against libui.

    Some of the routines are capture file routines, where the parameters
    are libwiretap constants that can only be properly interpreted using
    libwiretap functions. dumpcap intentionally doesn't link against
    libwiretap either, so these functions should never be called.

    It might make sense to move those libwiretap-related report message
    routines from libwsutil to libwiretap, though as those are exported
    that would be an API break and couldn't be done in a backport.

    Fix #20108

    (backported from commit a72f13513e99796d230e8a32d3b2520907e1f51f)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 8dc8b21145
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 10 09:31:02 2024 +0000

    [Automatic update for 2024-11-10]

    Update manuf, services enterprise numbers, translations, and other items.

commit f0e5918788
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Sat Nov 9 09:32:13 2024 +0000

    packet: Make pinfo->rel_ts relative to first packet

    Always have packet_info rel_ts relative to the first packet.
    This will make taps and graphs do correct calculations when
    using time reference on packets.

    Fix #20203

    (cherry picked from commit 8d042ecc258c980bcc1896fe38b032636b418cc1)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 0d3b10b858
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Nov 8 12:10:20 2024 +0000

    capture_opts: Only read the list of capture filters when necessary

    Instead of reading the list of capture filters from the file whenever
    a -f option is given, only do so if the "predef" option is given
    indicating that a named capture filter from the list is needed (and
    they haven't been read yet.)

    Never read the list of named capture filters in capture child mode,
    because that processing should have already been done in the calling
    program, and the capture filter name should have been replaced with
    the real filter already.

    For now we still attempt to read the list of named capture filters when
    running dumpcap standalone from the command line, but only if -f is
    called with "prefdef:<name>" as the option - since dumpcap doesn't
    understand profiles, this will always happen from the default profile
    location. That shouldn't happen either, but we need a better way to
    determine if we're running from dumpcap.

    Ping #20108 - this fixes the vast majority of cases where users would
    encounter that issue. Separately, dumpcap needs to register libwsutil
    report message routines in case some other warning gets reported, but
    as it can't register the wiretap-related ones, that's harder to fix
    without sacrificing ABI and API compatibility, and this needs to get
    fixed in 4.4

    (cherry picked from commit 664a9495bfcbb4150a2551676d5075d0acaa6c73)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 2a63264470
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Thu Nov 7 16:24:29 2024 +0000

    Qt: Check for valid clear_button

    Check for a valid clear_button in updateClearButton() to avoid
    a crash when drag'n'drop a filter from packet details to the
    find frame.

    Fix #20204

    (cherry picked from commit 291d6c11a581274fa68a62cda2b9e694cf927ebe)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 807b7a4892
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Thu Nov 7 10:26:27 2024 +0000

    icmpv6: Capitalize code strings

    Capitalize the first letter of code value strings.

    (cherry picked from commit 5aad8fab0d93a57b4057f920141e15d3e0c22692)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit afa68910a4
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Nov 6 19:26:29 2024 +0000

    Fix extcap interfaces on profile change

    The return value of capture_dev_user_linktype_find needs to be written
    to the active_dlt parameter, not the type parameter. (It has long been
    written to the type parameter, but previously the one written to was
    essentially write-only.)

    Fix up b5c839815e3a2cb8d83ea2fb1a861301b4dc8848

    (cherry picked from commit 3397cd0877c3f384763e6df97708796e7f906d94)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 8d25d7f8ad
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Nov 5 11:21:15 2024 +0100

    Qt: Update traffic table on display filter change

    Update the traffic table on display filter change if "Limit to
    display filter" is active.

    Fix #20191

    (cherry picked from commit cb7f46f495556e3fe13baf5aa580f6fbd1cd9c19)

commit e3e53f8fa1
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Wed Nov 6 12:11:44 2024 +0000

    modbus: Fix bit value

    Use proto_tree_add_bits_item to automatically produce the value with
    the bitmask instead of attempting to manually reproduce it with
    proto_tree_add_boolean_bits_format_value and getting the bitmask wrong.

    Fix #20193

    (cherry picked from commit 65797b7cce56ed839b49652ce807bb9da8ab485c)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit f26df6d534
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Wed Nov 6 10:34:23 2024 +0000

    Modbus: fix bit value display in packet details

    Fixes #20192

    (cherry picked from commit e39bfd04180e29b6da41d45b60f92b857109dc70)

    Co-authored-by: Pascal Quantin <pascal@wireshark.org>

commit 162db4e97c
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Nov 6 09:42:26 2024 +0000

    Qt: Override the popup mode for Filter Buttons with menus

    We have to use the QToolButtons auto created from actions in order
    for those button to properly show up in the extension menu at narrow
    widths. (See #19887). It is, however, possible to retrieve the
    QToolButton after it is created in order to change its PopupMode.

    Fix #20190

    (cherry picked from commit 53878e7ca5ae194c486aa97e225fbc69ca0218d1)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 492d79244a
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Wed Nov 6 08:16:08 2024 +0000

    SRT: display NUL character in a middle of a string

    Fixes #20113

    (cherry picked from commit d70801c600a2334cf420f60c67cb3c3573031eb9)

    Co-authored-by: Pascal Quantin <pascal@wireshark.org>

commit d7ea38a830
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Nov 6 06:21:00 2024 +0000

    Profinet DCP: Use applicable sub option name in tree

    Fixing a copy-paste, probably.

    (cherry picked from commit 535a8a300879a6b30385ff6e3c34c9d5fb06bb56)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 5163e8a091
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Tue Nov 5 19:48:09 2024 +0000

    WiFi: Adjust regulatory info field

    Closes #20187

    (cherry picked from commit e63cefb9359a3bdd88e5e55a19202ffca1c11f93)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit f102282fc8
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Nov 5 19:26:32 2024 +0000

    BACAPP: Update to use the current recursion depth API

    Fixes #20159

    (cherry picked from commit 2e54d8224cda09d4134b3f364d3745bb0a537c4d)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 55263cc1f3
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Tue Nov 5 16:20:24 2024 +0000

    Protobuf: Use enum value if name is missing when mapping to JSON

    The enum value is used if the name of the enum value is
    not specified in proto file when mapping Protobuf to JSON.

    close #20182

    (cherry picked from commit f85d2fe5e188d932f0a30b39314a48157926edce)

    Co-authored-by: Huang Qiangxiong <qiangxiong.huang@qq.com>

commit 4677961e03
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Tue Nov 5 13:48:13 2024 +0000

    POP: use state info stored in conversation during first pass only

    And copy in per packet data the info required for subsequent pass

    Fixes #20124

    (cherry picked from commit b3bc9bb617c2b7776bf94e646e9ca322c932725d)

    Co-authored-by: Pascal Quantin <pascal@wireshark.org>

commit 2add1f5b29
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Tue Nov 5 11:55:05 2024 +0000

    win32: fix PortableApps extcap installation folder

    Closes #20184

    (cherry picked from commit 51f95a07ea48199ee15a8e65a080fe7cb76f9483)

    Co-authored-by: Pascal Quantin <pascal@wireshark.org>

commit d4ad11d6aa
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Tue Nov 5 09:36:35 2024 +0000

    QUIC: Support initial_max_path 0 or 1 (draft-09 or later)

    QUIC Multipath draft-07: "The value of the initial_max_paths parameter
    MUST be at least 2.  An endpoint that receives a value less than 2
    MUST close the connection with an error of type TRANSPORT_PARAMETER_ERROR."

    QUIC Multipath draft-09 and later changed this to: "For example, if
    initial_max_path_id is set to 1, only connection IDs associated with
    Path IDs 0 and 1 should be issued by the peer. If an endpoint receives
    an initial_max_path_id transport parameter with value 0, the peer aims
    to enable the multipath extension without allowing extra paths immediately."

    So consider multipath enabled by a peer regardless of the value for
    initial_max_path_id draft-09 and draft-11, unlike in draft-07.

    (cherry picked from commit fdcbd6efe3c271a8c11f5fded854b3dc06676bab)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit f306e401e5
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Nov 4 16:41:48 2024 +0000

    rtcp: Fix packet length

    In RTP and RTCP, the packet length encoded in the packet is one less
    than the number of 32 bit words of the length (with the exception of
    certain Microsoft extensions), not the number of bytes. This was lost
    in a conversion to a dissector table.

    Fixup e5560357285ba8ee6b558fa82666fde2a6efc8e9

    Fix #20188

    (cherry picked from commit 599550c3651c6920ace8a2310f2b953a721f7977)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit b8044f296b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Nov 3 09:31:02 2024 +0000

    [Automatic update for 2024-11-03]

    Update manuf, services enterprise numbers, translations, and other items.

commit e370fdb2c8
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Nov 1 21:53:43 2024 +0000

    dfilter: resolve unparsed for each node in a set

    In check_relation_in, make sure we resolve each unparsed node
    in the set before calling check relation on the outer LHS field.
    Call it with strict == false because literals are allowed.

    The latter changes the test added for #19538 a bit because
    "22-33-" now gets a somewhat more useful error message about being
    a possible but truncated Ethernet address instead of "not a field"
    in a case where it could be a literal Ethernet address.

    Add a test of the "in" operator where the RHS is a field.

    Fix #20183

    (cherry picked from commit 3c752af2717eb6f4ca4e67c4d237f7a29698f7b7)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 79abdccc9d
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Nov 2 11:27:07 2024 +0000

    Art-Net: Don't optimize a single-user regex

    We create the regex each time, so G_REGEX_OPTIMIZE doesn't help
    much and might even hurt. There appears to be a bug in accessing
    unitialized memory on partial matches in Glib or PCRE2 when
    optimization is enabled that doesn't occur when it isn't.

    Also add some quantifier limits to bound the length of the regex.

    Fix #20041.

    (cherry picked from commit 5536e11be4d7910c0029395d0a3a639063d3a1fa)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 3a2e925449
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Oct 31 14:18:56 2024 +0000

    ieee80211: Don't dissect Reserved MTPI as if it were 0 or 2

    For Transmit Power Envelope IEs, the Maximum Transmit Power
    Interpretation describes how to dissect the rest of the IE.
    In IEEE 802.11ax-2021, values 0-3 are defined and values 4-7
    are reserved. Don't dissect the reserved values as though they
    were 0 or 2 (which often makes the frame malformed and halts
    dissection), but mark them as undecoded.

    It appears that some of them have been defined in 802.11be,
    see #20171

    (cherry picked from commit cffdf36ebeb4b4eb59daada6e979ce2f22e16f2e)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 5c02df9587
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Thu Oct 31 14:06:32 2024 +0000

    epan: Add handling for ASN.1 REAL special value NaN

    Add support for decoding the ASN.1 REAL special value of NaN.

    (cherry picked from commit b27a29b9e5d0ce3856c14882c6e4be76f4ab0ea1)

    Co-authored-by: Piotr Gawlowicz <piotr.gawlowicz@srs.io>

commit 756ff1706d
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Thu Oct 31 14:06:09 2024 +0000

    epan: Fix decoding of ASN.1 REAL numbers with zero length (0.0)

    The length zero is valid for ASN.1 REAL types representing the value 0.0.
    Removed the incorrect check that treated (val_length == 0) as an unexpected length,
    allowing proper decoding of REAL numbers with zero length.

    (cherry picked from commit 15f02361f5ab6c605247b42dc77a207af07ba88f)

    Co-authored-by: Piotr Gawlowicz <piotr.gawlowicz@srs.io>

commit 64ab2fa970
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Thu Oct 31 14:05:57 2024 +0000

    epan: Fix asn1 REAL number decoding by correcting lenE assertion

    Adjusted the assertion from (lenE < len - 1) to (lenE < len) because len is decremented after decoding info_octet.
    Note that len = 1B (info_octet) + lenE (Exponent Length, 1-3B) + lenM (Mantissa Length).

    (cherry picked from commit c020c3b214d39f6b441561520788346e71a476dc)

    Co-authored-by: Piotr Gawlowicz <piotr.gawlowicz@srs.io>

commit e00162d463
Author: João Valverde <j@v6e.pt>
Date:   Mon Oct 28 17:11:02 2024 +0000

    epan: Fixup adjusting length of FT_PROTOCOL value

    Instead of hacking the setter to adjust the length by passing a
    NULL tvb value as a flag, add a separate function for that.

    There are some legitimate uses of setting a protocol_value_t with
    a NULL tvb and we do not want to skip setting the string in that
    case.

    Fixup 51de43cfd2467f3e9f63fe0970ac9fb4553b3dd7.

    (cherry picked from commit 5218a2b94d8d834333ce48b5ea280c646fe79bae)

    Co-authored-by: João Valverde <j@v6e.pt>

commit 833ffca21b
Author: João Valverde <j@v6e.pt>
Date:   Mon Oct 28 17:10:06 2024 +0000

    epan: Avoid dereferencing NULL pointer

    Certain pseudo-protocols like _ws.expert have a NULL tvb. Avoid
    dereferencing NULL pointer and return NULL in that case.

    (cherry picked from commit 779b3cb8976c00c2b3cd519a7dc0baa29fc95200)

    Co-authored-by: João Valverde <j@v6e.pt>

commit 65a28e239a
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Oct 29 19:59:49 2024 +0000

    Falcodump+Falco bridge: Add falcosecurity-libs version checks

    Extract the Falco libs version in FindSinsp.cmake and use it for
    conditional code in falcodump and the Falco bridge dissector. Set a
    minimum Falco libs version.

    (cherry picked from commit 368e1030cd373a57cefe4b2ce0aa220a198e735a)

    Co-authored-by: Gerald Combs <gerald@wireshark.org>

commit 93a3070978
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 27 16:20:12 2024 -0700

    GitLab CI: Try to fix an include path

    Make sure our Falco libs include path is set up correctly.

    (cherry picked from commit 97961af048a8b3e264d4ed78c5c364a23fa6da96)

    Conflicts:
            .gitlab-ci.yml

commit 834514727c
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Oct 29 12:33:52 2024 +0000

    Qt: Don't disconnect all signals (inc. ::destroyed) of WiresharkDialog

    As the QObject documentation warns:
    "Disconnecting all signal-slot connections will also disconnect the
    QObject::destroyed() signal if it is connected. Doing so can adversely
    affect classes that rely on this signal for cleaning up resources. It
    is recommended to disconnect only the specific signals that were
    connected by application code."

    In WiresharkDialog we also change the WindowTitle. In Qt 6.8.0,
    changing the WindowTitle also communicates the new title to the
    AccessibilityWidget.
    (https://codereview.qt-project.org/c/qt/qtbase/+/553568)

    The AccessibilityWidget is removed from an internal Qt cache when
    the widget is destroyed, which doesn't happen if the signals are
    disconnected. If a subsequent WiresharkDialog is created with the
    same name as a destroyed one (e.g., two Follow Stream Dialogs),
    this can result in a lookup in the cache returning the
    AccessibilityWidget pointing to the destroyed QDialog (now a
    nullptr, thanks to shared pointer), which gets dereferenced and
    crashes.

    Don't disconnect all signals, which includes internal Qt signals
    that happen when the dialog is destroyed. Only disconnect the signal
    we added. It's unclear if we need to disconnect signals added by
    derived classes (or this one, for that matter), but derived classes
    should do that if so.

    Thanks to Michael Weghorn for the analysis.

    Fix #20174

    (cherry picked from commit 7a7b99e0d96ff378f531b40300ce41b65a2c049a)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 4d58fef602
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Oct 29 10:44:55 2024 +0000

    5CoRAP: Advance offset correctly when too many items

    Even when not displaying the sub frame because too many (recursive)
    subdevices have been dissected, the offset still needs to advance
    by the header length as well as the length of the data size.

    In a case where the data size is zero, not doing this can lead to
    an infinite loop.

    Fix #20176

    (cherry picked from commit d8ca9fc3392219ed3f77756b7d3b6c18aaea52e0)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit b667fa7cf4
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Oct 28 23:34:34 2024 +0000

    dot11decrypt: Fix Fast BSS Transition decryption on big-endian systems

    The mdid field used as input for the PTK derivation for Fast BSS
    Transition is incorrectly converted to little-endian byte order.
    Due to this the derived PTK is invalid on big-endian systems,
    making the decryption fail. This error also results in a few failed
    tests on big-endian systems.

    The mdid field is a 2-octet value, not a 16-bit value so byte order
    conversion should not be applied. Fix by removing the byte order
    conversion.

    Ping #19965

    (cherry picked from commit 361c5c856227d0e80987252c5661da8978d85351)

    Co-authored-by: Mikael Kanstrup <mikael.kanstrup@gmail.com>

commit 7cd591940d
Author: Anders Broman <a.broman58@gmail.com>
Date:   Mon Oct 28 14:37:48 2024 +0000

    MMS: Wrong bitmask used for CheckConditions bits.

    closes #20172

    (cherry picked from commit 0a59f10bef195730ca651847f961457c86c4b187)

    Co-authored-by: Anders Broman <a.broman58@gmail.com>

commit 4cd6353109
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Oct 28 13:41:56 2024 +0000

    SIP: Check if we have a sip_via_be_route_handle before using it.

    closes #20173

    (cherry picked from commit d8c2c06f29dcde4c0e3d0b4d99ef4f8f9b4ce415)

    Co-authored-by: Anders Broman <a.broman58@gmail.com>

commit e917c017c5
Author: Anders Broman <a.broman58@gmail.com>
Date:   Mon Oct 28 07:48:17 2024 +0000

    macos-setup.sh: fix patch for libscap

    (cherry picked from commit 6289ab7f70c86c14d3fed5feccfb3b8469bb0062)

    Co-authored-by: Michael Tuexen <tuexen@wireshark.org>

commit 9a84681ed4
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Oct 27 22:14:25 2024 +0000

    Use g_string_free(..., FALSE) as intended

    The defining characteristic of g_string_free(..., FALSE) is that it
    returns the pointer to the remaining allocated string. To make it
    unambiguous that this allocated string is being handled by the rest
    of the code change these calls to g_string_free() into assignments.

    Closes #20169

    (cherry picked from commit c53fa67b94ad9d787519aa9462d8800e162208e1)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit a5c586d850
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 27 09:31:51 2024 +0000

    [Automatic update for 2024-10-27]

    Update manuf, services enterprise numbers, translations, and other items.

commit 301499ac8b
Author: Giovanni Musto <giovanni.musto@partner.italdesign.it>
Date:   Sat Oct 26 17:17:35 2024 +0000

    BLF: Fix endianness convertion for linkUpDuration

    (cherry picked from commit 65f746c4baf264ddd1eb65ae971d031345c67194)

    Co-authored-by: Giovanni Musto <giovanni.musto@partner.italdesign.it>

commit 9a3e634c0b
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Oct 26 01:25:28 2024 +0000

    HTTP2: Fix decompression of single padded DATA frames

    Workaround process_reassembled_data not truncating one-and-only-one
    "reassembly" tvbs properly by slicing the padding off the tvb
    immediately after calculating it.

    Fix #20167

    This can and should still get properly fixed in the reassembly
    functions, but trimming the padding off immediately also simplifies
    handling. (We could, as a result, reduce the number of times we
    pass around the data length and offset, though not done here.)

    (cherry picked from commit aa4f7fee0ea87455311d61dd1ff674b1f17a2fe9)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit ec37b166a2
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Fri Oct 25 18:08:30 2024 +0000

    TCP: check first if a change is going to be made in the first place

    In all these blocks complex expressions are evaluated, but a change to
    the tcp analysis data is only made when the frame was not yet visited.
    Rather than doing all the work for nothing, first check if the frame
    was visited, and only if not evaluate further.

    had_acc_ecn_setup_syn and had_acc_ecn_setup_syn_ack tcp analysis data
    fields not even took in consideration to only evaluate the first time
    the frame is visited. These have now been included.

    (cherry picked from commit 7ea8490ea86294f9990fb6ca59a7d2ff7764ee28)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit b1d69aff3c
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Oct 25 00:57:47 2024 +0000

    Qt: Prevent overflow in I/O Graph simple moving average

    The warmup_interval, mvag_to_remove, and mavg_to_add variables
    are always multiples of the fixed interval, and when retrieving
    the item value, we divde by the fixed interval. There's no point
    in doing that; just keep track of everything in term of indices.

    In particular, this removes the possibility of overflow, which
    could occur in 4.4 and later because the interval scaling changed
    by a factor of 1000 in order to support intervals down to 1 microsecond.
    ( b46c1e9fc7ecb5f74c839dfca198e4022b2d2075 )

    Also add a failure check if a negative index is passed into
    get_io_graph_item instead of running off the left end of an array.

    Fix #20163

    (cherry picked from commit 6a136b634011d1a5f92106c8c8ff5007d55a35cb)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 010eb80f4d
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Oct 24 14:02:11 2024 +0000

    TCP: don't hide the expert item behind the tree

    (cherry picked from commit 63142c663ae8e95dd48f7fcd23af5cf24c9e0c89)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 940cd0e171
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Wed Oct 23 06:52:02 2024 +0000

    Qt: Add "Enable Legend" to the I/O Graph context menu

    We might want to remove the checkbox from the main dialog window,
    because it (along with other checkboxes) increases the minimum width.
    See #20147.

    (cherry picked from commit 2d52b6569fbe149977a33d7413eb516dcba6d307)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit a391aab7b2
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Tue Oct 22 06:22:00 2024 +0000

    dot11decrypt: Fix TKIP broadcast frame decryption

    For WPA2 mixed mode (CCMP+TKIP) the EAPOL key_version can't be used
    to determine that TKIP method is used. Instead as per IEE 802.11
    specifications the encryption method used for pairwise and group
    traffic is negotiated through cipher suite selection. Fix TKIP
    broadcast frame decryption by adding a check on used group cipher
    suite.

    Add also a test case to avoid future regression.

    Solves: #19994

    (cherry picked from commit 5d887681fc0181862f9d7b40613e8dd18b1e99ac)

    Co-authored-by: Mikael Kanstrup <mikael.kanstrup@sony.com>

commit 4fbbb4b8af
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Oct 22 14:39:25 2024 +0000

    dot11decrypt: Add defines for cipher suite selectors

    Add defines for cipher suite selector values and make use of them
    instead of magic inline values.

    (cherry picked from commit f0a184eabd43c47c2a7aedb566e731bcb62e0b35)

    Co-authored-by: Mikael Kanstrup <mikael.kanstrup@sony.com>

commit df98b4229c
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Oct 22 11:55:51 2024 +0000

    ieee80211: Fix Block Ack bitmap parsing for large bitmaps

    Make sure to use the correct bit offset for retrieving the bit
    and reporting frame number after the first 8 bytes of the offset.

    Fix up issue accidentally introduced by 43d06c9fb3b287a3b9c0c85cd7
    when trying to support the 64 and 128 byte block ack bitmaps in
    802.11be (Wi-Fi 7)

    Fix #20156

    (cherry picked from commit a412efb8102a8625e5c0074c592cc79e0111aa7d)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 254ff73619
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Oct 21 14:00:04 2024 +0000

    test: Fix Sharkd TLS secrets test on Big-Endian

    The file used, tls12-dsb.pcapng, has two used CLIENT_RANDOM
    secrets, and the order in which they're output is related to
    iterating over a hash table and is unpredictable. In particular,
    it's different on Big Endian platforms than Little Endian.
    Test for the Base64 of either of the two possibilities.

    Ping #19965

    (cherry picked from commit 6002d1096a6d5e53acc1693815951ed2e7922f80)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 1585455406
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 20 09:29:40 2024 +0000

    [Automatic update for 2024-10-20]

    Update manuf, services enterprise numbers, translations, and other items.

commit 2070b85903
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sat Oct 19 10:10:21 2024 +0000

    FTDI FT: Fix endpoint to interface mapping

    The endpoint to interface mapping is broken since commit baf0bfc263ea
    ("USB: Store endpoint with direction flag in usb_conv_info"). Fix the
    issue by using both endpoint number and direction flag in the switch
    statement. Correct the endpoint IN and OUT comments to adhere to USB
    specification naming (IN is from device to host, OUT is from host to
    device).

    (cherry picked from commit 66abec6f86057ebd3cc98150107f160b9da7f908)

    Co-authored-by: Tomasz Moń <desowin@gmail.com>

commit 5673c870b7
Author: Dylan Ulis <daulis0@gmail.com>
Date:   Thu Oct 17 18:54:33 2024 +0000

    ENIP/CIP I/O: Register the ENIP encapsulation of CIP I/O to ENIP

    Register the dissector for CIP I/O packets as carried by EtherNet/IP
    (with its Common Packet Format) over UDP to the ENIP protocol.
    That dissector always indicates EtherNet/IP, and users prefer a
    proto_enip protocol item to be added to the tree in the initial
    part of the dissector. (A proto_cipio item is added later, in the
    actual CIP I/O data.)

    Fix #19517

    (cherry picked from commit a9f2359ef4932a9f91ea12e48371ef6bcbdc7521)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit d4b114540d
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Thu Oct 17 18:25:00 2024 +0000

    packet-cql.c: fix parsing of Prepared result, unify more code with Rows result

    commit 161b9809 tried to improve the Prepared results,
    but apparently did not do a very good job - for some reason, I kept duplicate parsing of the metadata.

    Removed the duplication and left the call to the metadata parsing.
    While at it, remove some duplicate code between rows results and prepared results.

    Fixes: wireshark/wireshark#20142

    Signed-off-by: Yaniv Kaul <mykaul@gmail.com>

    (cherry picked from commit a5f78812de0e10e8f7dea99ab782592352d53483)

    Co-authored-by: Yaniv Michael Kaul <yaniv.kaul@scylladb.com>

commit 2104690e51
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 16 22:17:21 2024 +0000

    syslog: Dissect trailing message for nonconformant packets

    In the case of syslog messages that neither conform to RFC
    3164 nor 5424, dissect the trailing undissected data as
    syslog.msg and add an expert info.

    Fix #20138

    (cherry picked from commit 38ca3b11a4195a80f1c6091a7869f550f691329e)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 195e78edc4
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 16 10:59:16 2024 +0000

    ieee80211: fix typo (MDL => MLD)

    Fix #20134

    Reported by Jitendra saraf

    (cherry picked from commit 8f928883c0e27995de434a78f1ef108d13bd1608)

    Co-authored-by: Alexis La Goutte <alexis.lagoutte@gmail.com>

commit d39dfcc0af
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Wed Oct 16 06:14:23 2024 +0000

    TLS: Fix JA4_c if extension list is empty

    The value of JA4_c is set to "000000000000" if there are no extensions in the
    sorted extension list.

    Fixes: #20066

    (cherry picked from commit 80428848bfbf06fac6ea32c57f4062602fb4e4eb)

    Co-authored-by: Uli Heilmeier <uh@heilmeier.eu>

commit e920102d19
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Oct 15 18:04:58 2024 +0000

    tools: lowercase usb hex values for the value strings

    Some of the USB sources contain uppercase for the hex digits,
    but most are lowercase. Lowercase all the hex strings so that
    they sort in proper numerical order. Prevents:

     ** (wireshark:3326737) 20:46:56.474521 [Epan WARNING] epan/value_string.c:471 -- _try_val_to_str_ext_init(): Extended value string 'usb_products_vals' forced to fall back to linear search:
      entry 20705, value 645005387 [0x2672004b] < previous entry, value 645005389 [0x2672004d]

    (cherry picked from commit 75b742d2993e08b88671a22ff74f5272ecec2f18)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit df061c87d7
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Oct 15 09:54:31 2024 +0000

    ZBEE ZCL: Add required registration of hf

    (cherry picked from commit 4dd141773c5cf4169a61af609ce4032476c02aa3)

    Co-authored-by: Vafokhon Safokhujaev <vafo.main@gmail.com>

commit b088a11cfb
Author: James Ko <jkcko@outlook.com>
Date:   Thu Oct 10 16:24:40 2024 +0000

    Wi-SUN: Fix & Update Node Role IE

    Fix Node Role ID field width.
    Change bit (7) to LBATS Implemented field.

    (cherry picked from commit fefd95876d79341b43f6c72b0f853fb9125fa608)

    Co-authored-by: James Ko <jck@exegin.com>

commit db47a355ab
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 13 09:51:43 2024 -0700

    Tools: Make make-iana-ip.py less destructive

    Don't leave behind an unusable iana-ip-data.c if we fail. Make
    make-iana-ip.py and make-manuf.py runnable from anywhere.

    (cherry picked from commit 5ac7d8359048f235a63446ed0fc3afcce24976e2)

commit 44b0dd01a8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 13 09:31:37 2024 +0000

    [Automatic update for 2024-10-13]

    Update manuf, services enterprise numbers, translations, and other items.

commit 0beba660c5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sat Oct 12 10:38:40 2024 -0700

    GitLab CI: Fix a macOS notarization issue

    In 61305fd4b1 we inadvertently stopped stapling notarization tickets
    to the macOS Intel DMG. Add back the `stapler staple` command.

    Fixes #20129

    (cherry picked from commit b6514e848edc3129d1889734b9c2d0c6e303d5e2)

commit ca5025c55c
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Fri Oct 11 15:41:28 2024 +0000

    Zigbee ZCL: IAS WD Police panic, Fire panic, and Emergency panic warning modes

    (cherry picked from commit 74de3f8e784a096ac5860dec3351b470183c6482)

    Co-authored-by: Artem Kan <kan.art.email@gmail.com>

commit 80ff4e6c06
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Oct 11 15:16:35 2024 +0000

    RPC: Fix handling of ONC RPC with unknown protocol calls

    When creating a fake RPC program for when the "dissect_unknown_programs"
    preference is enabled, set the protocol ID to the "Unknown RPC protocol"
    protocol instead of leaving it as zero, which causes an assertion
    exception in 4.4 and later.

    Cf. 8c92ca7affa435586844ca8d626ea3ec172593c9

    (cherry picked from commit 33f309fee082fd9fda97880bb092f31fab7a2f16)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 39d69c079f
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Oct 11 13:36:08 2024 +0000

    CMake: Make the Qt D-Bus module optional on Qt 6

    Someone might have Qt6 without D-Bus installed, and the code works
    without it, just with less functionality.

    Fix #20126

    (cherry picked from commit cb640448c24fa7f2c9c1632a58adc3eedd6a4fa5)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 113a4c3036
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Oct 11 11:57:21 2024 +0000

    UMTS RLC: Free with wmem what was allocated with wmem

    Commit 2db3db56bfd1ba38c5f42015622dbc8530ed05e9 changed to using
    wmem_file_scope memory for the frags, to prevent leaks caused by
    dangling frags in malformed packets. The freeing functions need
    to also call the matching wmem_free or else on file close there
    can be complaints, even crashes with FORTIFY_SOURCE about freeing
    the middle of a wmem_allocated block and possibly a double free.

    This GHashtable could be changed to a autoreset wmem map, which
    will be done in a follow up commit. (This is small in order to
    make backporting simpler.)

    Also avoid UB warnings in the case of memcpy'ing a NULL array
    with a zero length (which is undefined according to the C standard.)

    (cherry picked from commit a2c8ff7cb6b020b60adbd5a2d3e0111b26edd09f)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 0e120834b0
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Oct 10 23:15:18 2024 +0000

    CMake: Fix our c-ares version discovery

    c-ares 1.34.0 and later generate ARES_VERSION_STR using a macro, so
    fetch the version from ARES_VERSION_MAJOR, ARES_VERSION_MINOR, and
    ARES_VERSION_PATCH.

    Fixes #20125

    (cherry picked from commit 7c1418625d2ba5095ef5393abdb2141c990a662c)

    Co-authored-by: Gerald Combs <gerald@wireshark.org>

commit e7a77d1e52
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Oct 10 21:17:26 2024 +0000

    MPEG PES: Fix dissection of video streams with length present

    Length zero, meaning "to the end of the packet" is allowed only
    for PES packets whose payload consists of bytes from a video
    elementary stream, but packets from a video stream are not
    *required* to have length zero. If they don't have length zero,
    we need to subtract off the bytes from the header from the length
    before adding the payload bytes or passing to a subdissector.

    This is a reported length, not a captured length, so use
    tvb_new_subset_length.

    Add an expert info if the length is zero but it is not a video
    elementary stream.

    This issue was exposed more after the packets started being
    handed to subdissectors based on information in the Program
    Map Table.

    (cherry picked from commit f126cbb5f5f5f934ef878efa582bd0c008a6aac0)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 94966f2a9f
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Oct 9 19:06:11 2024 +0000

    USB-CCID: Handle RDR_to_PC_Parameters message with dwLength 0

    Closes #20107

    (cherry picked from commit 77151ccc0243f63a22126187ab2b8dd352207d10)

    Co-authored-by: Anders Broman <a.broman58@gmail.com>

commit c29e4bf2c1
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Oct 9 19:02:13 2024 +0000

    PTP: Fix analysis when sequenceId resets happen.

    Splits single max delta parameter for related messages and
    consecutive messages of same type into separate thresholds.
    Aligns max delta for related messages with expectations of 1588/802.1AS.
    Adds a configurable parameter for max delta for messages of same type.

    Closes #20099

    (cherry picked from commit e74fe53e3c4ba54277e8dafab99e70cf58b1154b)

    Co-authored-by: Patrik Thunström <patrik.thunstroem@technica-engineering.de>

commit 09d2a50c58
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Oct 9 18:11:58 2024 +0000

    DOF: Use a flexible array

    Switch from an array of length 1 to a flexible array, which should
    make things more obvious for static analyzers.

    Fixes #20065

    (cherry picked from commit 8bf069c77402a840cae0cd63dfcd9da7264a9201)

    Co-authored-by: Gerald Combs <gerald@wireshark.org>

commit 21f2c2b068
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Oct 9 14:55:49 2024 -0700

    Release notes: Mark a couple of issues as fixed

    Issues #20051 and #20082 were fixed in 4.4.1.

commit 255121ad80
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Oct 9 13:57:57 2024 -0700

    Version: 4.4.1 → 4.4.2

    [skip ci]

commit 575b2bf474
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Oct 8 17:54:56 2024 -0700

    Build: 4.4.1

    [skip ci]

commit 9f33105c74
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 9 11:53:13 2024 +0000

    RELOAD Framing: Call the matching wmem_free scope

    If we wmem_alloc in file scope, we have to wmem_free in file_scope
    instead of trying to call g_free on that address directly.

    Fixup 636ab9da8be8c6f653c8bac563e6506c16414a7c

    Fix #20116

    (cherry picked from commit 692f9bed05348166986b5219faefad43ccac522a)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 8c64eff1b8
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 9 10:42:24 2024 +0000

    PortableApps: Add the Donation page

    The PortableApps Platform supports having a Donate page. Include ours.

    (cherry picked from commit 942134693498f67f18a23a880013061f2d43b73d)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit d17a2febc5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Oct 8 18:19:22 2024 -0700

    RELOAD Framing: Make sure we have valid addresses

    Ping #20114

    (cherry picked from commit 636ab9da8be8c6f653c8bac563e6506c16414a7c)

commit 418fd5fe4b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Oct 8 11:56:28 2024 -0700

    AppleTalk: Make sure we have valid addresses

    Make sure ATP, ZIP, and ASP have valid addresses. Use sizeof instead of
    a hard-coded value in a few places.

    Fixes #20114

    (cherry picked from commit 3de741321f85c205c0a8266c40f33cb0013bd1d2)

commit 016d325dd0
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Oct 8 09:28:09 2024 +0000

    Capture: don't retrieve both monitor mode and non monitor mode caps

    Don't always retrieve the capabilities for non monitor mode and
    monitor mode. It causes too many problems to put an interface into
    monitor mode when not requested, at least on macOS. Some of the
    related Linux issues (#20090 and #20100) were dealt with in another
    manner, because they would cause problems even when actually
    capturing in monitor mode.

    This can perhaps be revisited if libpcap can find a way to retrieve
    the link-layers supported when a device is in monitor-mode mode
    without actually putting the device in monitor mode.

    Fix #20051. Fix #20082.

    (cherry picked from commit cb83a64eef7ff63a26205541792913b89a618748)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 4ebe80cb25
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Oct 8 09:47:13 2024 +0000

    Qt: Allow saving files with Qt 6.8

    Prior to Qt 6.8, QFileDialog::selectedNameFilter() returns the current
    text displayed as the filter in the dialog; i.e., as we set
    HideNameFilterDetails it does not include the parenthetical extension
    list.

    As of 6.8, it includes the hidden details:
    https://bugreports.qt.io/browse/QTBUG-127924

    This causes hash lookups for the file type to fail, reporting
    unknown file type.
    One simple approach is just to add both to the hash.

    (cherry picked from commit 702116d425a1542c0db84e17236dae8c7e1b0bfd)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 63e35480e1
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Oct 7 10:29:31 2024 -0700

    Prep for 4.4.1

commit b8cc64ddb8
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Mon Oct 7 18:16:45 2024 +0000

    f5fileinfo: Update VELOS and rSeries platform identifiers

    Add missing platform identifiers for rSeries and VELOS platforms and VELOS
    blades.  Move the VELOS CX410 Chassis platform ID out of the '#if 0' block,
    since it will show up as the platform ID in a capture from that platform.

    https://my.f5.com/manage/s/article/K86001294
    - r5920-DF (C136)
    - r10920-DF (C137)
    - r12900-DS / r12800-DS / r12600-DS (C138)

    https://my.f5.com/manage/s/article/K4309
    - (VELOS) BX110 Blade (A118)
    - (VELOS) BX520 Blade (A119)
    - (VELOS) CX1610 (Chassis) (R100)

    (cherry picked from commit 8543274a5aa18eb108a31638f7f3195dcbfc4305)

    Co-authored-by: Paul Aurich <paul@darkrain42.org>

commit 67e4f7aa7c
Author: Giovanni Musto <giovanni.musto@partner.italdesign.it>
Date:   Mon Oct 7 05:50:08 2024 +0000

    BLF: Treat zlib's Z_STREAM_ERROR as WTAP_ERR_INTERNAL

    (cherry picked from commit f829d126978d4e7b1f24320bf70bc768cbddfc79)

    Co-authored-by: Giovanni Musto <giovanni.musto@partner.italdesign.it>

commit f9931f12b6
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sat Sep 28 08:02:21 2024 -0700

    GitLab CI: Ignore glab failures

    glab 1.41 and later return a nonzero exit code when the "auth" command
    fails.

    (cherry picked from commit d1f213208cdbe58fea8dbf418d3e1f00c5a7de6c)

commit f29fe5bde5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Sep 27 10:27:45 2024 -0700

    GitLab CI: We don't need to install glab

    We install it in the ubuntu-dev container.

    (cherry picked from commit 7f9ebffbd678a4bdf4858b18e8b4b8d1d574a785)

commit 59997c88c9
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Sep 25 10:07:06 2024 -0700

    GitLab CI: Expand a comment

    Expand a comment about notes API permissions and print a message when a
    job doesn't have those permissions.

    (cherry picked from commit 082cd66ff3a92f0dfe07c3fae8ff0c9a6e882ee9)

commit 0d3b826933
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Wed Sep 25 17:15:22 2024 +0000

    GitLab CI: Comment typo in .gitlab-ci.yml

    (cherry picked from commit f6c1d5423fc446ff2bfb8f6a12e3c54367dd477a)

commit 3a596892e7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 6 13:21:26 2024 -0700

    DMP: Add a length check

    Fixes #20110

    (cherry picked from commit 73422fb85976c4122a21fb72fe9b4bf711614abe)

commit eed95cbc58
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Oct 6 17:55:41 2024 +0000

    Don't try to use O_PATH when it's not available.

    The O_PATH flag is used in the DBus-based "Open in Folder" functionality on
    non-Windows non-Mac platforms.

    There exist non-Windows non-Mac platforms which support DBus and lack O_PATH,
    and the build would fail on those platforms.

    Fall back to using O_RDONLY instead of O_PATH when O_PATH is not available.
    This will require that read permission be granted for the file in question, but
    that should usually be the case.  As it is, this usage is only on a fallback
    path which should only be used when the application is sandboxed.

    Fixes #20031

    (cherry picked from commit 753f0077edf17fd7abe6f4f28995cd08920295c1)

    Co-authored-by: Darius Davis <darius-wireshark@free-range.com.au>

commit d0c54d2097
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Oct 6 17:56:41 2024 +0000

    capture: Disable interface monitor on Linux when getting caps

    Changing the monitor mode settings of a device can create and/or
    remove a temporary device under Linux. We don't want retrieving
    the capabilities of an interface to trigger new interface list
    refreshes, which lead to an infinite loop. That includes when
    starting stats. For similar reasons, stop listening immediately
    when beginning a capture.

    Do this by telling the socket to stop listening for messages
    temporarily while the retrieval is in progress. Actually removing
    the socket would require more updates in the GUI; if we told the
    GUI to stop processing we would have to wait to start listening
    again when the event loop had processes all pending events on
    the file descriptor.

    Fix #20100. Fix #20090.

    (cherry picked from commit 5e958a30599bf42df5172c91274a69656acd9483)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 77e5b70cb9
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 6 09:32:09 2024 +0000

    [Automatic update for 2024-10-06]

    Update manuf, services enterprise numbers, translations, and other items.

commit 5933e848a2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Oct 4 13:33:46 2024 -0700

    gen-bugnote: Fix an escape

    We're using jq's --raw-output, so we need to escape backslashes.

    (cherry picked from commit ccea80520a88b8c7f757c24409677948c3b569d8)

commit 6b2f465976
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Oct 5 00:44:32 2024 +0000

    BLF: Replace ws_strdup_printf with ws_strdup where it makes sense

    (cherry picked from commit 33ffdeaaf9d41f5d5443f5d7c46f70d6824f9311)

    Co-authored-by: Giovanni Musto <giovanni.musto@partner.italdesign.it>

commit 9504aec601
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Oct 4 23:56:46 2024 +0000

    BLF: Skip over corrupted log containers with a warning

    (cherry picked from commit ca8f21ef2f8a77020a51290dd92799b3ee66d95b)

    Co-authored-by: Giovanni Musto <giovanni.musto@partner.italdesign.it>

commit 2f021b1a5d
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Oct 4 14:55:55 2024 -0700

    Update enums.

commit fe5889e196
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Oct 4 22:14:17 2024 +0000

    wslua: fix indentation. [skip ci]

    (cherry picked from commit 71267bd42ffc26eaec78efe121d0c55603a32b84)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit 1f5931e311
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Oct 4 19:47:53 2024 +0000

    BLF: Make sure we return if we fail to allocate memory

    (cherry picked from commit 301a7ea03e201e6d8e11e72e872ea3d6fd8a9fbb)

    Co-authored-by: Giovanni Musto <giovanni.musto@partner.italdesign.it>

commit 21d51bd022
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Fri Oct 4 19:16:17 2024 +0000

    Art-Net: Update OEM and ESTA codes

    (cherry picked from commit 3754aba2d621736f18eee3e2541cb8cdaa3ad27c)

    Co-authored-by: Martin Mayer <martin.mayer@m2-it-solutions.de>

commit 6bcddf6e2f
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Fri Oct 4 15:39:55 2024 +0000

    OWAMP: Support PTP timestamps (RFC 8186)

    RFC 8186 added optional support for truncated PTP format timestamps
    to OWAMP as well as TWAMP.

    (cherry picked from commit c7bdedc30c27c78de7441b10aadb107b3277183f)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit e3aad590a7
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Oct 4 09:52:28 2024 +0000

    TWAMP: Fix sender timestamp format (Z-bit, RFC 8186)

    The Z-bit being 1 indicates truncated PTP time format according to
    RFC 8186. Zero (as it must be prior to that) indicates NTP time format.
    The handling was reversed for one of the three cases.

    (cherry picked from commit d69138d8f2eab3a4b2063fb9e96dbf31b32b9288)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit bbf0f30288
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 2 11:06:45 2024 +0000

    Qt: Don't refresh interfaces while capturing

    If we get a request to refresh interfaces while capturing is
    going, defer it until we're not longer capturing and process
    the interface list then. Changing the interface list during a
    capture isn't something we can really do much about; if we're
    capturing on a single interface and it goes away, that will stop
    capturing, at which point the interface list will be taken care
    of.

    Note that 89cc85b5efce579aeda3cfaeb0d74551b229acc4 in fixing #11176
    for similar reasons disabled the menu item, so this is only from
    interacing monitoring.

    This prevents, among other things, the extcaps from being rediscovered
    and their toolbars from being cleared. Fix #19854.

    It also fixes some problems that occur when capturing on a device in
    monitor mode.

    (cherry picked from commit 192499b9afa52f9e4e6609502ddef698c4b94ee5)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 8e9aaab786
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Oct 2 01:15:00 2024 +0000

    MMS: Add more null checks

    Also don't register the protocol in tables a second time. We don't
    need to call the handoff function when changing the preferences
    because there's nothing it needs to do.

    The files in #1342 crash when disabling the new preference without
    checking if the private data is null.

    (cherry picked from commit 906e55b8d588171d1995224a7cc012c2a13f3a21)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 3460778bf4
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Sep 26 20:28:05 2024 -0400

    tshark: Change fields glossary report with prefix syntax

    Backport part of the glossary report changes from the master branch.
    Adding the prefix as an extra option separated by a space made
    other options, like the configuration profile setting, not work.
    Change the syntax to "-G fields,<prefix>", similar to the "-z"
    options and as done in the master branch.

    Among other things, this makes it easier for people to list the
    fields corresponding to columns. (See #20096.)

commit 783600a46c
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Sep 30 23:47:33 2024 +0000

    NSIS+WiX: Switch back to "release-notes.html"

    668881fec7 and 487b336942 installed the release notes as "Release
    Notes.html". This broke the help URL code, so switch it back.

    Fixes #20056

    (cherry picked from commit a813b0ed6d1294d1322020e9d9323e1ea567f161)

    Co-authored-by: Gerald Combs <gerald@wireshark.org>

commit a647c39eb8
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Sun Sep 29 17:30:19 2024 +0000

    gsm_sim: Add EF.ARR and EF.UMPC

    Added EF.ARR (2F06) and EF.UMPC (2F08), and fixed EF.PL (2F05).

    (cherry picked from commit c5b5c881145641e9830657895282bfc8bb0f6b5c)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 4b1d99dae0
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 29 09:32:19 2024 +0000

    [Automatic update for 2024-09-29]

    Update manuf, services enterprise numbers, translations, and other items.

commit e3a320cc67
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Sep 29 01:39:17 2024 +0000

    MySQL: Handle embedded null bytes in queries

    The MySQL/MariaDB protocol states that COM_QUERY and COM_STMT_PREPARE
    use string<EOF> (to the end of the packet) to contain SQL queries,
    because embedded NUL bytes are allowed:

    https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_com_query.html
    https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_com_stmt_prepare.html
    https://mariadb.com/kb/en/com_query/
    https://mariadb.com/kb/en/com_stmt_prepare/

    Fix the MySQL-specific parts of #20101.

    There's a separate issue affecting all of Wireshark involving proper
    display and handling of string fields with embedded NULs.

    (cherry picked from commit 67d99398798ca320fb7d7324f47aa24199ef8860)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 054a3ce224
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Sep 26 23:24:00 2024 -0700

    mysql: don't just skip over data, check that it exists.

    This ensures that a too-large length (including one with the uppermost
    bit set, so that, if cast to an int, it becomes a negative number) will
    cause an exception, rather than causing the packet offset to overflow or
    underflow.

    (backported from commit 7613e20cc708d0f653ffd6e378fa0c6ffb0afb2d)

commit 3e180bab83
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Sep 24 09:26:23 2024 -0700

    WiX: Fix some component names

    (cherry picked from commit 6c84326487555f9a437dff5a6688ef4827779031)

commit a01f4ace45
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 23 16:31:59 2024 -0700

    wsutil: Remove an unnecessary component from the Windows extcap path

    !14774 / 8541041922 ensured that we have separate namespaces everywhere
    for syscall+log and packet extcaps. It went a bit too far and added an
    unnecessary subdirectory to the global extcap path on Windows.

    Add missing "running in build directory" logic on Windows and use it
    to build the proper extcap paths for both the build and installation
    directories.

    Fixes #20069

    (cherry picked from commit a616eb00d1369cba8d42950ec3620a8490e7fe06)

commit 95bc8b9a9b
Author: Anders Broman <a.broman58@gmail.com>
Date:   Wed Sep 25 14:06:07 2024 +0000

    file_wrappers: Cast size_t to unsigned for MSVC

    For other reasons, we limit our buffer size to unsigned. The
    LZ4 functions need a pointer to a size_t. Cast the size_t
    result back to a unsigned when adjusting the buffer size so
    that MSVC is happy. (This is guaranteed not to overflow.)

    Ping #20094

    (cherry picked from commit 88b46e6ea8571695613bf49f6614f879bfd86e8e)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit d8873f8ab1
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 25 12:56:38 2024 +0000

    CMake: Re-enable /W2 for MSVC

    The various warnings that /W2 gives have been dealt with, so we
    can re-enable this level. Eventually we want to re-enable /W3
    instead, but there's a few more to handle. In the meantime,
    prevent extra /W2 level warnings from entering the code.

    Ping #20094

    (cherry picked from commit 68cab315a0e8f4418de04a37427d75d43c2f3dc3)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit d4bd213507
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 25 12:31:12 2024 +0000

    CMake: Only disable warning C4100 for Lemon files on MSVC

    Our Lemon generated code usually has unused parameters, which
    we warn about, which become errors thanks to -Werror or /Wx.

    Disable just that one warning. On MSVC, that means disabling
    compiler warning C4100, instead of eliminating all warnings.
    This has the advantage of avoiding command line warning D9025
    for overriding our other warning level flags with '/w'.
    (Actually removing an existing flag using CMake, as opposed to
    overriding it with a later flag, is quite annoying.)

    Ping #20094

    (cherry picked from commit 7993b6836c09f20e7c117672582399bb327a8711)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit adeba83d70
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 25 11:31:56 2024 +0000

    wslua: Use a 64 bit function for masks

    Don't use a function that does a cast to a 32 bit function as
    an intermediate step if we want a 64 bit output.

    Note that, we need to go back and fix all these casting functions
    so that they handle it better when lua_Integer is 64 bit (but never
    unsigned, though at some point casting from unsigned to signed will
    be officially ok now that C++20 and C23 have decreed that numbers
    must be two's complement.) Though users who worry about that should
    use our Uint64 type anyway.

    Ping #20094

    (cherry picked from commit adcbc0944e5baef84d38b225e418619548693230)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 73651fa00c
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 25 11:13:07 2024 +0000

    RTCP: Explicitly cast to float for MSVC

    Ping #20094

    (cherry picked from commit ebfda40074563d951c0caf403902a6dfc1203275)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 9d688965d5
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 25 00:26:55 2024 +0000

    I/O Graph: Explicitly convert from uint64_t to double

    MSVC on /W2 or higher will warn about the loss of precision, but
    QCustomPlot only plots doubles so we don't care.

    This commit is split into two parts; this part needs to be
    cherry-picked to 4.4, the other one doesn't.

    Ping #20094

    (cherry picked from commit 0c681181e4f60ec2b9c401bd1c01d01382b12f79)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 66df97f526
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Sep 24 23:57:20 2024 +0000

    lua: Don't convert to double (lua_Number) and back

    The various wtap_file_type... C functions all return ints.
    Assign the return value to lua_Integer before using lua_pushinteger,
    instead of having an intermediate step converting to a lua_Number
    (almost surely a double and back.)

    MSVC, at /W2 or higher, will complain about these. Ping #20094.

    (cherry picked from commit 67e3dbdffd9dca10d3569b0d44e6f87e8e399c81)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit c192ece9d6
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Sep 23 00:01:07 2024 +0000

    capture: Check if g_malloc fails

    g_malloc is supposed to terminate the program upon failure, but at
    least some versions of gcc don't think that happens, at least when
    Release build optimizations are turned on.

    Fix #19930

    (cherry picked from commit c02d0066b5e16d575f5a606b84246fd8b0349d6e)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 5106f67635
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 22 09:31:33 2024 +0000

    [Automatic update for 2024-09-22]

    Update manuf, services enterprise numbers, translations, and other items.

commit 91cb90467b
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Fri Sep 20 15:18:16 2024 +0000

    qnet6: Properly handle bitmask to string conversion (CID 1559832)

    (cherry picked from commit 4fc25c071a6e1983a758f12c813611e63f5f6e8e)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 8b37beda0a
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Sep 19 14:49:20 2024 +0000

    GOOSE: Set the length

    GOOSE is carried within Ethernet, so call set_actual_length so that
    the Ethernet dissector can have a chance to detect FCS, trailer, etc.

    Fix #20088

    (cherry picked from commit 06b9906812997c17598642a462d1f811347cefaa)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit d06031438f
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Sep 19 14:23:41 2024 +0000

    extcap: Fix reapplying commandline args fix

    Don't use the (probably no longer valid) global ws_optarg when
    reapplying the commandline arguments.

    Fixup b68a80ef4d4f01210c51c24d2a7efa1f8e030046

    (cherry picked from commit 56b920d28e33e5ecd790b31783db62202e73e208)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit cbbc372c40
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Sep 19 05:50:58 2024 +0000

    Qt: RTP Player silent crash if codec not loaded

    Playing amr file before !17335 crashed when skipSilenceButton clicked.

    (cherry picked from commit f346de0f88ea651f113027c48c458e02c14f12b5)

    Co-authored-by: Chuck Craft <bubbasnmp@gmail.com>

commit b0802f3665
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Wed Sep 18 21:19:42 2024 +0000

    Qt: if copying null field let user know

    (cherry picked from commit f61931a1649a461b612f20a16e1c8cb998fff0f0)

    Co-authored-by: Chuck Craft <bubbasnmp@gmail.com>

commit 4967b50bf2
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 18 19:36:56 2024 +0000

    NSIS+WiX: Add the amrnb plugin

    Install the amrnb plugin on Windows.

    Commit 969b71674075258ab6d0b40d134047cc6ebdddf2 added the OpenCORE
    AMR-NB codec, but it needs to be installed.

    (cherry picked from commit 16e2df793f3519c7537b1a2303c6fd01b72b408b)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 65ccb7ec58
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 18 11:59:38 2024 +0000

    tshark: Fix --global-profiles directory

    get_global_profiles_dir appends PROFILES_DIR to get_datafile_dir.
    Using it as the persconffile_dir means that when configuration
    profiles are searched for, there's an extra PROFILES_DIR appended
    (as it is unecessarily appended for the NULL/Default profile, and
    gets appended a second time for other profiles.)

    Just set it to the value of get_datafile_dir (which will then
    make the personal configuration directory the same as the global
    one.)

    (cherry picked from commit f0fbf9d0b5cb9316643181188292f6a8f2f13e4c)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 4736dd23d0
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Mon Sep 16 17:39:28 2024 +0000

    HTTP: Check strstr() returns before dereferencing them (CID 1596644)

    Also don't mark a used function parameter as unused.

    (cherry picked from commit e5adf89f95f28266d41bc195378d0567273047de)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 272dbaf79b
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Mon Sep 16 17:39:59 2024 +0000

    IRDMA: Make sure the end point data is actually there (CID 1596732)

    Some much of the underlying code depends on epd being valid that
    this warrants a DISSECTOR_ASSERT.

    (cherry picked from commit ca6232532e646ecc66c72868b697d629480faa62)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 620d99d2e5
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Mon Sep 16 17:40:17 2024 +0000

    CLLOG: Handle non-nl terminated files properly (CID 1592971)

    (cherry picked from commit f95acdd9ce9161c1668ddff4473a7b139f4490c5)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit f35d8c1959
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Mon Sep 16 17:40:42 2024 +0000

    CLLOG: handle non-nl terminated empty file (just header) (CID 1592970)

    (cherry picked from commit 69782792f83545571b2c3635d2284f8be4720a0e)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit eec19c3169
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Sep 17 13:43:52 2024 +0000

    CoAP, Thread: Do not hijack application/octet-stream for Thread

    Over CoAP, "application/octet-stream" (usually?, always?) means
    Thread. Outside of CoAP, that's far from a given, as its official
    registration is "arbitrary binary data".

    Undo part of 69c9e06daea490479abc96d2f586411b814d7660

    Also see 8724c249e1cd2a91e726a682d85924a58ae10b18

    Fix #14729 again.

    (cherry picked from commit aa0f85203a697a479de62df5e8621c792de64bdb)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit f7d8095771
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Sep 16 11:48:02 2024 +0000

    Qt: Set maximum capture size when first opening dialog

    The various currentIndexChanged signals don't get sent for the
    initial value (or if the index is programmatically set to the
    current value.)

    Fix #20079

    (cherry picked from commit bda33418a0befcd9478a3d320dda7fffa9061f20)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 23906ffe71
Author: Anders Broman <a.broman58@gmail.com>
Date:   Mon Sep 16 06:52:16 2024 +0000

    Thrift: Fix fallback when subdissector fails

    - Ensure all sub-dissector errors use THRIFT_SUBDISSECTOR_ERROR instead
      of THRIFT_REQUEST_REASSEMBLY to effectively fallback.
    - Reset proto_depth before fallback on generic dissector.

    (cherry picked from commit 7ae1be7acb46e65140271f824b0b6808911e7561)

    Co-authored-by: Triton Circonflexe <triton@kumal.info>

commit 58901982da
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 15 09:32:11 2024 +0000

    [Automatic update for 2024-09-15]

    Update manuf, services enterprise numbers, translations, and other items.

commit da3daae879
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Sep 14 01:41:58 2024 +0000

    http2: Store the correct length of header values in the case of errors

    UTF-8 validation can change the length of a string due to replacement
    characters.

    Fix #20071.

    (cherry picked from commit 0d43eaa186b2eea90e5886b3d7e0489a839bba7d)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit ff428af206
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Sep 12 10:32:23 2024 +0000

    COSE: fix media_type registration and dissection

    (cherry picked from commit c77348274c46eb788525dc960d1c193e5f5a5d3c)

    Co-authored-by: Brian Sipos <brian.sipos@jhuapl.edu>

commit 79b1bdffa0
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Sep 11 18:57:46 2024 +0000

    gsm_a_gm: Fix a plural issue

    Show correct unit for 1 hour.
    Add some whitespace to the switch-case to improve code readability.

    (cherry picked from commit 10fa5e9a0c0929191d011ec1f5a0e64533e8bf7e)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 6db7b560fb
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 15:13:56 2024 +0000

    CIGI: remove duplicate packet_id comparison (cid 1587067)

    (cherry picked from commit c39558a94a346917761bb47e806216398546bae3)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 8380c8778b
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 15:14:22 2024 +0000

    SANE: explicitly ignore return values, checked elsewhere (cid 1587014)

    (cherry picked from commit 30a16e2ac70448b6b3244c7533e1d44a0079695c)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 110f900a50
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 10:45:50 2024 +0000

    distcc: remove function exit, thereby reviving dead code (cid 1604179)

    (cherry picked from commit 004af4220b0f1d5afbab61fe60089bfc06f051f4)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 610994619e
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 10:50:13 2024 +0000

    SMB2: Initialize policy_hnd in case of malformed packet (cid 1591793)

    (cherry picked from commit 0bd0256112716e41f125f685433538eb469e4209)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 2d026eb329
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 10:48:52 2024 +0000

    ippusb: always restore save_fragmented to pinfo (cid 1595719)

    (cherry picked from commit 363df914cfa311d6338b6146aedb6a21586bd331)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit daa3428bd4
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 10:48:15 2024 +0000

    Qt: add missing initializers to FunnelAction class members (cid 1595995)

    (cherry picked from commit d11558025d187081c5c50263d05e3612a5e99f80)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit f74476ae51
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 10:47:14 2024 +0000

    Qt: drop unused class member from ProfileSwitcher (cid 1596173)

    (cherry picked from commit 456450796c35933ad0c4ed6e7b3af03b792c110a)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit e1a821b0e9
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 10:46:27 2024 +0000

    Qt: free df_translators no matter what (cid 1598397)

    (cherry picked from commit 4a29ea0c0e9ede184ecfc507a1fcb2b4ff4de493)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 9f1a67db25
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 10:49:27 2024 +0000

    EPAN: check format prefs retrieved before dereference (cid 1592165)

    (cherry picked from commit 9cfbf5ee25b1d694fba6ebacf06b8cb927b614a8)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 93d62cf6f2
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 10:50:57 2024 +0000

    Qt: Always check the returned dataModel (cid 1591759)

    (cherry picked from commit 94d366bbe0dce09fe83cf615841b21378df8d6a2)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 93f0c634a1
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 06:44:50 2024 +0000

    GIOP: make length check not roll over (cid 1604271)

    (cherry picked from commit c5be8b945e319c1fc4f55dea9ff1b2388614a358)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 8a6fc0ebe5
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 06:44:02 2024 +0000

    sysdig-event: use unsigned type for encoding (cid 1604277)

    (cherry picked from commit f91b08fddf818ab94b128362643609d21d260eee)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 1562deb945
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 06:43:23 2024 +0000

    RTLS: properly handle header and signature length (cid 1604278)

    First off make sure the message contains both header and signature
    amount of bytes.
    Then make sure to take the signature into account when confronted
    with an unknown message type.

    (cherry picked from commit 9aeffc68eb7aa0b7e2fb378ba9ba002cc0408648)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit d5db52b16b
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 06:42:33 2024 +0000

    cipmotion: Use proper unsigned arithmetic (CID 1604280)

    (cherry picked from commit c7a2c9fea05485847db2bba8c1ed9b195a8a30e1)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 81f8cc853e
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 06:41:58 2024 +0000

    MQ: Use unsigned type for encoding (cid 1604285)

    Correctly pass along ENC_LITTLE_ENDIAN as unsigned value.

    (cherry picked from commit 515d93034126291555fb491cc877d7fb2a78fb59)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 52d624bce2
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 06:40:49 2024 +0000

    IDN: use correct type for data_size (cid 1604286)

    In function dissect_idn_dmx_data() all use of data_size is based on
    the 'int' type. Define it as such, rather than uint16_t.

    (cherry picked from commit 9c0d6991ba5a2bef9218e2414f8292fba4b52e64)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit ca786094ac
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 06:40:06 2024 +0000

    NCP-SSS: handle invalid strings properly (cid 1604295)

    Packets that contain invalid strings, i.e. string with first
    character being a \0 cause index overflow. Do not rely on overflow
    behavior, but increment buffer overflow only on stored characters.

    (cherry picked from commit c8e16a83616c1affa18a8f174ccbdd8ba64e2f89)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit b7b74d72b0
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Sep 11 06:38:31 2024 +0000

    Qt: missing class member initialization (CID1596731)

    (cherry picked from commit 7185e3c6675ee83d6a9ed59e23c026d75c47d36d)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 1e76da8d14
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Sep 10 15:05:32 2024 +0000

    gsm_a_gm: Use hours as unit

    Change from "hr" to "hours" as units for GPRS Timer 3.

    (cherry picked from commit eb86ba533a89782c55149171676d8f53878a8ee4)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 53fbcc7645
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Sep 10 18:24:18 2024 +0000

    filesystem: Only remove namespace from progfile_dir for extcaps

    Extcaps are in their own subdirectory, so trim_progfile_dir trims that
    off in that case to return the common program file directory.
    Extcaps are now in a namespaced subdirectory, so we trim that off first
    before looking to see if the next directory name matches "extcap".

    However, if it's not an extcap directory, then restore the supposed
    namespaced subdirectory. It could be "wireshark" from some other path,
    particularly from \Program Files\wireshark (which, since Win32
    GetModuleFileName doesn't "correct" the case of paths passed in on
    the command line, can also happen if Wireshark is installed to the
    default location.)

    Fix #20057

    (cherry picked from commit 14831b9fe210c112754b3b487def49a94ff4462c)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit d53d2995b5
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Sep 10 18:02:45 2024 +0000

    extcap: Ensure command line options are applied

    We have to read the preference files and the command line options
    before loading the extcaps so that we can see the state of the
    capture.no_extcap preference and avoid the (possibly time-consuming)
    loading of the extcaps if the user has asked us not to do so.

    However, after loading the extcaps, we have to make sure that any
    extcap options given on the command line are actually applied.

    Fix #20054

    (cherry picked from commit b68a80ef4d4f01210c51c24d2a7efa1f8e030046)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit f4d0b0d4f9
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Sep 9 23:37:22 2024 +0000

    filesystem: Work around CMake absolute paths

    CMake recommends that the various CMAKE_INSTALL_<dir> variables
    be relative paths, and we have been assuming that they are.
    Absolute paths are technically allowed.

    Work around absolute paths, and just don't look for the doc
    dir, etc. in relocated paths if they are.

    Fix #20055

    (cherry picked from commit 1dcf5f01b5ddf5b8c288557a0d727145ff618841)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit e4cbf3dae6
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Sep 8 16:22:42 2024 +0000

    Wiretap: Fix CLog err_info handling (CID 161877)

    Pass the correct pointer to be freed.

    (cherry picked from commit d12fe0c637a59775e243e4880b217e67a7379d1b)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit 5deb4ec1b9
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 8 09:32:26 2024 +0000

    [Automatic update for 2024-09-08]

    Update manuf, services enterprise numbers, translations, and other items.

commit 9e910c71e3
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Sep 8 06:17:55 2024 +0000

    epan: Use nstime_cmp in frame_data_set_before_dissect

    Use the comparison function rather than checking the members of
    nstime_t directly. This also eliminates a case of a time_t to
    a 32 bit integer, Coverity CID 1509330

    (cherry picked from commit a82f254f27d612f33410b6628379d58da876b38b)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 7332f2e22b
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Sep 7 00:46:02 2024 +0000

    Qt: Set the DisplayFilterExpression dialog parent in child windows

    If the DisplayFilterExpresion window is being launched from a
    DisplayFilterEdit in a window other than the main window (and thus
    other than from the main DisplayFilterCombo), set the new window
    to be WindowModal. This also (after 67daaa34213bb10d493fcf88dfc21)
    properly sets the parent relationship.

    At a minimum, properly setting the parent widget is necessary in order
    for the DFE window to be usable if the spawning window is modal;
    otherwise, the parentless DFE is unusuable while the modal window
    (which has the line edit intended to hold the DFE result) is open.

    Fix #20049

    (cherry picked from commit 81126d8584fbec1d693c2b6e0c373e0132ad14d8)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit e779fa21da
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Sep 6 23:42:34 2024 +0000

    BLF: Validate date and time

    (cherry picked from commit d9269fb2f64d38f9affd84be0a26ea8e3378545e)

    Co-authored-by: Giovanni Musto <giovanni.musto@partner.italdesign.it>

commit 9f920560a3
Author: Anders Broman <a.broman58@gmail.com>
Date:   Fri Sep 6 20:07:19 2024 +0000

    TECMP: Pass only payload to data type subdissector (BUGFIX)

    This patch only passes the payload instead headers, payload, and all
    following payloads.

    Also the data_flags are passed via data.

    Closes #20052

    (cherry picked from commit b5e869aaaa2c6cd25f9163f6e4b5ea56c2d18289)

    Co-authored-by: Dr. Lars Völker <lars.voelker@technica-engineering.de>

commit 81967b5603
Author: Anders Broman <a.broman58@gmail.com>
Date:   Fri Sep 6 10:36:15 2024 +0000

    TECMP: Add support for Raw Ethernet

    This patch adds support for Raw Ethernet data. This means Ethernet
    recording including preamble and SFD.

    (cherry picked from commit c8f60142721a25ac94b0e840f06d43421d731a86)

    Co-authored-by: Dr. Lars Völker <lars.voelker@technica-engineering.de>

commit 30b049d8fd
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Sep 5 19:53:18 2024 +0000

    html2text: add handling of <sup> tag, for use as exponent

    This HTML:   up to 2<sup>25</sup> (33 million) items
    Converts to  up to 2^25 (33 million) items

    Fixes #20020

    (cherry picked from commit 2bc85a90d3c9431e13f578a11eaaa795651e4b2a)

    Co-authored-by: Jaap Keuter <jaap.keuter@xs4all.nl>

commit b71dcce8d2
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Sep 5 06:49:51 2024 +0000

    id3v2: fix conflict about id3v2.undecoded filter

    (cherry picked from commit 45453e2582e3af32321ea84ad78aa5a4505d591c)

    Co-authored-by: Alexis La Goutte <alexis.lagoutte@gmail.com>

commit f087c1e0ea
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Sep 5 06:48:35 2024 +0000

    id3v2: fix conflict about id3v2 display filter

    (cherry picked from commit f8c37e40b37bf279b9f7bac4856284f6710c6649)

    Co-authored-by: Alexis La Goutte <alexis.lagoutte@gmail.com>

commit 0eb7dc102a
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Sep 5 06:00:26 2024 +0000

    btl2cap: Correct length of Connectionless Data Channel PDU (G-Frame)

    As 3.2 CONNECTIONLESS DATA CHANNEL IN BASIC L2CAP MODE of the
    Bluetooth Core Specification says, "For G-frames, the PDU Length equals
    the payload size plus the number of octets in the PSM."

    Subtract the PSM length before creating a next PDU or adding to the
    tree as fallback data.

    Fix #20047

    (cherry picked from commit 8c77ef66c42b472d9e1addc9350e6d42225b8d19)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit abe64a4d9c
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Sep 5 05:28:58 2024 +0000

    asn2wrs: Handle NamedNumbers in ValueRange constraints

    ITS uses NamedNumbers from the NamedNumberList of the parent
    type in PER-visible ValueRange constraints. Handle that by
    passing in the appropriate NamedNumberList from the Type
    (or parent type of a Type_Ref) when calculating the values of
    a ValueRange constraint.

    (cherry picked from commit 171e202e25f365a25ba0add57d6e9c9f671eea2a)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit a21dc29e79
Author: Anders Broman <a.broman58@gmail.com>
Date:   Wed Sep 4 20:29:06 2024 +0000

    asn2wrs: Create types for type refs with extra value constraints in PER

    In PER (and OER) additional value constraints can change the size on
    the element in a similar way to size constraints. Add constrained
    types when value constraints are added.

    If a subtype (Type_Ref) has a value constraint and is an integer
    type in PER or OER, use the min and max values from the ValueRange
    of the subtype instead of the original type.

    Remove some conformance lines that are no longer needed.

    Add a conformance line for one still unhandled case, where the
    ValueRange constraint is given using names from the NamedNumberList
    of the base type.

    Fix #19886

    (cherry picked from commit a21bada17650ea2e5d7f51fecfdeaec3db1bfe51)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit aa884950ee
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 4 22:11:56 2024 +0000

    asn2wrs: Don't add an ignored constraint to a UNION

    If there are UNIONS involving constraint types we currently ignore,
    e.g. WITH COMPONENT[S], don't create a union involving a None, just
    collapse into the other operand.

    Related to #19886, #19368

    (cherry picked from commit dc6ff72a0c3174c43a496befa77069ea62cd9ab0)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 81b2647233
Author: Anders Broman <a.broman58@gmail.com>
Date:   Wed Sep 4 15:47:41 2024 +0000

    Resources: Make our .pc file static again

    Partially revert 107550c9c0 and make the pkgconfig prefix static.

    (cherry picked from commit a9d17a13afa15c7ffe5afc6db817208bc2887a13)

    Co-authored-by: Gerald Combs <gerald@wireshark.org>

commit d7d429014b
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Wed Sep 4 21:15:17 2024 +0200

    TECMP: Add missing ILaS Commands (BUGFIX)

    Fixing the ILaS Command Table by adding missing commands.

    (cherry picked from commit 042a7a3d0a78f9b1cfcd13a9db562617cb58403d)

commit 8bb3378fac
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 4 12:54:06 2024 +0000

    BGP: fix value_string conflict/duplicate entry/typo

    (cherry picked from commit 44268d4eabba0078d8f539cd89c3a3da1819bb0d)

    Co-authored-by: Alexis La Goutte <alexis.lagoutte@gmail.com>

commit 0282e4c9a6
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 4 11:52:56 2024 +0000

    OER: Account for extension bit in presence bitmap in offset

    When advancing the offset of a sequence type on OER after the presence
    bitmaps, consider the extension bit as well. Use the bit_offset value
    instead of the number of options present.

    Fix #20044

    (cherry picked from commit 91a20c2351fb8c08d77816abfeee7da50d13191b)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit fa3e49548f
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 4 10:56:37 2024 +0000

    Fix wrong bitmask for OM control field

    (cherry picked from commit d6690eee73e209c5616a0cd044cf030186f7e5de)

    Co-authored-by: WFA-achuang <achuang@wi-fi.org>

commit 22f130c2c6
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 4 09:29:48 2024 +0000

    Qt: Find Packet placeholder text is only for display filter

    Fix up !16440

    (cherry picked from commit 15f854f70f7ede94c81025784f08c4844258f0d3)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 3ec22ea40c
Author: Anders Broman <a.broman58@gmail.com>
Date:   Wed Sep 4 10:03:57 2024 +0000

    ITS: Fix ObjectDimensionConfidence special value formatting

    ObjectDimensionConfidence uses 32 as Unavailable and 31 as outOfRange:

     * The value shall be set to:
     * - `n` (`n > 0` and `n < 31`) if the confidence value is equal to or less than n x 0,1 metre, and more than (n-1) x 0,1 metre,
     * - `31` if the confidence value is out of range i.e. greater than 3,0 m,
     * - `32` if the confidence value is unavailable.

    The 102 and 101 numbers were accidentally copied from
    AccelerationConfidence:

     * The value shall be set to:
     * - `n` (`n > 0` and `n < 101`) if the confidence value is equal to or less than n x 0,1 m/s^2, and greater than (n-1) x 0,1 m/s^2,
     * - `101` if the confidence value is out of range i.e. greater than 10 m/s^2,
     * - `102` if the confidence value is unavailable.ProtocolVersion

    Ping #19886

    (cherry picked from commit 91bfbf22a019b89e6f25e9d48773c6f81b07ccc6)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 733544bb66
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 4 09:31:14 2024 +0000

    ITS: Add private data, INFO column for CPMv1

    Fixup 06faabf9cc9c954e5a3044278d5b14b1e934ac61

    Fix #20026

    (cherry picked from commit 6d22bfced65550f371713821da8830d0e7333b11)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 2ff525aa4b
Author: Anders Broman <a.broman58@gmail.com>
Date:   Wed Sep 4 09:04:33 2024 +0000

    ITS: Restore dissection of CPM v1

    (cherry picked from commit 06faabf9cc9c954e5a3044278d5b14b1e934ac61)

    Co-authored-by: Anders Broman <a.broman58@gmail.com>

commit 36317deb41
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 4 00:20:48 2024 +0000

    Netflow(v8): fix dissection of ToS AS/Prefix Matrix Aggregation

    swap srcmask and dstmark order (ToS Prefix Matrix Aggregation)
    inputInt/OutputInt is before ToS/Reserved/Pad (ToS AS Aggregation)

    Close: #20021

    (cherry picked from commit 34180b62bb3f82c8b71a8744f7f7f73fcd042375)

    Co-authored-by: Alexis La Goutte <alexis.lagoutte@gmail.com>

commit 4a7b5b51a3
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 2 11:29:41 2024 -0700

    HTTP: Add a null check

    (cherry picked from commit b47523a5cacaaaf6080cde31e72a1961626f491e)

commit cbc02dbce0
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 2 11:22:51 2024 -0700

    Qt: Add null checks

    Add a couple of null checks to WiresharkMainWindow and LograyMainWindow.
    Avoid null checks for summary->ifaces in CaptureFilePropertiesDialog.

    (cherry picked from commit d2495129eac0d38f228c7e9dac6861f6d22e22de)

commit e5bb5c6e56
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 2 10:08:43 2024 -0700

    ProtoBuf: Add a null check

    (cherry picked from commit cf3c112b6d3621b82350b592c10178dc846aff92)

commit 3cb1ec8309
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 2 10:01:23 2024 -0700

    ERF: Add a null check

    (cherry picked from commit 1eeb06f1df6788aca1df387618a694d48ff88d33)

commit 2586e2a46d
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Mon Sep 2 12:48:16 2024 +0000

    kerberos: remove unused return of wmem_list_frame_data (Fix Coverity)

    (cherry picked from commit 6d9d3d8b997cdebeee00383f5c4282edf26b0bab)

    Co-authored-by: Alexis La Goutte <alexis.lagoutte@gmail.com>

commit e9fb5796c8
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Tue Aug 20 06:18:44 2024 +0000

    Clang: Fix Dead Assignment found by Clang Analyzer

    (cherry picked from commit e103cefcc3758d48d411ab791ad5e47c7becdc5e)

    Co-authored-by: Alexis La Goutte <alexis.lagoutte@gmail.com>

commit b65ba40823
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 1 11:21:24 2024 -0700

    SSyncP: Add a null check

    (cherry picked from commit a23bb9fe90326f4abf3fd12838b2c4dbac51a05c)

commit 5e6c872146
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Sep 1 11:34:57 2024 +0000

    NSIS: Install USBPcapCMD to the correct extcap directory

    There's separate directories for wireshark and logray now.

    (cherry picked from commit 2baa674dab395c5772e5cb36d6c2875c1d3ae473)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 46600d48e9
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 1 09:31:31 2024 +0000

    [Automatic update for 2024-09-01]

    Update manuf, services enterprise numbers, translations, and other items.

commit 4145767f73
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 31 17:14:49 2024 +0000

    tests: Add checking for Lua support to release tests

    Lua support is optional in general, but if --enable-release
    is given to the tests (as on the macOS Intel and Arm package
    builders) fail if support is missing.

    Prevent #20029 from happening again.

    (cherry picked from commit 1f7356e36026acad12c668f1392955efdeb33609)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 97ffc68fee
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 31 13:38:50 2024 +0000

    CMake: Respect TEST_EXTRA_ARGS, run release suite when requested

    With the transition to using pytest, the CMake variable TEST_EXTRA_ARGS
    stopped being used; several of the CI jobs are passing it, to no effect.

    Note that this only has an effect with the `ninja test` target.
    Running pytest directly requires passing in parameters manually.

    However, we also install pytest inside a venv on gitlab macOS runner
    jobs. So use the test target on the macOS package jobs, and instead
    pass the text arguments to pytest on the GitLab macOS runners.

    (cherry picked from commit 983f92001504a044aa10e73c23b5d1be7721ae07)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 3c42dae225
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Sat Aug 31 09:39:26 2024 +0000

    lwm2mtlv: Fix Connectivity Monitoring LAC resource

    Fix typo in Connectivity Monitoring LAC resource.

    (cherry picked from commit e6aa94898ed73a8008f74ec0c8bbb26d692cde97)

    Co-authored-by: Stig Bjørlykke <stig@bjorlykke.org>

commit 3e4f2e2591
Author: Anders Broman <a.broman58@gmail.com>
Date:   Fri Aug 30 20:11:34 2024 +0000

    GTPv1: If Utran contaner length is zero don't try to decode it.

    (cherry picked from commit 9f65744fd3561fd413604be2c8ac3bee9188617b)

    Co-authored-by: Anders Broman <a.broman58@gmail.com>

commit e2b6a49284
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Aug 30 22:24:54 2024 +0000

    Fix usage of an invalid patchlevel macro

    (cherry picked from commit eb72ea6fc8ff99ecc3c5fd856bfe2f8b8d08a007)

    Co-authored-by: Franciszek Witt <franek.witt@gmail.com>

commit 0dff200970
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Aug 30 12:20:12 2024 -0700

    NSIS+WiX: Add the ipaddr plugin

    Fixes #20030

    (cherry picked from commit 38ea43d9386b00f77cf7a4b32715b3b5c7781e17)

commit ff39f7cd7a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Aug 30 10:36:30 2024 -0700

    dfilter ipaddr plugin: Small grammar fix

    (cherry picked from commit e384b0dee0a0241e29b343849cc9a7033fd3c50f)

commit 3b544198fe
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 30 10:37:38 2024 -0400

    dfilter ipaddr plugins: Fix semantic check

    Since the unparsed type was brought back, we need to resolve
    unparsed to fields.

    We can actually manage to support a few new complicated but useless filters:
            ip_rfc1918(ip.src) == ip_rfc1918(127.0.0.1)

    A large number of possible filters that involve putting a literal
    value into the function will still fall afoul of the "filter can not
    be a constant" though.

    Also, have the ip_rfc1918 function only support FT_IPv4, and
    the ip_ula function only support FT_IPv6.

    (cherry picked from commit f13b226d105af3108be7aeadc355524f7590d44f)

commit b8f2317945
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 30 15:25:38 2024 +0000

    dfilter: Fix error message comparing a function to a wrong type

    The LHS is the function here, not argument 2, which is already
    known in this path to be a field.  Fixes:

     ** (wireshark:1653194) 09:56:11.413173 [DFilter ERROR] epan/dfilter/sttype-function.c:134 -- sttype_function_name(): Magic num is 0xfc2002cf, but should be 0xe10f0f99
     ** (wireshark:1653194) Aborting on fatal log level exception

    (cherry picked from commit 46bacbbce39c0fa01e42bd3948208e8716ee8e81)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 440e6c628d
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Aug 30 06:25:51 2024 +0000

    cllog: fix handling of EOF when processing the header.

    The loop that processes the header comments can either terminate on an
    EOF or error on on seeing a non-comment line.  Set linep on each trip
    through the loop, so that, if it's null, we know the loop was terminated
    due to an error or EOF; otherwise, it was terminated by a non-comment
    line, which is in the line buffer.  Only parse the line buffer if
    there's a non-comment line in the buffer.

    Include the test for a comment line in the loop test.

    (cherry picked from commit df34522dbc1193cae23e8823a0e0bfd05188cab7)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit ddd9d4092b
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Aug 30 00:19:28 2024 +0000

    cllog: fix error handling when opening a file.

    Don't check for errors if file_gets() *succeeds*, check if it *fails*,
    i.e. do the check after the loop is done.

    To do that, call file_error() to get the error code, rather than
    assuming *err magically gets set.

    If HeaderMapping->parseFunc() fails, treat that as a "not our file"
    condition rather than an error condition.

    (cherry picked from commit 7b39f746659685b2c7457e371bc434505a7139f6)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit 7dc8dd6a67
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Aug 29 23:16:47 2024 +0000

    commview: fix handling of NCFX files that aren't ours.

    If commview_ncfx_read_header() returns WTAP_ERR_BAD_FILE, it doesn't
    mean we got an error, it means it's probably not a Commview NCFX file.
    Check for that and, if we get it, free the error message and return
    WTAP_OPEN_NOT_MINE.

    (cherry picked from commit 5d51e23dc67ba54e321de3d5983a0660ba71339a)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit 6d15b317da
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Aug 28 23:04:41 2024 +0000

    pcap: use nanosecond resolution for hardware lcap files.

    The resolution on Ixia hardware-capture lcap files appears to be higher
    than 1 microsecond; assume it's 1 nanosecond.

    Also:

    Make a Boolean variable a bool rather than an int.  Rename it to
    skip_ixia_extra, to clarify that it's for the Ixia formats.

    Use a null buffer argument to wtap_read_bytes() to skip over the size
    information.

    Point to the issue for adding support for Ixia lcap files.

    Ping #14073.

    (cherry picked from commit 58f6fef9c8090d5733ac2103005815ecf84ab3bd)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit b809cc02d8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Aug 28 15:50:03 2024 -0700

    Version: 4.4.0 → 4.4.1

    [skip ci]

commit 009a163470
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Aug 28 11:36:06 2024 -0700

    Build: 4.4.0

    [skip ci]

commit 886a741550
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Aug 28 12:05:44 2024 +0000

    HTTP2: Handle segmented magic bytes on a HTTP port

    When the HTTP dissector calls the HTTP/2 heuristic dissector
    for the first time, the initial frame might be segmented,
    and the HTTP dissector couldn't do the desegmentation. So allow
    the HTTP/2 dissector (and other heuristic subdissectors in cases
    where the HTTP dissector couldn't attempt desegmentation) to
    desegment in that case.

    The HTTP dissector guarantees that it waits until it has at least
    the first line before doing anything, including calling the
    heuristic dissectors, but not necessarily more than that. When
    over HTTP, only check the first line (16 bytes) to see if they
    are the magic bytes. That is sufficient to identify HTTP/2 over
    HTTP, and handles pathologically short TCP segment sizes.

    In the get_http2_message_len function, only check the frame header
    length versus the magic bytes. With unusual segmentation we might
    not get all the magic bytes, since we only pass FRAME_HEADER_LENGTH
    to tcp_dissect_pdus. By that point, we're already committed to
    dissecting as HTTP/2 (unlike in the heuristic check).

    If those first 9 bytes match, it's not a valid ordinary HTTP/2 frame,
    and we know the expected length. If those 9 bytes match but the entire
    24 bytes do not, it's much more likely that there was a bit error in
    the last 15 bytes than it was a valid HTTP/2 frame that had a bit
    error that made the first 9 bytes look like the magic bytes.

    Fix #20004

    (cherry picked from commit 158ffce732a9bb59c04a456e3b79f7336aff333a)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 847e4f61a9
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Aug 28 09:04:06 2024 -0700

    802.11 Radio: Add a bounds check

    We're limited to 4 .11be user slots. Enforce that.

    Fixes #20019

    (cherry picked from commit 16f9adc2744c5b4ab738df5fb99defdb9eb91c85)

commit bd18e943c7
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Aug 28 10:39:55 2024 +0000

    epan: Don't set a libgcrypt log handler >= 1.11.0

    On Windows, we've been setting a log handler for libgcrypt in order
    to quiet messages, in particular one in the slow_gatherer routine:

      NOTE: you should run 'diskperf -y' to enable the disk statistics

    Setting a log handler was deprecated in libgcrypt 1.11.0 and issues
    a deprecation warning when compiling. That release also stopped
    issuing that log message in cases where running diskperf wouldn't
    help because DeviceIoControl(..., IOCTL_DISK_PERFORMANCE, ...) failed:

    https://github.com/gpg/libgcrypt/commit/35abf4d2eb582b78873aa324f6d02976788ffbbc

    So we should be able to stop suppressing the log messages on that
    version.

    (cherry picked from commit 5b5e506b88576658d743c7afd18490b05672bd5f)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 5bbe2bb0a3
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Aug 28 09:42:26 2024 +0000

    pcap: fix a function return type.

    It returns true or false, so make it bool, not int.

    (cherry picked from commit 65188457b99d98acd6ef58141cf4ecad4ad73d70)

    Co-authored-by: Guy Harris <gharris@sonic.net>

commit 75cc1567d0
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Aug 27 11:34:30 2024 -0700

    GitLab CI: Move our Qt versions to variables

    Note that they should match the documentation.

commit 6ab76763ed
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Aug 27 13:48:45 2024 +0000

    epan: Add ifndef include guard to show_exception.h

    This is only included in source files currently, but someone might
    want to include it in a common header (if, say, defining a macro).

    (cherry picked from commit 5118b4ce4fc2a8efabe324c4cefeb816d182d683)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 802a24139e
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Aug 27 12:56:28 2024 +0000

    Exported PDU revert adding of match_uint and TCP stream id.

    (cherry picked from commit e0c49a857373267c17ff7daef0e1a840b9897116)

    Co-authored-by: Anders Broman <a.broman58@gmail.com>

commit 157344e9c1
Author: Anders Broman <a.broman58@gmail.com>
Date:   Mon Aug 26 21:39:13 2024 +0000

    Exported PDU: Add tag for tcp.stream and add to layers

    Closes #20010

    (cherry picked from commit 1f525c8d15e126aa4d88e4ba2435710b4433fc96)

    Co-authored-by: Anders Broman <a.broman58@gmail.com>

commit 6103c8656a
Author: Anders Broman <a.broman58@gmail.com>
Date:   Mon Aug 26 21:38:13 2024 +0000

    Export PDU: Add a new tag for pinfo->match_uint.

    This tag is needed by some dissectors to find the direction.

    Ping #20012

    (cherry picked from commit 3aad3aafabd825da29a777419d26e2bb96e0ee91)

    Co-authored-by: Anders Broman <a.broman58@gmail.com>

commit 37ac849629
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sun Aug 25 18:30:16 2024 +0000

    Replace filenames with no. of files in FF2 and FN2

    In SMB FIND_FIRST2 and FIND_NEXT2 responses, filenames have been
    replaced with the number of files found because:
    (1) The list is usually too long to be useful
    (2) It prevents messages that follow them from being seen and,
    (3) Are superfluous in that the filenames are listed in the
        Packet Detail.
    In addition, the Level of Interest and Search ID have been added
    to the Packet List.

    Fixed pipeline errors

    (cherry picked from commit 3a6d76a06caa3eff7167e6c7a125dd30be3e1828)

    Co-authored-by: Cal Turney <cturney111@gmail.com>

commit d7dcbda5d3
Author: Martin Mayer <martin.mayer@m2-it-solutions.de>
Date:   Sun Aug 25 12:05:49 2024 +0200

    Dissectors: Move expert declaration to function context

    (cherry picked from commit 46dbb45ef0ce60370b6f31d863859a6fa50cb20c)

commit 758402eb4b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 25 09:32:38 2024 +0000

    [Automatic update for 2024-08-25]

    Update manuf, services enterprise numbers, translations, and other items.

commit 7cfd74db86
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sun Aug 25 09:31:31 2024 +0000

    DHCP: Support the older version of CableLabs Option 82 suboption 9

    The newer format has been available since at least the 2016 spec
    (CL-SP-CANN-DHCP-Reg-I13-160317), but there are still captures out
    there with the older incompatible format (cf. the 2011 revision,
    CL-SP-CANN-DHCP-Reg-I06-110210.pdf). This restores the dissection
    of the earlier format.

    Also add a value string and add back in the tag and tag length fields
    that were removed for some reason in 9c2f3b0dc6ebde14801884a324

    Fix #20006

    (cherry picked from commit 54617862f11353622c4e6731318e64d62df35e43)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 0407315674
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Aug 24 08:50:12 2024 +0000

    PDU Transport: Use curr_proto_layer_num instead of curr_layer_num

    (cherry picked from commit 1f1dbfadbbe7c04001e77ba2bebe6666fbc8f098)

    Co-authored-by: Giovanni Musto <giovanni.musto@partner.italdesign.it>

commit 6d03ecc7ed
Author: Anders Broman <a.broman58@gmail.com>
Date:   Fri Aug 23 09:59:08 2024 +0000

    DoIP/UDS: Last UDS message does not overwrite previous

    This patch allows to show all DoIP and UDS messages in a packet instead
    of only showing the last UDS message.

    A new config option in UDS allows to go back to the old behavior.

    (cherry picked from commit 2947c4e909f86a24b9f260931a5fe4303b5a1bdf)

    Co-authored-by: Dr. Lars Völker <lars.voelker@technica-engineering.de>

commit db807cdd49
Author: Anders Broman <a.broman58@gmail.com>
Date:   Fri Aug 23 07:16:10 2024 +0000

    File-blf: Allow for log containers to not have data (BUGFIX)

    This fixes a warning of malformed blf files.

    (cherry picked from commit 60efbfc2a835495c1aba80c218d20d0e6a451a75)

    Co-authored-by: Dr. Lars Völker <lars.voelker@technica-engineering.de>

commit 8a5001ab68
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 22 23:43:04 2024 +0000

    wiretap: Fix compilation with LZ4 from 1.9.0 to 1.9.2 (e.g. Ubuntu 20)

    lz4frame.h says that LZ4F_headerSize() is provided in v1.9.0+, but
    careful perusal of the git repo shows that it wasn't exported to
    the dynamic library until 1.9.3. Ubuntu Focal (20.04) has a package
    based on 1.9.2 and needs this to compile.

    (cherry picked from commit c3e12b9363fafa6253caefc6ceb387d3b72a005f)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit d182305333
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 22 13:07:09 2024 +0000

    wslua+lrexlib: Upstream fix for redefined symbol

    lrexlib, for compatibility, defines lua_objlen on Lua > 5.1 as it
    was removed (rather than on 5.1 defining the new symbol.)

    However if Lua 5.2 or greater is compiled in compatibility mode,
    then the Lua library itself provides a compatibility macro, and with a
    definition equivalent in practice but just different enough that some
    compilers will complain about redefined macros. This is the case with,
    e.g., the RHEL 8 Lua 5.3 packages.

    Get the new upstream fix from git for the issue.

    (cherry picked from commit 22b1d3a63683a111de423a0c303c57ba5ba2b403)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 801ad62268
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Aug 21 10:54:52 2024 +0000

    wiretap: Handle heterogeneous compression, zstd frames

    Handle files with concatenated heterogeneous compressed frames
    correctly. We can't always avoid doing a fast seek if the jump
    is small if we're changing compression types.

    There are some edge cases where it might be faster to avoid
    the fast seek if it's close to our current position (with
    zlib), but there's enough exceptions to that that it's easier
    to just check if the fast seek point is inside the current
    buffer (which always works, and handles most of those cases.)

    Do a very limited fast seek to the beginning of zstd frames,
    rather than seeking to the beginning of a file. Most zstd compressed
    files will be a single frame but this is faster on any multiframe
    file (e.g. concatenated files, which works with pcapng), and also
    necessary for heterogeneous compressed frames concatenated.

    (cherry picked from commit 986ea009532e798ffec7c9f3a06bfca146b86ec9)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 2ba9f4c56e
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Aug 19 15:39:17 2024 -0700

    Release notes: Add a link to issue 19116

commit e8b09c41c1
Author: Anders Broman <a.broman58@gmail.com>
Date:   Mon Aug 19 06:02:40 2024 +0000

    Convert dissector ints used as bools to bools

    Note EIGRP never actually sets the "unreachable" boolean and thus
    the associated expert warning is never added; presumably that was
    lost at some point.

    One exception: The PDCP dissectors have an enum preference for sequence
    analysis that was being initialized to true. Use the value defined to
    be equal to 1 (RLC only) so that it doesn't change.

    Fix #15770

    (cherry picked from commit e771ff7fd2630f58c282238e70cf51014a57255e)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit b0baddcd4a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 18 15:51:56 2024 +0000

    [Automatic update for 2024-08-18]

    Update manuf, services enterprise numbers, translations, and other items.

commit 13699b5b3e
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sun Aug 18 07:00:08 2024 +0000

    Protobuf: Use wmem_map_t instead of array overflow temporary solution

    (cherry picked from commit 7b7ca821041767f68bad52ad44046b6bf45ee051)

    Co-authored-by: Huang Qiangxiong <qiangxiong.huang@qq.com>

commit e89b97eb31
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 16 06:30:50 2024 -0400

    Write compressed follow up

    Check the compression suffix earlier, and produce errors for
    compression suffixes (and compression types) we recognize and
    can read, but can't write.

    Make sure we check for a suffix after a dot (the function
    that returns all the extension types doesn't include the dot,
    so do it a different way here and in the other functions.)

    For now, we don't allow specifying uncompressed with --compress
    (to override a compression extension, perhaps), but we could in
    the future, by initializing to unknown compression and changing
    to uncompressed immediately before checking the type.

    Fix name in stderr message.

    Allow writing compressed information to standard out for piping.

    Handle double suffixes for ring buffer names, putting the changing
    part before the previous extension.

    We can write LZ4 compressed now, so indicate that. Thanks to the
    other commits turning it on just works.

    Update the documentation and clarify the current behavior.

    Follow up to 6a5de923918d2bf02338b97d4fd37f90d43833e4

    (cherry picked from commit 4b03ddd5784aa2c9890a84aa74628d4c00f07d61)

commit 694ab6eaa9
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 16 06:55:51 2024 -0400

    mergecap: Write compressed follow up

    Check the extension of the output file earlier on. Check all
    possible compression extensions, and error on compression types
    we read but don't write (whether specified via extension magic
    or explicitly.)

    If the user asked to write a compressed type to standard out,
    give the user what they asked for, as that can be useful to pipe.

    When erring on a file format that can't be compressed, give the
    file format name in the error message.

    Follow up to 6a5de923918d2bf02338b97d4fd37f90d43833e4

    (cherry picked from commit 79d019b0987554b9f3782922da380e1758220c95)

commit de8e30e5c5
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 16 06:40:33 2024 -0400

    text2pcap: Write compressed follow up

    Check the extension of the output earlier on, before we open
    the files. Check all possible compression extensions, and error
    on compression types we read but don't write.

    Give an error if a compression type is specified (either by
    extension or explicitly via --compress) but we can't write it,
    instead of writing it uncompressed.

    If the user asked to write a compressed type to standard out,
    give the user what they asked for, as that can be useful to pipe.

    Fix a console message that said "mergecap"

    Cf. !16871

    (cherry picked from commit 636a9682528d412ac0f3fd35826c93f50961e918)

commit 6068da544d
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 15 21:14:00 2024 -0400

    tshark: Save as compressed tweaks

    Fix printing "mergecap" to stderr instead of "tshark"

    Add a function to convert compression extensions to compression types.
    Change the name of the currently unused "wtap_can_write_extension",
    which checks a "wtap_compression_type" not an extension, and use it.

    Do the output file name checking for compression extension
    magic in the main loop. Check all supported compression extensions,
    and output an error for compression extensions supported for reading
    but not for writing (whether by extension or if specified with
    --compress), instead of simply writing an uncompressed file -
    ( ./run/tshark --compress=lz4 -r input.pcap -w output.pcapng.lz4 right
    now will write an uncompressed pcapng instead of an error.)

    This allows tshark to complain about not being able to write
    compressed output for a live capture or for a particular file
    format in one place. Add the name and/or description of the
    file formats or compression type that isn't allowed to be written
    to the error message.

    process_cap_file is never called when capturing, remove the
    "is capturing" parameter just added; the test is done in the main
    loop (unlike merging.)

    Allow writing compressed data to stdout if the user asks for it;
    there can be a use case involving piping.

    (cherry picked from commit ffada80057975d3829d9acd983abbc9bedb780d8)

commit d29a8ea8be
Author: Radu Nichita <rnichita@drwholdings.com>
Date:   Thu Aug 15 16:39:32 2024 +0200

    tshark: Fix gzip uninitialized variable

    (cherry picked from commit 9e7efdf703e11f5bb33fc7c55e850c64c6f38acd)

commit 235758cc01
Author: Radu Nichita <rnichita@drwholdings.com>
Date:   Wed Jul 31 10:17:15 2024 +0200

    Add support for gzip-compressed output in mergecap and editcap

    Wireshark supports compressing the output file to a gzip archive
    via wtap API. For mergecap and editcap, if the output filename
    has the extension .gz, then the gzip compression would be used
    to store the output.

    Fixes #12385

    (backported from commit 6a5de923918d2bf02338b97d4fd37f90d43833e4)

commit de1b4e1b0b
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Thu Aug 1 22:54:45 2024 +0200

    TECMP: updating to TECMP 1.9

    This patch adds some minor changes of the TECMP 1.9 standard:
    * adding new Device Types
    * adding new Device IDs
    * changing name of ILaS device
    * adding new Data Type name

commit 554d89389a
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 17 01:28:18 2024 +0000

    wiretap: Check whether fast seeking is supported in fast_seek_header

    Prevents possible crashes when we can't fast seek.

    (cherry picked from commit 37242046a5829a6ea51d166eacaa73c86f292131)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit a0827b3f8f
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 16 16:33:24 2024 +0000

    tshark: Don't print error messages for bad options twice

    ws_opterr needs to be 0 for all the ws_getopt_long calls except
    the very last one (where error handling is done), so that duplicate
    messages aren't printed.

    Follow up to 1dd922be360e49a6d27596627a75956607d1083c

    (cherry picked from commit edfc4b9b43457c35908f788d04c4c1adb1c566d1)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 6c578b6d71
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Aug 14 14:49:43 2024 -0700

    Docs: Add a Prior Versions section

    Comment it out until we release 4.4.1.

commit b64f5f9a32
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Aug 14 11:26:11 2024 -0700

    Build: 4.4.0rc1

    [skip ci]

commit c531952378
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Aug 13 12:14:30 2024 +0000

    assa_r3: Use FT_CHAR for a character

    This does proper escaping for unprintable characters

    Fix #19987

    (cherry picked from commit 424ecdbf79f2789ff6e0111b231a9b3aefd4081c)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit 76445daf29
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Aug 13 11:54:26 2024 +0000

    Qt: Fix compression on Qt < 5.15

    The overloaded buttonToggled with the id was renamed to idToggled
    in 5.15.

    (cherry picked from commit 30ed6f80041abe47a0d39027876ee725e7226a32)

    Co-authored-by: John Thacker <johnthacker@gmail.com>

commit b3fdac241b
Author: Joakim Karlsson <oakimk@gmail.com>
Date:   Tue Aug 13 09:00:07 2024 +0000

    Qt: fix build with <QT5.15

    QButtonGroup::idToggled was introduced in Qt5.15, but we still support
    Qt5.12

    (cherry picked from commit 02a8bd21f144d8d0e2975a02270a21b11a4310c3)

    Co-authored-by: Joakim Karlsson <oakimk@gmail.com>

commit 03fa047c74
Good "git" signature for gerald@wireshark.org with ED25519 key SHA256:+uTuDOSBg13qqROB7pxZGQpkeMfjA4CJy5GAOf4RZ6o
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Aug 12 15:40:02 2024 -0700

    Initialize release-4.4

commit e8bb2d7fec
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Aug 12 14:14:28 2024 -0700

    Docs: Note that we sign Git tags using SSH

commit c82d9a70a7
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Aug 12 13:31:23 2024 -0700

    wiretap: convert more if-chains that test compresion type to switches.

    This makes the twisty little maze of ifdefs, all different, slightly
    less twisty, and makes it a little easier to figure out where to add
    code for new compression types.

commit 2db41a3ae4
Author: Anders Broman <a.broman58@gmail.com>
Date:   Mon Aug 12 11:18:58 2024 +0200

    Dissectors: Include what you use.

commit fbec9d9c6a
Author: Martin Mayer <martin.mayer@m2-it-solutions.de>
Date:   Wed Aug 7 18:41:41 2024 +0200

    Syslog: Enhance Syslog dissector

    * Implemented TCP handling
    * Implemented Octet Counting Framing (RFC 6587)
    * Implemented Syslog over TLS (RFC 5425)
    * Modifications and additions in RFC 5424 dissection
    * Modifications in RFC 3164 dissection
    * Changed RFC 5424 timestamp to ABSOLUTE_TIME_LOCAL
    * Renamed some fields to better match RFC
    * Removed tree check
    * Removed one tree level

commit 8fabefc1ed
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Aug 12 10:54:39 2024 -0400

    wiretap: Simplify ifdefs

    For wtap_dump_file_open and wtap_dump_file_fdopen, use
    a switch on compression type in all cases, so we have fewer
    ifdefs depending on whether the wtap_dumper parameter is used
    or not. This makes it a bit easier to add new compression types
    later.

commit bff7b84ace
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Mon Aug 12 18:27:50 2024 +0200

    Signal-PDU: show payload, if no config is found

    Wireshark only warned that the config is missing. Now also the
    payload is shown.

commit 58a557b3ca
Author: Vafokhon Safokhujaev <vafo.main@gmail.com>
Date:   Mon Aug 12 22:33:47 2024 +0500

    zbee sec: Assure there are enough bytes for MIC

    Related to #19983

commit 609ec97473
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Aug 12 10:26:26 2024 -0400

    Profinet: Use BASE_OUI

    Use BASE_OUI for a couple of fields that store an OUI, so
    that any known OUI's string is displayed correctly, instead
    of Unknown for anything not Profinet or Siemens.

    Ping #19986

commit f9e8483d1e
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Aug 12 10:14:53 2024 -0400

    profinet-mrp: Always subtract the OUI length

    The length for the OUI needs to be removed from the remaining length
    even in the unknown case.

    Really this whole function should be rewritten to pass in a subset tvb
    instead of a length, to minimize the chance of buffer issues.

    Fix #19986

commit eef6e3c5b5
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Aug 12 09:39:43 2024 -0400

    wiretap: reset fast seek with either zlib or zlib-ng

    In practice, I don't believe this matters, because we always
    read through the file sequentially once and only add fast seek
    points during that initial read. This code from zlib is for when
    a seek happens during a time when you might still be adding fast
    seek points.

commit 8ab7f82f04
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Aug 11 22:02:28 2024 -0400

    Qt: Don't idle dissect with the read lock held

    It's not a time when we're idle, and worse, it can
    lead to messages like:

    The capture file "bittorrent-comp_4.pcapng.lz4" appears to be damaged or corrupt.
    (pcapng: total block length 3722677760 is too large (> 134348832))"

    when saving a large file still doing idle dissection into a new
    format (new compression or new file type).

commit 93e8eb2ffb
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Mon Aug 12 11:26:43 2024 +0100

    ORAN FH CUS: Add another ST4 command type

commit 4e1697141b
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Aug 12 01:17:13 2024 -0700

    wiretap: slightly clean up fast_seek_reset().

    Always do a switch on the compression state, so we don't have to do some
    ugly maze of #ifdefs so that we mark the argument unused iff we don't
    support gzip compression, and so that other forms of compression have a
    place in which to insert reset code.

commit 168cef006a
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Aug 12 00:39:40 2024 -0700

    wiretap: update a comment. [skip ci]

    A WFILE_T can be a handle for *any* code that writes compressed files.

commit 1832f2bc39
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Aug 11 15:23:17 2024 -0400

    Qt: Add GUI support for saving in LZ4 format

    Add GUI support for saving in LZ4 format as well as gzip and
    uncompressed. Replace the current checkbox with a group box.
    The group box looks better alongside the packet range group box
    for Export Packet Dissections and would be appropriate to
    substitute into the Capture Options dialog in a later commit;
    a combobox might look more natural for the ordinary Save As window.

    Change the work to fix up the file extension a bit, so that
    it can switch between .gz and .lz4

commit 5d87f8fed0
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Aug 11 12:10:00 2024 -0400

    wiretap: Add support for writing LZ4

    Since LZ4 fast seek is now supported (for independent frames,
    the default with the lz4 command line), add support for writing
    LZ4 as well.

commit 8ef3ac4cc8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 11 19:30:35 2024 -0700

    Windows: Update Krb5 to 1.21.3

commit 27c6a0cbca
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 8 21:57:48 2024 -0400

    wiretap: Support fast seek in LZ4 Frame files

    Support for fast seeking in LZ4 Frames. Only works for independent
    blocks currently (linked blocks could work using the same methods
    as zlib by storing the window, by using the LZ4 low level Block
    API instead of the Frame API).

commit 3fe2451f83
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 11 11:08:12 2024 -0700

    Qt: Call QObject::tr where needed

    Fix

    wireshark/ui/qt/models/column_list_model.cpp:74: Class 'ColumnTypeDelegate' lacks Q_OBJECT macro

commit 279a0d8b42
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 11 10:30:49 2024 -0700

    tools: Make more Python strings raw strings

    Fix

    tools/make-usb.py:43: SyntaxWarning: invalid escape sequence '\?'
      utf8line = re.sub("\?+", "?", utf8line)

    and similar warnings.

    See also: 2a8b1973f8.

commit 0a55069455
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 11 09:31:44 2024 +0000

    [Automatic update for 2024-08-11]

    Update manuf, services enterprise numbers, translations, and other items.

    TLS CT Log IDs failed.

commit 03e99f3bc9
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Aug 11 07:12:28 2024 +0000

    BGP: simplify check of labeled prefix length

commit 8e33795288
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Aug 11 07:06:38 2024 +0000

    USB-AUDIO: Always init hfs, even if not used

commit 1b42370f49
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 8 06:49:44 2024 -0400

    Add option to save files in current working directory

    Note that this is somewhat less than useful when run from
    the Finder on macOS (returns the root directory) or from
    a shortcut (including the taskbar) on Windows (returns whatever
    is set as the fixed "run in" directory for the shortcut, which
    is usually the directory where the program resides, certainly
    for the shortcut the installer sets up.)

    We could try to do the same kind of workaround as done in
    get_persdatafile_dir() and for the other file open style settings.
    OTOH, this isn't the default setting (as platform UI guidelines
    recommend against this sort of thing on macOS and Windows), so
    perhaps caveat emptor is ok here.

    Fix #1237

commit 2d6056c8cd
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 10 11:57:20 2024 -0400

    MinGW+NSIS: Glob for versions of ICU

    The latest Fedora uses 74, not 72.

    Fix #19984

commit f8653b0cc1
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 9 17:58:48 2024 -0400

    wiretap: Fix fast seek header for uncompressed files

    Fix some calculations when an uncompressed section appears
    after a compressed stream has finished. We want to copy only
    the unused portion of the in buffer, not all of it. Don't
    include what has already been copied to the out buffer.

    This allows an uncompressed area after the end of a gzip
    stream to work properly. Note that the uncompressed portion
    has to be at the end - there's no detection that uncompressed
    data has suddenly become compressed.

commit 7fdffd7e3c
Author: Casper Meijn <casper@meijn.net>
Date:   Mon Aug 5 10:51:10 2024 +0200

    nmea0183: Add VHW sentence dissector

    Add sentence dissector for VHW messages.

    * It uses the existing dissector for the fields.
    * Report incorrect fixed text
    * Report an expected but missing field

commit f211e2ada2
Author: Caleb Chiu <caleb.chiu@macnica.com>
Date:   Sat Aug 10 10:29:10 2024 +0800

    ncsi: Refined codes by using proto_tree_add_item_ret_uint()

commit 4f1dbdc978
Author: Caleb Chiu <caleb.chiu@macnica.com>
Date:   Fri Aug 9 15:32:30 2024 +0800

    ncsi: Add Mellanox OEM command (get temperature)

commit f1ca99521d
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sat Aug 10 02:49:25 2024 +0000

    USB: Update HID usage pages

commit 3e181e8bc2
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Fri Aug 9 21:08:16 2024 +0200

    NR RRC: add a preference to perform DCCH message segments reassembly

commit 20f7a55397
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Wed Aug 7 07:39:21 2024 -0500

    Qt: empty packet diagram when single protocol layer

    Cleanup after displaying large/tall diagram
    Allow to refresh/resize to shrink scroll bar

    Ping #19978

commit 9ec9c8850c
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 9 11:08:44 2024 -0400

    wiretap: Fix concatenated lz4 and zstd streams

    The next 4 bytes that have the magic number are located
    in state->in.next, which may not be state->in.buf if we're
    in the middle of a file and have finished one stream and beginning
    another.

    Fixes concatenated lz4 frames, etc.

commit 78d235a237
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Fri Aug 9 16:52:12 2024 +0200

    LTE RRC: add a preference to perform DCCH message segments reassembly

    Fixes #19969

commit ee92ff23ba
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 9 10:59:36 2024 -0400

    wiretap: Add a comment about compression

    There's more of a question than a comment about why there's fast seek
    data added for decompressed data. Add the best answer I have - possibly
    some idea about supporting concatenated uncompressed data after a
    compressed stream.

    [skip ci]

commit 90f2d78deb
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Fri Aug 9 13:44:02 2024 +0000

    ORAN FH CUS: Add Control ST8 (Ack/Nack feedback)

commit 27c09ba852
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 8 12:01:59 2024 -0400

    GIOP: Don't default to looking for IOR.txt in the CWD

    It's unpredictable (and potentially a security issue in the
    case of malicious files) to have the dissector look for a file
    of a given name in the current working directory by default.
    Like the other filename preferences, make the user specify it
    in order to use its contents to supplement the dissection.

    Fix #15384

commit bc402e6dba
Author: Joakim Karlsson <oakimk@gmail.com>
Date:   Thu Aug 8 16:46:28 2024 +0200

    epan: restore removal of errno.h

    epan/ftypes/ftype-bytes.c:181:3: error: ‘errno’ undeclared (first use in
    this function)
       errno = 0;
       ^~~~~

    removed in 3c3165f5

commit be8e18119e
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Thu Aug 8 15:09:28 2024 +0000

    ORAN FH CUS: Add ST4 commands TRX_CONTROL and ASM

commit 2dfa29f4bd
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Aug 6 20:31:12 2024 -0400

    epan: optimize module_check_valid_name

    This is called over 250,000x on startup. Benchmarks and call analysis
    confirm it is faster on all tested platforms to declare static arrays
    with 256 members and only index into it with each byte, than to test
    if the byte is < 128 (i.e., ASCII) and index into a smaller array.
    This is the way the various glib g_ascii_is functions test for the
    same reason.

commit ba7488ed10
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 8 08:25:52 2024 -0400

    Qt: PathSelectionEdit avoid importing prefs, IWYU

    PathSelectionEdit can call the openDialogInitialDir from
    qt_ui_utils, which already does the right thing depending on
    the pref setting and returns a QString. This allows removing
    the dependency on prefs from the widget.

    Add stdint.h to util.h as part of include what you use.
    (PathSelectionEdit wouldn't compile after removing the prefs
    header due to this.)

commit 3d285ce47c
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Thu Aug 8 11:16:28 2024 +0100

    ORAN FH CUS: For ST4, dissect common header and skip command

commit 5a3923ba05
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 8 06:12:29 2024 -0400

    lua: Fix a leak

    lua_pushstring makes an internal copy of the string, so the
    memory can be freed immediately after the function returns.

commit 69c385ea14
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 8 09:48:54 2024 +0000

    Revert "XML: Delay registering fields"

    This reverts commit d218d6754f538ef25499ff837f70dab756a77052

commit 5e5f39d6f3
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Aug 7 07:39:55 2024 -0400

    tshark: Sort the decodes report, show string and payload tables

    Sort the output of the -G decodes report, first by table name then
    by key. Output string-like and FT_NONE current decodes as well.

    Custom tables are still not output because it's not clear how to
    convert the key to a string to distinguish them. Neither are GUID
    tables.

commit 6abdf6b55a
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Aug 7 22:38:55 2024 +0200

    USB: Add new classes and corresponding protocols

commit 5b42fb28dc
Author: Cal Turney <cturney111@gmail.com>
Date:   Wed Aug 7 21:40:35 2024 -0400

    SMB: Incorrect 'Continuation of' frame number

    Secondary requests had the wrong "Continuation of" frame number.
    In addition the second reply to the main request,
    such as SET_FILE_INFO, did not point to that request
    "Response to:".

    Changed "gboolean" to "bool" per reviewer's request.

commit 3282723e45
Author: Cal Turney <cturney111@gmail.com>
Date:   Mon Aug 5 17:50:31 2024 -0400

    SMB: Incorrect 'Continuation of' frame number

    Secondary requests had the wrong "Continuation of" frame number.
    In addition, the second reply to the main request,
    such as SET_FILE_INFO, did not point to that request
    (i.e.,"Response to:").

    Fixed pipeline error.

commit d0d35bfffa
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Aug 7 09:45:26 2024 -0400

    Don't assert when specifying a Custom or GUID table to "-d"

    Don't assert and crash when specifying a Custom or GUID table
    to the -d option. They aren't supported, but print a error
    message instead.

    Don't bother listing those table names in the help output
    either, as they're not supported.

commit acc59fbacd
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Wed Aug 7 20:49:56 2024 +0100

    ORAN FH CUS: getting ready to support ST4

commit e9dd399ac2
Author: Anders Broman <a.broman58@gmail.com>
Date:   Wed Aug 7 17:53:05 2024 +0200

    Dissectors: Include what you use.

commit c8a4fbeb5b
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Aug 6 20:47:18 2024 -0400

    lrexlib: Restore the Lua 5.1 ifdefs

    This is upstream code, so it's likely better to keep it closer to
    upstream to make updates easier. We have a few minimal changes still,
    mostly for forbidden APIs and compiler warnings.

commit 3c3165f5f1
Author: Anders Broman <a.broman58@gmail.com>
Date:   Wed Aug 7 09:16:35 2024 +0200

    Dissectors: Include what you use.

commit e70df89dac
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Wed Aug 7 10:39:04 2024 +0000

    ORAN FH CUS: Complete udCompParam

commit 57cf04f08d
Author: Jacob Lodge <jacob.lodge.at.bda@gmail.com>
Date:   Wed Aug 7 05:23:48 2024 +0000

    epan: wip RFC 8362 OSPF E-LSA dissector

commit 5a62af7ca7
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Aug 6 07:05:22 2024 -0400

    lrexlib: Use SPDX-License-Identifier

    lrexlib is MIT-Licensed. The upstream files have a single
    line referring to a LICENSE file. Use that, and also add
    a SPDX-License-Identifier line to keep checklicenses happy.

commit 221219dd1c
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Aug 6 18:41:42 2024 -0700

    docsis: no need for our own unit_name_string for MHz.

    We're a builtin dissector, so we can use the standard one.  (Yes, that
    removes a space between the frequency and "MHz", but that just makes it
    work the same way everybody else does.)

commit 89ee83f86a
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Aug 6 01:57:08 2024 -0700

    Add a UNS() macro, similar to TFS().

    As "TFS" stands for "true_false_string", "UNS" stands for
    "unit_name_string".

commit d24b19885d
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Aug 6 16:29:35 2024 -0700

    wsdg: fix header level of one section.

    "Build Wireshark" is supposed to be under, not at the same level as, the
    "with Visual Studio" section heading.

commit 144be4dcc7
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Aug 6 15:48:31 2024 -0700

    wsdg: emphasize that VS 2022 is recommended *for Windows*.

    That doesn't mean that Windows is a preferred platform of any sort.  See
    comments in #19976.

commit aad9b0e279
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Aug 6 15:13:00 2024 -0700

    wsdg: make "Windows" a toplevel section in the build setup.

    Have a top-level section for Windows, with the MSVC, MSYS2, and
    cross-compile builds as subsections.  Hopefully this will make it less
    likely for people to infer that Windows is, in some global sense, a
    preferred platform (there *is* no preferred platform).

commit b100fb2357
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Aug 6 21:35:09 2024 +0200

    Dissectors: Include what you use - DCERPC regenerated

commit c8729ae274
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Aug 6 17:47:25 2024 +0200

    Dissectors: Include what you use.

commit 8f15564a25
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Aug 6 17:38:11 2024 +0200

    PIDL:Get it to work on windows.

commit a68e502d31
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Tue Aug 6 17:00:53 2024 +0000

    ORAN FH CUS: Start to add proper handling for udCompParam

commit e181b5140b
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Aug 6 07:32:42 2024 +0200

    Dissectors: Include what we use(2).

commit 984d300eaf
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Aug 6 07:32:42 2024 +0200

    Dissectors: Include what we use.

commit bd94e40a3f
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Aug 5 20:55:00 2024 -0400

    BER: Make the Decode As functionality mostly work again

    The BER Decode As table is unique, and doesn't actually change
    the FT_STRING dissector table it refers to, but rather acts more
    like a Payload dissector table. As it is, it calls
    dissector_table_foreach instead of dissector_table_foreach_handle
    like most Decode As tables. That means that it iterates over the
    hash_table and not the dissector_handles, which means that the
    value refers to a dtbl_entry_t and not a dissector_handle_t.

    The Decode As Model's decodeAddProtocol function expects to receive
    a dissector_handle_t, and for the last 6-10 years has been casting
    a dtbl_entry_t to a dissector_handle_t, which has not worked.
    Retrieve the actual dissector_handle.

    Also give the name as a description to the dissector handles, because
    even though the decode as list is populated through a custom function,
    the Decode As model and delegate expect to look at the description
    of the handle.

    The FT_STRING part of the table is used for the UAT that associates
    OID to the string, which is then used to look up the dissector.
    Perhaps the UAT should map to the dissector handle (or a dissector
    handle name) more directly?

commit d218d6754f
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Aug 5 08:02:15 2024 -0400

    XML: Delay registering fields

    The XML dissector scans directories for DTDs (at some point
    XSD support should probably be added) and parses them with moderately
    expensive string operations in order to register fields. According to
    callgrind inclusive analysis, including processing the provided DTDs,
    proto_register_xml has the most calls on startup of any proto_register_
    function (27,990,206 whereas the vast majority of dissectors have fewer
    than 1 million calls). That can only be higher if additional files are
    parsed.

    Delay registration of fields until XML dissection is attempted,
    as is currently done with Diameter for similar reasons. (RADIUS
    registration does not appear to be as slow, perhaps due to using
    flex to parse the files more efficiently.)

commit b6b8a3c805
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Aug 5 11:43:00 2024 -0400

    zigbee-direct: Add descriptions for the dissectors

    Add the default names for the ZB Direct characteristics from the
    ZB Direct specification. Add the descriptions to the handles created
    so that Decode As is actually useful. Add the names to the tree of
    UUIDs for the renaming UAT.

commit 30dbf2cf1a
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Aug 5 10:38:09 2024 -0400

    btatt: Create dissectors with description for Decode As

    We have a human readable description for this dissectors. Use it
    when creating the handle for Decode As, so the entries in the
    Decode As table can be distinguished, instead of a user being
    presented with two dozen identical "BT GATT" names (which each map
    to a different handle) to choose from.

commit 0a6f717f9c
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Sat Aug 3 12:03:43 2024 -0500

    Qt: allow search on all columns in About tabs

commit 0ec99307c6
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Mon Aug 5 13:48:58 2024 +0000

    E2AP: register more OIDS (without implementations)

commit a48efa3cf7
Author: Casper Meijn <casper@meijn.net>
Date:   Fri Jul 5 09:36:02 2024 +0200

    nmea0183: Add HDT sentence dissector

    Add sentence dissector for HDT messages.

    * It uses the existing dissector for the fields.
    * Report incorrect fixed text
    * Report an expected but missing field

commit 922327f075
Author: Martin Mayer <martin.mayer@m2-it-solutions.de>
Date:   Mon Aug 5 09:57:46 2024 +0200

    Art-Net: Update to Rev. DK (and minor changes)

    - Updated protocol to revision DK (added missing fields and values)
    - Changed binary flags to FT_BOOLEAN and TFS

commit a787e582ba
Author: Casper Meijn <casper@meijn.net>
Date:   Mon Aug 5 10:59:17 2024 +0200

    nmea0183: Use `register_dissector()`

    Register the dissector by name, so that it can be used as a sub-dissector of another protocol.

commit 9c8582ad98
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Mon Aug 5 11:26:16 2024 +0100

    check_typed_item_calls.py: suppress or fix a few issues

commit 4c79d56d99
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Aug 4 16:29:39 2024 +0000

    BGP: Update dissector with current registries and RFCs

commit d8d76d58aa
Author: Pedro <13929766-bunnis@users.noreply.gitlab.com>
Date:   Sun Aug 4 16:21:55 2024 +0000

    Feature Code for NetScaler TPC Reset Window Error Code

commit 48638219d2
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Sun Aug 4 15:37:32 2024 +0100

    Fix some spelling errors

commit 889f058947
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Aug 4 08:08:45 2024 -0400

    Qt: Don't parent a Uat preference dialog with a menu that gets destroyed

    A ProtocolPrefenceMenu containing a UatPreferenceAction opens a
    modal UatDialog and then the Menu is deleted.

    On some Linux Wayland verisons at least, parenting the UatDialog for a
    ProtocolPreferenceMenu with a QMenu that gets deleted causes the
    dialog to be deleted and never shown. (There might be some ordering
    issues.)

    It's an ApplicationModal dialog, so just parent it with the mainWindow.

    This prevents UAT preferences from not being able to be selected by
    right-clicking on the packet list or proto tree.

    Related to 67daaa34213bb10d493fcf88dfc21587e02073c3
    (which exposed the issue by parenting modal dialogs on Linux, which
    is necessary on Wayland to make them properly on top)

commit 2e84661103
Author: Tomasz Moń <desowin@gmail.com>
Date:   Mon Jul 29 21:41:59 2024 +0200

    USB: Split conversation data from URB data

    Split the data to make it easier to refactor the conversation format in
    the future. No functional changes intended.

commit c94a4cecaa
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 4 09:31:22 2024 +0000

    [Automatic update for 2024-08-04]

    Update manuf, services enterprise numbers, translations, and other items.

    TLS CT Log IDs failed.

commit baf0bfc263
gpg: Signature made Sat Aug  3 14:40:26 2024 PDT
gpg:                using RSA key AB9A0CFF814FA65614B5F474397DFEBE343AD96F
gpg: Can't check signature: No public key
Author: Tomasz Moń <desowin@gmail.com>
Date:   Sat Aug 3 23:14:20 2024 +0200

    USB: Store endpoint with direction flag in usb_conv_info

    Commit 9605f3d3f44f ("USB: Differentiate IN and OUT endpoints") solved
    the issue where IN and OUT endpoints with same numbers were treated as
    the same endpoint. However, the commit failed to make sure that the
    endpoint stored in usb_conv_info includes direction. This lead to
    dissectors that do store endpoint numbers during descriptor processing
    to no longer be able to match data on IN endpoints. In USB MSC UASP case
    this lead to Data In and Status no longer being dissected.

    Fix the issue by storing endpoint together with direction flag.

commit ac3bb285ac
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 3 15:35:01 2024 -0400

    rpm-setup: Add correct SUSE Qt6 package names

    SUSE has somewhat different package names for Qt6 modules than
    RH/Fedora.

    We still don't build with Qt6 on SUSE by default. Note that if we
    do so, we have to install and specify a more recent version of gcc,
    because the default gcc on SUSE 15.5 and 15.6 is gcc-7.5.0, which
    will fail compiling against Qt6 due to C++17 limitations.
    ( <filesystem> is only supported as <experimental/filesystem>
    https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html )

commit e528693114
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 3 15:06:23 2024 -0400

    rpm-setup: Prefer Lua 5.4 on SUSE

    RH/Fedora has a "lua" package that defaults to the newest.
    On SUSE, the packages are "lua54" and "lua53", although just
    installing "lua" will search via package provided capabilities
    and install the newest package providing them, which is currently 5.4.

    Installing the -devel package always provides the base here.

commit bdd4d7f09a
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 2 10:39:38 2024 -0400

    wslua: Use require to load Lua plugins in plugins directories

    Load Lua plugins in the global and personal plugins directories
    with require, which adds them to the package.loaded path so they
    are only run once (whether loaded by us or by other script earlier
    in ASCIIbetical order require()ing it first).

    When loading scripts with require() (or dofile()), the recommended
    Lua style is to return a function table and have the requiring
    script use that. Globals are possible, but deprecated.

    Don't have separate user environments for personal plugins, because
    we don't do that for global plugins, and it confuses users. This
    does mean that personal plugins can pollute the global environment
    and there are problems if they use the same global variable. Avoiding
    that will be up to the user; this was already the case for plugins
    in the global plugins directory.

    For command line scripts, continue to put them in a file environment.
    Those are handled separately because they support command line options.

    Document, including examples.

    Fix #18589

commit a9920556d0
Author: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>
Date:   Thu Aug 1 16:58:37 2024 +0200

    btle: Extract out dissect_btle_broadcast_iso()

    This makes it easier to see what dissect_btle() does.

commit 8675c07e85
Author: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>
Date:   Thu Aug 1 07:45:01 2024 +0200

    btle: Extract out dissect_btle_acl_or_iso()

    The function dissect_btle() is very long. Extracting
    out this function makes it easier to maintain.

    Note: There is some code in this function handling ISO
    packets that is applied incorrectly. For example,
    ISO packets do not define control procedures.
    This is true before and after this commit.

    Signed-off-by: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>

commit e247c146c8
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 3 09:36:07 2024 -0400

    Lua: Switch the downloaded Lua to 5.4

    This primarily affects cross-compilation (e.g. MinGW)

commit 9b180d292e
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 3 09:28:13 2024 -0400

    tools: Install latest Lua on *BSD

    Install the lua package (latest on OpenBSD), lua54, or lua53
    in that order of preference, as we support 5.3 and later.

    [skip ci]

commit fada77bbc1
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 3 08:04:28 2024 -0400

    lrexlib: Update to upstream 2.9.2

    Update from https://github.com/rrthomas/lrexlib
    This is just a minor documentation update that removes an
    obsolete URL, switches others to https, and deemphasizes the
    obsolete PCRE1 (that we don't include anyway.)

commit 2748575ca9
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Aug 3 08:19:28 2024 -0400

    tools: Install latest lua package on Arch Linux

    The unversioned Lua package is the most recent, which is 5.4.x
    based. Install that.

    [skip ci]

commit 9d2da2c45a
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 2 16:45:07 2024 -0400

    Qt: Stay in packet list history until we're done with history

    The functions that set in_history_ to true always set it to false
    when they're done. Sometimes selectionChanged gets called twice
    when in the middle of history (e.g., for clearing the selection
    as well), and this causes history navigation back multiple packets
    in history to cease to work.

    See 52955b9c43a99942b332a8a2c0c2995608a539a1

commit 9db5109011
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Aug 2 12:26:32 2024 -0700

    epan: Fixup our column utility API documentation

    Strings are validated using g_ascii_isprint via ws_label_strcat and
    ws_label_strcpy, not isprint.

commit 2ff4e0f458
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Aug 2 09:54:01 2024 -0700

    CBOR: More recursion check updates

    Check our depth using the max tree depth preference value. Use our
    expert item instead of a simple assert.

commit f327bf379c
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Fri Aug 2 10:09:44 2024 +0100

    Make some symbols in generated dissectors static

commit 77a45aae05
Author: Daniël van Eeden <wireshark@myname.nl>
Date:   Sun Jun 23 23:50:22 2024 +0200

    MySQL: Add dissector test

commit d6975675b9
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jul 31 09:06:11 2024 -0400

    wslua: Don't prepend the same path entries more than once

    The intention of the manipulation of the global
    package.path, used by require() is presumably to have each script
    have a file-local environment with a custom path for require.

    Unfortunately, this doesn't really work - even though the table
    entry package.path is used to control the behavior of require(),
    require() is created as a function with the original package table
    as an upvalue. (Somewhat like a static class function with a
    member pointer to the original package table.) That means that changing
    the local environment so that the package table is different doesn't
    have any effect on the behavior of requires, since require still
    uses its pointer to the original table.

    There's no way to affect the behavior of require without affecting
    it for all scripts, even outside the local file environment.

    The path manipulation has worked, but only because it's changed the
    entry in the original table. Unfortunately, that means it's been
    prepending the same plugin paths over and over, one for each script
    added (and never removing them).

    Only prepend each path once. Update the comments so they describe
    what's going on. This doesn't affect the behavior (unless the same
    filename is present in multiple locations, which already has
    unpredictable behavior, but we might want to change it in the future,
    per the comments.

    Ping #18589

commit bb5a5feaa4
Author: Shreesh Roliwal <sroliwal@gmail.com>
Date:   Fri Aug 2 07:16:32 2024 +0000

    ntlmssp: Updating Session Basekey Generation for NTLMv1

commit 5219e36780
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Tue Jul 30 16:48:05 2024 -0500

    Qt: windows file: URLs with # (fragments); LTE help typo

commit 30f11e9694
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Aug 1 15:22:55 2024 -0700

    CBOR: Update a recursion check

    Fixes #19935

commit 31111a89f2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Aug 1 17:53:53 2024 -0700

    GIAS: Remove an odd byte from uco.idl

    A search for non-UTF-8 files in epan/dissectors turned up what appears
    to be an extra odd byte in uco.idl. Remove it.

commit 63e5ac75b4
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Thu Aug 1 23:07:08 2024 +0100

    Delete some double semicolons

commit 18f6ca96d0
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 1 14:35:36 2024 -0400

    packetBB: Skip over the extended type before retrieving length

    The packetBB TLV parsing parses the header twice, once to get
    the length in order to add the tree item with the correct length
    (rather than calling proto_item_set_len or similar later), and
    once actually adding the items. In the initial retrieval of the
    length it fails to increment the offset if the extended type is
    present according to the flags bit.

    Fix #19972

commit 19788906e9
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 1 10:09:24 2024 -0400

    wslua: Add some clarification to dofile

    Call out that dofile searches the personal configuration directory
    and the global configuration directory, which are not the plugin
    directories, because that has been a point of confusion.
    These directories are *not* added to the package.path search path for
    require(), but the plugin directories *are* added to the search path for
    require(), but not to the path searched by dofile.

    This is largely because the wslua_dofile implementation predates
    automatically loading all .lua files in the plugin directories,
    updating the search path for require(), and loading init.lua from
    the plugin directories instead of the configuration directory.
    Those changes each came several years apart.

    Move dofile before loadfile, as it comes earlier alphabetically
    and the loadfile documentation refers to dofile.

    Ping #18589

commit ddd2b8a7d2
Author: Prashant Tripathi <prashant_tripathi@selinc.com>
Date:   Wed Jul 31 13:25:26 2024 -0700

    Fixing the data type for timeOfNextJump in PTP

    From the IEEE Std 1588-2008, "The value of timeOfNextJump shall be the
    value of the seconds portion of the transmitting node’s time at the time
    that the next discontinuity will occur. The discontinuity occurs at the
    start of the second indicated by the value of timeOfNextJump".
    Essentially, this PTP field in Alternate Timescale Offset Indicator TLV is 6
    octets (or 48 bits) field in units of seconds, currently is wrongly being
    parsed as raw hex, and this merge request addresses that problem.

commit 838cdad7b1
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Sep 15 09:33:21 2023 -0400

    taps: Document what TL_REQUIRES_PROTO_TREE actually does

    The documentation and comments for the tapping system claims
    that TL_REQUIRES_PROTO_TREE creates a full protocol tree, i.e.
    that all fields are visible. In reality, what it does is ensure
    that the protocol tree is non-NULL, but it doesn't make the
    tree visible and all items appear.

    Clarify the documentation.

commit e69c817b4d
Author: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>
Date:   Sun Jul 21 19:24:10 2024 +0200

    Qt/Bluetooth: Display ATT Server overview as a tree

    The Bluetooth Core Specification Vol 4, Part G, Section 2.6,
    "GATT Profile Hierarchy" describe how GATT structures attributes
    in a hierarchy (a tree).

    This commit changes the "Bluetooth ATT Server Attributes" view
    from a list representation to a tree representation that matches
    the Bluetooth Core Specification.
    This makes it easier to see how attributes are grouped into
    services and charactertistics.

    To achieve this, the handle of each attribute stored in the
    ui's tableTreeWidget is stored in the element itself.
    This allows us to implement `item_with_handle_get()`.
    When dissecting the ATT packets, the service and characteristic
    declaration handles are stored so that they can be used
    for lookup later.

    Signed-off-by: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>

commit 2dccb6c40a
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Thu Jul 25 14:58:43 2024 +0100

    Fix some spelling errors

commit 948d614a94
Author: Timo Warns <timow+git@DiningPhilosopher.DE>
Date:   Thu Jul 25 21:51:13 2024 +0200

    GNSS: add dissector for SBAS L1 MT18

    Add dissector for SBAS L1 MT18 (IGP mask message)

commit 5d983a39f0
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Wed Jul 31 16:16:31 2024 +0200

    TECMP: Adding support to register dissector for unknown data type

    Allowing a C or lua dissector to be added for experimental or private
    TECMP data types.

commit f7db37441e
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Aug 1 07:59:38 2024 -0400

    ntlmssp: Only close the gcrypt ciphers if enabled

    Fix #19971

commit 1ae3cee9be
Author: Adam Aposhian <adam.aposhian@fireflyautomatix.com>
Date:   Wed Jul 31 15:21:22 2024 -0600

    MQTT: Use MQTT dissector for MQTT over QUIC

    The EMQx MQTT Broker can tunnel MQTT over QUIC,
    and specifies the protocol in ALPN as "mqtt".
    This change uses the MQTT dissector if the QUIC ALPN protocol name is "mqtt".

commit c24eabfb13
Author: Jakub Pawlowski <jpawlowski@google.com>
Date:   Thu Aug 1 00:01:19 2024 +0200

    btatt: fix "Read Multiple Variable Length" parsing

    Length equal to zero is perfectly valid. Currently we skip i_handle
    incrementation, and end up using bad value dissector for following
    entries.
    Length smaller than zero is impossible for guint16.

commit 12d5ee22fd
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Thu Aug 1 10:49:16 2024 +0000

    Add call to check_col_apis.py to pipeline

commit d186f89a7c
Author: vyacheslav.kostyuchenko <vyacheslav.kostyuchenko@dsr-corporation.com>
Date:   Thu Dec 21 17:53:27 2023 +0300

    IEEE802154: Parse TLVs for Enhanced Beacons

commit caec0bc640
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Thu Aug 1 08:14:24 2024 +0100

    Add check_col_apis.py call to check_dissector.py

commit 5d69cc44d7
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jul 31 16:44:24 2024 -0400

    udp, dccp: Check for a null tree before resolving a port to string

    port_with_resolution_to_str can be relatively expensive if there's
    a NULL tree, so check for it to avoid calling the function.
    (The similar call in TCP is already under a if (tree) check.)

commit b24016e0b2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 31 15:03:29 2024 -0700

    GitLab CI: Compress our FAQ

    This bypasses our CDN's email rewriting feature.

commit 51967fc669
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jul 31 17:19:18 2024 -0400

    docs: Simplify path to attributes file

    Now that the guides are also in the doc/ directory, reduce
    the number of components relative path to the attributes file.

commit 353ed4e982
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jul 31 16:39:30 2024 -0400

    column-utils: Check columns before convering ports to string

    Check if the columns exist before doing string copying operations in
    col_append_ports and col_append_str_uint.

commit 2d409e4c54
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 31 12:19:46 2024 -0700

    Gitlab CI: Add our FAQ to the Documentation job

commit 0b9b9e9581
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Wed Jul 31 13:07:09 2024 -0500

    Qt: Export PDUs/Strip Headers - dialog title and help button

commit ba0d705aa8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 31 13:33:16 2024 -0700

    Version: 4.3.1 → 4.3.2

    [skip ci]

commit 8892f0dc09
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 31 11:54:03 2024 -0700

    Build: 4.3.1

    [skip ci]

commit ccaa67c1ea
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Wed Jul 31 17:37:58 2024 +0100

    Last batch of col_ API changes

commit 8420e64fde
Author: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>
Date:   Sat Jul 27 15:48:17 2024 +0200

    btle: Get rid of unecessary frame_number variable

    That state is also ready present in `pinfo->num`.
    Removing this additional variable makes it more clear what we
    actually need to pass around.

    Signed-off-by: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>

commit 91a40d3355
Author: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>
Date:   Sat Jul 27 15:39:59 2024 +0200

    btle: Extract out dissect_btle_adv()

    The function dissect_btle() is very very long.
    Extracting out a separate function for advertising
    packets makes the code more maintainable.

    Signed-off-by: Rubin Gerritsen <rubin.gerritsen@nordicsemi.no>

commit 316e14e502
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jul 31 07:39:07 2024 -0400

    WSDG: Add some information about Lua loading order

    Explain a bit more about the order in which Lua scripts are read,
    since it's important and sometimes confusing.

    Ping #15907. Ping #18589.

commit 1331532387
Author: Vitaliy Guschin <guschin108@gmail.com>
Date:   Sun Jul 28 04:43:05 2024 +0700

    BGP: fix check of length of labeled prefix

    Fixed display of default route for SAFI 4. The problem was in incorrect
    checking of the prefix length. The default route prefix length for this
    SAFI is 24 bits. This value was invalid.

    This was fixed for the SAFI 128, 129, 130. Also, RD accounting has been
    added to the prefix length check.

commit ee3471894f
Author: Joakim Karlsson <oakimk@gmail.com>
Date:   Wed Jul 31 11:30:38 2024 +0200

    LIX2: Update to 3GPP TS 33.128 V18.8.0

commit 62d985f191
Author: Hackrrr <Hackrrr@users.noreply.github.com>
Date:   Tue Jul 30 19:44:35 2024 +0200

    asterix: Fix dissector for extended items

    Asterix dissector is currently broken for extended data items that have
    extensions with different length than the first/base part. Dissector
    calculates wrong length for such items and so rest of the packet is
    parsed incorrectly.

    This is the case e.g. for I023/101 where first part is 2-octet long but
    extension is 1-octet.

    Also specs were updated as part of the dissector code generation...

commit d8eed38731
Author: Adedeji Adeloye <adeloyedeji@gmail.com>
Date:   Tue Jul 30 20:03:52 2024 -0400

    SMB2: Add SMB2 notifications capabilities flag

    Update header Process ID to reserved.

commit 897864da07
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jul 30 17:38:17 2024 -0400

    epan: Do not prime with hfids wanted by disabled postdissectors

    If the protocol for postdissector's handle is disabled, then we won't
    call it, so we can ignore its request for hfids when beginning dissection.

    Ping #8174

commit 99096b76ed
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Tue Jul 30 16:05:58 2024 +0100

    Improve some more col_ calls, and script improvements

commit 2e97567825
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jul 30 10:50:37 2024 -0400

    wslua: Change one stray static function return value to bool

    Ping #19116

commit 524613daed
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Tue Jul 30 11:56:31 2024 +0100

    Improve more col_ API calls

commit 1dd922be36
Author: Radu Nichita <rnichita@drwholdings.com>
Date:   Mon Jul 29 12:30:15 2024 +0200

    Add option to run tshark with profile from global profiles

    This commmand introduces the --global-profile option in tshark.
    When enabled, it would use the global directory for selecting
    profiles.

    Fixes #19442

commit dc4271d78b
Author: Darius Davis <darius-wireshark@free-range.com.au>
Date:   Mon Jul 29 19:57:59 2024 +1000

    nettrace_3gpp_32_423: Eliminate unnecessary copies of RE matches.

    In nettrace_parse_address, there is no need to copy the matched parts of the
    regular expression into separate buffers; g_match_info_fetch_named already
    provides a NUL-terminated allocated buffer containing just the match.

    While we're here, stop leaking those strings returned by
    g_match_info_fetch_named.  Also, insert a temporary NUL-terminator at the end
    of the string we are passing into g_regex_match so that it will stop at the
    expected location.

    Fix #19940

commit 4c40367838
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Mon Jul 29 13:30:29 2024 -0500

    Qt: no Windows META key - only Q_OS_MAC at this time

    Closes #16437

commit 8f6b40c4fd
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Jul 29 09:02:17 2024 -0700

    Tools: Update a couple of doc directory references

commit 04ee1cf9dd
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Mon Jul 29 08:37:07 2024 -0500

    Qt: disable follow if no frame selected

commit edecbd535b
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Jul 2 11:18:01 2024 +0200

    MacOS: Update some package versions.

commit 09dbf1e9b6
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Mon Jul 29 13:03:00 2024 +0100

    Change some non-optimal col_ calls

commit e80d3eb9bf
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Mon Jul 29 10:50:26 2024 +0000

    Add tools/check_col_apis.py

commit bbd3ce58db
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Sun Jul 28 17:29:55 2024 -0500

    WSUG: add Reset Layout to main toolbar

    `C:\>set QT_SCALE_FACTOR=2` for large toolbar icons

commit fe0a53b873
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Jul 28 10:03:43 2024 -0400

    ntlmssp: Prevent leaks of cipher contexts

    It's unclear to me that these need to be reinitialized so many
    times, but at least don't leak them when doing so.

commit 254b74b974
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Sun Jul 28 14:47:09 2024 -0500

    Docs: update README files

commit 7cd25d2861
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 28 13:48:53 2024 -0700

    SDP: Update an enum

    Use a C99-style name instead of a GLib-style name.

commit ade004d6b0
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Jul 28 14:41:10 2024 -0400

    cllog: Check the stripped time stamp validity

    If the time string after stripping delimiters is too long, then
    it's not valid just as much as if it was too long before stripping.
    The time stamps could be checked even more for validity, but this
    is necessary to avoid writing too long strings to a buffer.

    Fix #19939

    Co-authored-by: Darius Davis <darius-wireshark@free-range.com.au>

commit b8040bad31
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 28 11:22:26 2024 -0700

    gitignore: Update the Doc section

    Update our entries to match recent changes.

    [skip ci]

commit 1f865ae6a2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 28 17:42:02 2024 +0000

    [Automatic update for 2024-07-28]

    Update manuf, services enterprise numbers, translations, and other items.

    TLS CT Log IDs failed.

commit 37e871a756
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Jul 28 10:58:47 2024 -0400

    GTPv2: Don't include padding in the RAC in ULI

    3GPP 29.274 8.21.3 RAI Field:
    "The Routing Area Code (RAC) consists of 2 octets. Only Octet c+5
    contains the RAC. Octet c+6 is coded as all 1's (11111111)."

    Ignore the padding all 1's octet and only retrieve the RAC from
    the octet with the RAC.

    Cf b2f78b47b43ced0ae5904f41fca8205268bef134 (the similar GTP case)

    Fix #19959

commit ba07b59501
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Jul 28 06:36:34 2024 -0400

    iee80211: Update status codes per 802.11-2020

    There was some confusion about the status codes because of an error
    in Draft P802.11Revmd which was clarified in the final published
    version.

    See b1ec5ddff6035bcc6c6eafae234f029e4871f123

    Fix #19955

commit 862a2f2fd0
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Sun Jul 28 16:58:08 2024 +0200

    tcp: Convert a function name to C99 style

    Change KEEP_32MSB_OF_GUINT64() to keep_32msb_of_uint64().

commit d976b3d848
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Fri Jul 19 16:27:39 2024 -0500

    Qt: add reset layout button to toolbar

commit 902df16bc3
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Jul 28 09:04:13 2024 -0400

    dtls: Don't call gcry_cipher_encrypt on a null cipher context

    Fix #19962

commit 66dcd56f1e
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Jul 28 08:24:20 2024 -0400

    ntlmssp: Don't insert a key created on the stack into a hash table

    We could change this table to an autoreset wmem_map as well.

    Fix #19943

commit 8b45d8a85b
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Date:   Fri Jul 26 17:17:51 2024 +0300

    pgsql: Handle "direct SSL" negotiation

    PostgreSQL v17 introduced a new way of starting a TLS encrypted
    connection, where the client directly enters the TLS handshake
    directly after opening TCP connection, sending a TLS Client Hello
    message. This is in contrast to the usual STARTTLS-style negotiation.

    See https://www.postgresql.org/docs/17/protocol-flow.html#PROTOCOL-FLOW-SSL

commit c599d6962e
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jul 27 21:50:25 2024 -0400

    monero: Stop dissection on an invalid type

    The length of a value is determined by its type. If the type
    is unknown, stop dissecting because we can't know where the
    next type begins, and errors will just compound. In particular,
    for arrays (which are all one type), we need to abort before
    looping, rather than add an expert info for each supposed array
    member (especially since the invalid types don't try to fetch
    data from the tvb and thus wouldn't throw an exception, instead
    looping up to the maximum varint size.)

    Fix #19961

commit 6e08eae526
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jul 27 21:03:00 2024 -0400

    Qt: Fix clearing displayFilterCombo on Qt < 5.15

    We don't want adding entries from recent to the displayFilterCombo
    to change the current main filter on startup. Qt 5.15 and later
    have a natural way to prevent this, but older Qt doesn't.

    For older Qt, the showEvent doesn't happen after the model is
    filled, so the approach tried originally with showEvent doesn't work
    (though it would on Qt 6, if needed). Use a different approach
    distinguishing between rows added programmatically from recent
    and rows added by the user by examining the edit text.

    Fixup f889eabb12537b9df169a75ae1ec3be85b791f41 for older Qt

commit e25e93082a
Author: Tomasz Moń <desowin@gmail.com>
Date:   Sat Jul 27 21:35:12 2024 +0200

    USB HID: Do not store complete usb conv info

    There is no point for copyin the whole usb_conv_info_t structure. Copy
    only the relevant parts: bus id, device address and interface number.

commit 10e6789834
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Jul 26 12:44:47 2024 -0400

    Media Type: Add a structured suffix table

    Add the registered structured syntax suffixes listed at
    https://www.iana.org/assignments/media-type-structured-suffix/media-type-structured-suffix.xhtml
    for which we have dissectors to a media type suffix table.

    Call this from the fallback "nothing else matched" media protocol,
    which is used in some dissectors (like HTTP), though not everywhere
    that uses the media type table (e.g., not HTTP/2).

    Perhaps all dissectors that dissect media types should call the
    Media pseudo-protocol, similar to the Ethertype pseudo-protocol.
    This would have the advantage of making Decode As work better,
    as with Ethertype. (Right now there is a Decode As for media types
    in the OBEX dissector, which affects the global table but is only
    populated in the Decode As dialog if OBEX is present.)

    Fix #19945

commit ad53eb6a78
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sat Jul 27 15:58:58 2024 -0700

    ILP: Fix a field name

commit 4b1f094c18
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Sat Jul 27 17:18:34 2024 +0000

    Docs: Asciidoctor compat-mode transitioned to modern syntax

commit 2e71982fee
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Jul 27 14:36:19 2024 -0700

    nstime: use consistent names for FILETIME-epoch conversion routines.

    Give the "FILETIME, but with nanosecond resolution" routine a name
    similar to the "FILETIME, but with second resolution".

commit bde8fa5f67
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jul 27 16:56:25 2024 -0400

    bpv7: Initialize subj_ts

    Initialize a struct.

    Fix #19957

commit 487b336942
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sat Jul 27 09:38:36 2024 -0700

    WiX: Install the release notes as "Release Notes.html"

    This matches the NSIS installer.

    [skip ci]

commit f4d9153a3a
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Sat Jul 27 11:21:54 2024 +0000

    Use col_append_str for literal strings with no specifiers

commit f439919447
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Jul 27 00:16:34 2024 -0700

    smb: use COUNT_BYTES_SUBR() and COUNT_BYTES_TRANS_SUBR() macros.

    As we're no longer having the NTTIME dissectors advance the offset, in
    cases where we both advance the offset and decrement *bcp by the same
    amount, use the appropriate macro to increment the first and decrement
    the second by the same amount.

commit 347e6c616f
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Jul 27 00:50:15 2024 -0700

    pidl: fix the check for Windows.

    There's no need to put the string for the OS into a variable; just test
    it in an if statement.

    Wrap the if condition in parentheses; it appears to be necessary, at
    least as I read https://perldoc.perl.org/perlsyn#Compound-Statements
    (and if it's not there, I get a syntax error).

    According to https://perldoc.perl.org/variables/$%5EO, $^O has the value
    "MSWin32" on Windows, not "win".

    "eq", not "=" or "==", is the string comparison operator.

    Make tools/pidl/idl.yp's parse_file() match the one in
    tools/pidl/lib/Parse/Pidl/IDL.pm.

commit 1f00714415
Author: Anders Broman <a.broman58@gmail.com>
Date:   Fri Jul 26 22:55:07 2024 +0200

    pidl: handle compilers whose cpp doesn't strip // comments.(win) [skip ci]

    ping #16608
    `cc --version` does not work on windows.

commit 8e6c608b31
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Jul 26 19:18:51 2024 -0700

    Clean up handling of times based on the NT FILETIME epoch.

    Have one dissector, in epan/dissectors/packet-windows-common.c, for each
    of:

    * NTTIME - a 32-bit lower half of a 64-bit value, followed by a 32-bit
    upper half of that 64-bit value.  The result is a count of
    100-nanosecond units since the FILETIME epoch.

    * NTTIME_hyper: a 64-bit value, which is a count of 100-nanosecond units
    since the FILETIME epoch.

    * NTTIME_1sec: a 64-bit value, which is a count of *seconds* since the
    FILETIME epoch.

    Each of thos takes an encoding value to indicate what byte order the two
    32-bit values in an NTTIME, or the 64-bit value in an NTTIME_hyper or an
    NTTIME_1sec, are in.

    Don't have those dissectors return the new offset, have them return the
    new protocol tree item.  The size, in the packet, of those items is
    always 8 bytes, so we can just increment it in the caller, but some
    callers want the item, and this is more convenient than returning it
    through a pointer.

    Have DCE RPC dissectors for each of those types, using the data
    representation to select the byte order to pass to the
    previously-mentioned dissectors. Update pidl to use the appropriate one
    of those dissectors for those three types.

    Add a filetime_1sec_to_nstime() routine to convert a 64-bit
    seconds-since-the-FILETIME-epoch value to an nstime_t, and use it in the
    NTTIME_1sec dissector.

    Get rid of nt_time_to_nstime(); just directly call filetime_to_nstime().
    That removes a check for the upper 32 bits of the FILETIME being 0, so
    some values will now be converted rather than giving "Time can't be
    converted" errors.

commit b48759e4a4
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Jul 26 21:19:51 2024 -0400

    qnet6: Do not use col_set_str on the result of val_to_str

    val_to_str (non const) adds a string in packet scope.

    Fix #19960

commit 5792487cf2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jul 26 13:44:15 2024 -0700

    Fix various ASN.1 generation warnings and require UTF-8

    Fix our "Unused FIELD_ATTR", "Unused FIELD_RENAME", and "Unused
    TYPE_RENAME" warnings.

    Fix our "Decoding XXX as utf-8 failed" warnings by converting some files
    from Windows-1252 to UTF-8 and and updating asn2wrs.py to require valid
    UTF-8 encoding.

    The "Regenerating ASN.1 dissectors" section in the "Clang + Code Checks"
    CI job should be less noisy now, so expand it.

commit 9e3e17136c
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Fri Jul 26 23:34:01 2024 +0000

    For literal strings, prefer col_set_str() to col_add_fstr()

commit d48edda709
Author: Tomasz Moń <desowin@gmail.com>
Date:   Thu Jul 25 21:38:02 2024 +0200

    USBLL: Reassemble High-Bandwidth interrupt endpoint data

    Assume transfer length up to total payload length on High-Bandwidth
    interrupt endpoints if transfer length is not known.

    New transfer reassembly starts on a new (not retransmitted) packet when
    there is no active reassembly in progress or when the previous packet
    did end the transfer. Correct the check for previous packet transfer end
    for cases where the transfer length is Max Packet Size multiple.

commit cfc9dc3a00
Author: Tomasz Moń <desowin@gmail.com>
Date:   Thu Jul 25 21:25:41 2024 +0200

    USB: Fix High-Bandwidth endpoint sanitization

    Correct usb.wMaxPacketSize.size bitmask to handle USB 2.0 endpoints
    with Max Packet Size equal 1024 (the maximum possible). Add macros for
    extracting the number of additional transactions and endpoint Max Packet
    Size from wMaxPacketSize and use it during sanitization.

    Format wMaxPacketSize to show packets per microframe multiplied by max
    packet size equals total payload length for High-Bandwidth endpoints.
    Leave standard (wMaxPacketSize <= 1024) endpoints display intact.
    For example wMaxPacketSize 5120 is now shown as 3 * 1024 = 3072.

commit 9ee0999cac
Author: Anders Broman <a.broman58@gmail.com>
Date:   Fri Jul 26 23:09:28 2024 +0200

    DCERPC: Do not include glib.

commit c8c73f6678
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jul 26 12:30:31 2024 -0700

    packaging: Fix the RPM build

    release-notes.html is in %{_datadir}/doc/wireshark, not the top-level
    source directory.

commit 668881fec7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jul 26 10:32:05 2024 -0700

    NSIS+WiX: Switch from "NEWS" to "Release Notes.html"

    A file called "Release Notes" is a more obvious place for our release
    notes than "NEWS", so use that name.  Our release notes contain lots of
    URLs, so make it an HTML file. Remove the "NEWS" file and related targets.

commit abbd64a3a1
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Jul 25 13:44:36 2024 -0400

    CIGI: Convert CIGI 4 to a dissector table

    Convert the CIGI 4 packet IDs to use a dissector table.
    This allows other dissectors (e.g., in Lua) to register
    handlers for locally defined and registered packet ID types.

    Also eliminate a large number of redundant fields. CIGI 4
    generally has the same fields as in CIGI3, even though added
    at different offsets and sometimes re-ordered (due to padding
    to multiples of 4 bytes and having a different size header.)

    The vast majority of these fields are exactly the same, even
    using the same abbreviation for all the different versions.

    This also fixes a few cases where a single-byte packet
    length was being read from the wrong offset for CIGI 4.

commit 4bc1d198b8
Author: Brian Tracy <brian.tracy33@gmail.com>
Date:   Fri Jul 26 19:42:20 2024 +0000

    GTPv2: Add units of kbps to AMBR

commit ed3a7c8e31
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jul 26 10:54:03 2024 -0700

    Release notes: We now ship with NPcap 1.79

commit b07275791d
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Fri Jul 26 18:20:47 2024 +0000

    composite_tvbs: speed up by using GQueue

commit c51e992a23
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Jul 26 10:00:57 2024 -0700

    packaging: Install release-notes.html in our RPM package

    Install release-notes.html instead of NEWS.

commit 42eb155e05
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Jul 25 14:16:50 2024 -0700

    Docs: Update our targets

    When we consolidated our documentation sources in 54d279dd7e, we kept
    the docbook directory's EXCLUDE_FROM_ALL property. Remove that from the
    doc directory and exclude each User's and Developer's Guide target from
    the "all" target instead.

    Normalize our doc target formatting a bit.

commit 57af0553f1
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Jul 25 14:35:26 2024 -0700

    GitLab CI: Try to limit interruptibility to merge requests

commit dd8f9c1087
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Jul 25 14:49:29 2024 -0700

    pidl: handle compilers whose cpp doesn't strip // comments. [skip ci]

    Clang, at least in XCode 15.2, has a cpp that doesn't, but cc -E works.

    See comments in !16576.

commit dabf84e0d7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Jul 25 11:39:40 2024 -0700

    GitLab CI: Our guides are now in the doc directory

commit 54d279dd7e
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 24 16:02:06 2024 -0700

    Docs: Move the User's and Developer's Guides to the doc directory

    The documentation was originally kept in the "docbook" directory because
    it was written in the DocBook markup language. That hasn't been the case
    for a long time, so just move everything under "doc".

    Move make-wsluarm.py to the tools directory.

commit ea842c8be0
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Jul 25 16:58:22 2024 +0200

    Don't include glib when not needed.

commit b9eec9503c
Author: Justin <fakesteakjustincase@gmail.com>
Date:   Thu Jul 25 15:56:57 2024 +0000

    BTLE: increase str_addr_len to accomidate new longer string name after #16417

commit e8dc6be7df
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Jul 25 13:58:46 2024 +0200

    PFCP:Use wmem to allocate memmory

commit 3b75810424
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Jul 25 13:54:06 2024 +0000

    WSUG: Add FTP-DATA to exported objects.

commit dd7cb22c82
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Jul 25 13:37:53 2024 +0200

    Convert remaining dcerpc dissectors to C99 types

commit ea348265a1
Author: Vafokhon Safokhujaev <vafo.main@gmail.com>
Date:   Tue Jul 23 19:21:19 2024 +0500

    ZBEE SEC: Enable empty payload security check

commit ae17322376
Author: Luis Colmenero <colmenero.sendra@gmail.com>
Date:   Tue Jul 16 17:33:13 2024 +0200

    PID_RELATED_ENTITY_GUID and PID_RELATED_ORIGINAL_WRITER_INFO

commit 86f47a4249
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Thu Jul 25 11:45:22 2024 +0200

    cigi: fix typo on hf name

    packet-cigi.c hf_cigi4_symbol_clone : - filter 'cigi.symbol_clone' appears 4 items before - labels are 'Symbol Clone' and 'Symbol Surface Definition'

commit cb22bc045a
Author: Lucas Drufva <lucas.drufva@gmail.com>
Date:   Wed Jul 24 19:35:29 2024 +0200

    ErlDP: Add missing tags

    Tags: V4_PORT_EXT, LOCAL_EXT
    Parsing for tags: STRING_EXT, BIT_BINARY_EXT, EXPORT_EXT

commit f71745c6bd
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Jul 25 02:01:28 2024 -0700

    dcerpc: get rid of guint1632 and guint3264 types.

    Replace the few remaining instances with uint1632_t and uint3264_t and
    remove their definitions.

commit 7574b47b5f
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Jul 25 01:02:41 2024 -0700

    pidl: explain the "Syntax error near '/'" errors. [skip ci]

    Whether you get them depends on the toolkit - it happens with Xcode
    clang but not with GCC, so you'll see it on macOS, you won't see it on
    Linux, and you may or may not see it on *BSD (at least some of them are
    transitioning to clang, which may give the same behavior as Xcode
    clang).

commit 8abd58d9a0
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jul 23 12:07:14 2024 -0400

    CIGI: Use a dissector table for packet id for version 3

    Use a dissector table for dissecting different packet ID
    types for CIGI version 3.

    This allows other dissectors (e.g., in Lua) to register
    to the table to dissect user defined packet types.

    Also fix the dissection of unknown/data in CIGI 4; the
    common function was looking at the previous byte to
    determine the packet length, but as CIGI 4 uses a different
    header (with a 2 byte length in a different offset), this
    didn't work. Instead take a proper subset based on the
    reported length.

    The minor versions of CIGI 3 just add fields in previously
    reserved places. There's no need to register identical fields
    (with identical abbreviations), so remove a lot of duplicate
    fields.

    This approach should be extended to CIGI 2 and 4 later.

commit b55ee60a7a
Author: David Lamparter <equinox@diac24.net>
Date:   Mon Jul 22 13:54:46 2024 -0700

    DHCPv6: decode DHCPv4-over-DHCPv6

    RFC7341 specifies how to transport an IPv4 DHCP message over DHCPv6.
    It's simply the DHCP message wrapped in a DHCPv6 option + message type.
    Decoding it is nothing more than appropriately calling the DHCP (v4)
    dissector, this does just that.

commit 0fa2751812
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 24 23:42:16 2024 +0200

    ANCP: Extend with new data from IANA registery

commit a7a0f772f7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 24 16:20:45 2024 -0700

    Update our mailing list URLs

    Our lists are now at lists.wireshark.org.

commit 0e4ff696b7
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 24 23:44:52 2024 +0200

    Art-Net: Add oem code values and extensions to todControl cmds

commit 375fdb472f
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Jul 24 14:43:59 2024 -0700

    Change some function names and variable types to use C99 types.

    This includes gdouble.

    It also includes some ett_ values that were gint rather than int.

commit 0e17c06c35
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 24 23:39:55 2024 +0200

    AERON: Add Resolution frame type identification

commit 1e925dc843
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 24 23:37:42 2024 +0200

    ELF: Extend some value ranges

commit bb65650dfe
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Jul 25 00:48:47 2024 +0000

    EPAN: various cleanups to addr_resolv

commit 4047e3a851
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 24 23:24:55 2024 +0200

    DOC: Document Enable IP geolocation checkbox in name resolv prefs

commit e1e449c5bd
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 24 21:43:39 2024 +0000

    RTCP: make notification a bool

commit 054ae0c79c
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jul 24 09:12:11 2024 -0400

    Re-enable disabled pidl dissectors and regenerate for C99

    These dissectors give some warnings (some mislabeled as errors)
    but do build. In the case of winspool, we have a handwritten
    spools dissector that supplies the necessary fields and types
    instead of using spools.idl (though perhaps we should use a
    pidl compiled dissector in the future.)

    There are also a number of Perl warnings in all the PIDL
    dissectors (mostly comparing things to undef), because upstream
    Samba enabled warnings.

commit 429b5dcd14
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Jul 24 12:45:36 2024 -0700

    pidl: remove an unused variable. [skip ci]

    $return_type is set but not used; it appears to be set to a string
    giving a GLib type, which is not what we want any more.

commit c7091b057c
Author: Anders Broman <a.broman58@gmail.com>
Date:   Wed Jul 24 14:25:31 2024 +0200

    Convert a number of "guint" to "uint" in function names and alike.

commit b72753c50a
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Wed Jul 24 16:41:43 2024 +0200

    capture_info_dialog.cpp: fix warning (found by check tools)

    Please use #include <ui_capture_info_dialog.h> instead of #include "ui_capture_info_dialog.h"

commit f0c1d9d58d
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Wed Jul 24 16:43:13 2024 +0200

    NAS 5GS: upgrade dissector to v18.7.0

commit 8e8c831d44
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Wed Jul 24 12:24:32 2024 +0000

    Docs: typo in previous name

commit 7232a302ee
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Jul 24 03:50:11 2024 -0700

    pidl: more C99 types.

    Change another part of pidl to generate C99 types, and regenerate
    dissectors.

commit e4acb0276e
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Jul 24 03:20:23 2024 -0700

    dcerpc: change pidl to use C99 types.

    Change the NDR.pm script to use C99 integer types rather than GLib
    integer types.

    Define uint1632_t and uint3264_t to match guint1632 and guint3264.
    Convert code in packet-dcerpc.h to use the new types.

    Regenerate dissectors.

    This does not convert everything.  More work is needed.

commit 319fb7bd56
Author: Guy Harris <gharris@sonic.net>
Date:   Wed Jul 24 00:50:56 2024 -0700

    pidl: fix some more build issues.

    dnsserver also uses inline arrays, so don't rebuild it for now.

    Add missing dependencies for clusapi and drsuapi.

    No need to declare clusapi/clusapi.idl as a dependency for the clusapi
    dissector - that's done automatically for all dissectors.

commit 1af47e5f64
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Jul 23 23:15:49 2024 -0700

    Make it possible to generate the PIDL dissectors with CMake.

    Generate the appropriate list of --include flags to pass to pidl for a
    particular dissector from the listed dependencie for that dissector.

    Fix the lists of dependencies so that they include *all* the
    dependencies.

    Some dissectors can't be generated from the PIDL source for various
    reasons, move them out of PIDL_DISSECTOR_NAMES and into a comment giving
    the reason, for each one, why it can't be generated.

commit 70cd5a04ba
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Jul 16 16:11:45 2024 -0700

    epan: Deprecate the GLib-style tvb_get_gu?int functions

    Deprecate the GLib-style tvb_get_gu?int functions and update the
    documentation and examples.

    Ping #19116

commit f889eabb12
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jul 16 15:54:44 2024 -0400

    Qt: Use a shared model for DisplayFilterCombo

    By using a shared global model instead of a global DisplayFilterCombo,
    it's possible to later have more than one DisplayFilterCombo, and they
    can all have shared filter history without having to signal each
    other. The current setup makes it impossible to have more than one combobox.

commit 0fd3d14601
Author: Cal Turney <cturney111@gmail.com>
Date:   Tue Jul 23 19:12:32 2024 -0400

    SMB: Remove bogus malformed error

    When the level of interest is "Info Set EAs (2)" and the ampount
    of data to be sent exceeds the the amount of data in the request,
    Secondary requests will follow. The SMB dissector would throw a
    Malformed error in such cases.

    Fixed pipeline error.

commit caffeba5ec
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Jul 23 22:02:37 2024 +0200

    GDT: Remove unneccessary includes.

commit bbee0f9340
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Jul 23 22:37:10 2024 +0200

    Convert use of G_GINT64_MODIFIER to PRIu64/PRId64

    Ping #19116

commit 048e2de8fd
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Jul 23 22:44:01 2024 +0200

    Convert G_GUINT32_FORMAT to PRIu32

    Ping #19116

commit c4247075cf
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Jul 23 22:00:22 2024 +0200

    convert-dissectors-h-to-C99, remove include glib

commit 5743153197
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Tue Jul 23 22:16:15 2024 +0200

    Convert gushort to C99 types

commit 5bd8b730d0
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Jul 23 20:45:57 2024 +0200

    Convert zbee-direct to C99 types

commit 55b9e55a13
Author: Anders Broman <a.broman58@gmail.com>
Date:   Tue Jul 23 20:41:22 2024 +0200

    Convert remaining DCERPC dissectors to C99 Types

commit 5ed65d3195
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Tue Jul 23 18:55:50 2024 +0100

    ORAN FH CUS: trivial edits

commit 0274951625
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Jul 23 08:57:05 2024 -0700

    epan: Update our remaining old-style tvb integer accessors

    Ping #19116

commit f4af6bdc0a
Author: Markku Leiniö <markku@iki.fi>
Date:   Tue Jul 23 11:59:09 2024 +0300

    Replace gint with int in README.dissector

commit 125d712770
Author: Markku Leiniö <markku@iki.fi>
Date:   Tue Jul 23 11:49:04 2024 +0300

    Zabbix: Add separate subtree identifier for Flags tree

commit 4829e3ff39
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jul 23 10:06:02 2024 -0400

    CBOR: Register CBOR Sequence dissector with description

    Register the CBOR Sequence dissector with a description, so that it
    is distinguished from the other CBOR dissector in Decode As for
    Internet media type.

    Ping #19945.

commit b70a243d64
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Jul 23 10:12:42 2024 -0400

    CoAP: Remove duplicate value string entry

    Remove a duplicate value string entry.

    Also change the special CoAP media type table to case insensitive,
    as media types are case insensitive.

commit a4ecb58643
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Jul 20 15:29:12 2024 +0200

    Convert dcerpc templates co C99 types

commit e40128d030
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Tue Jul 23 05:24:54 2024 +0000

    DCM: Update data structures, dictionary and message exchange

commit b517de1634
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Jul 22 19:55:37 2024 -0400

    mp2t: Fix an underflow

    We only need to check for a extra (real) sync bytes in the initially
    detected trailer length (for cases where there is a header that
    contains a spurious sync byte). This prevents a possible underflow
    of trailer_len.

    Fix #19938

commit 96fa766c4b
Author: Albert Chuang <achuang@wi-fi.org>
Date:   Mon Jul 22 17:02:58 2024 +0800

    Add Protected S1G Action frame dissection

commit d14c086703
Author: Anders Broman <a.broman58@gmail.com>
Date:   Mon Jul 22 18:40:31 2024 +0200

    Rename tvb_get_guintvar tvb_get_uintvar

commit 6a053794a0
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jul 22 17:53:56 2024 +0200

    Convert dtd files to C99 types

    Ping #19116

commit 3ed8b04363
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jul 22 18:01:17 2024 +0200

    Convert types used in comments to C99 types

    Ping #19116

commit c4aac41433
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jul 22 18:06:32 2024 +0200

    Convert some temp variable names to C99 style

    Ping #19116

commit f8610965c5
Author: Anders Broman <a.broman58@gmail.com>
Date:   Mon Jul 22 17:28:31 2024 +0200

    PFCP:Change tvb_get_guint.. to tvb_get_uint...

commit c41c23a818
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Mon Jul 22 14:26:10 2024 +0100

    Fix some mask warnings (from check_typed_item_calls.py)

commit e9a42a9fd6
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jul 22 13:03:52 2024 +0200

    Convert g(u)intptr -> (u)intptr_t

commit 3c33dccf7c
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Mon Jul 22 11:23:12 2024 +0200

    Modernize some function names

    * guint32_to_str_buf() -> uint32_to_str_buf()
    * guint64_to_str_buf() -> uint64_to_str_buf()
    * guint64_to_gdouble() -> uint64_to_double()
    * gdouble_to_guint64() -> double_to_uint64()
    * get_nonzero_guint32() -> get_nonzero_uint32()
    * get_guint32() -> get_uint32()
    * guint8_to_hex() -> uint8_to_hex()

commit d6ff757f0f
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Jul 22 06:32:13 2024 -0400

    docs: Use pdf theme option that works for asciidoctorj

    The ruby installation of asciidoctor-pdf supports specifying the
    theme with the command line option of --theme, but asciidoctorj only
    supports it as -a pdf-theme= (which also works in asciidoctor-pdf.)
    Use the option supported by both command line invocations.

commit 6b0f20668c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 21 18:22:26 2024 -0700

    frame_tvbuff: Modernize a couple of function names

commit 058a3d56d4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 21 18:34:10 2024 -0700

    epan: Deprecate some GLib-style functions

    Deprecate the functions that were converted in 0eed9bdf8b. Convert and
    deprecate tvb_skip_guint8 as well.

commit 3a6fda7882
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Jul 21 18:13:30 2024 -0400

    asciidoctor: Prefer batch file commands on Windows

    When running processes from CMake, they are not run from
    within a shell, so we have to use the batch file on Windows
    to avoid "%1 is not a valid Win32 application" errors.

    We already do this for the main asciidoctor application; do
    it for the Ruby versions of asciidoctor-epub3 and asciidoctor-pdf
    if those are installed instead of AsciidoctorJ.

commit 0eed9bdf8b
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sun Jul 21 18:13:00 2024 +0200

    Remove the g prefix from the tvb search routines.

commit 1b2bf20dbc
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 21 09:59:41 2024 -0700

    docs: Use new-style tvb integer accessors in the Developer's Guide

    Ping #19116

commit 00f7d51730
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 21 09:52:43 2024 -0700

    wslua: Use new-style tvb integer accessors

    Ping #19116

commit 2c4e056c08
Author: Guy Harris <gharris@sonic.net>
Date:   Sun Jul 21 03:06:18 2024 -0700

    Pass a set of PIDL flags, not "is open" and "is close" Booleans.

    Pass to various routines policy handle routines a set of PIDL flags that
    indicate, among other things, whether this is opening a handle, closing
    a handle, or just using a handle, rather than passing two Booleans for
    "it's an open" and "it's a close".

    This makes the calls a bit easier to read, as they indicate what the
    parameter means.

    Add a PIDL_POLHND_USE value of 0, to use in cases where it's neither
    opening nor closing a handle, to make calls that do so clearer.

commit 1337bf40a2
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sun Jul 21 16:32:18 2024 +0200

    convert-rf4ce-secur-to-C99-types

commit 205293aa52
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Sun Jul 21 15:15:33 2024 +0100

    Fix some spelling errors

commit a9ebc96d48
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 21 09:31:22 2024 +0000

    [Automatic update for 2024-07-21]

    Update manuf, services enterprise numbers, translations, and other items.

    TLS CT Log IDs failed.

commit b29c855ba3
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Sun Jul 21 14:15:52 2024 +0000

    radiotap: retrieve field with appropriate function

commit 355afd1dee
Author: Martin Mathieson <martin.r.mathieson@gmail.com>
Date:   Sun Jul 21 10:20:04 2024 +0100

    CIGI: Don't define identical TFS multiple times

commit 8b978c94de
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Sun Jul 21 08:08:01 2024 +0000

    ZMTP: minor changes

commit 46df62bb0f
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Jul 20 23:48:14 2024 +0200

    convert-opensafety-to-C99

commit 7f1bf1a26c
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Jul 20 15:56:08 2024 +0200

    convert-tvb_get_guintx

commit 81066453e7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sat Jul 20 09:26:10 2024 -0700

    epan: Use new-style tvb integer accessors in our top-level code

    Ping #19116

commit 09c01b8521
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sat Jul 20 09:23:53 2024 -0700

    UI: Use new-style tvb integer accessors

    Ping #19116

commit dfc63ba2ff
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jul 20 09:43:13 2024 -0400

    nmf: Use varint API, don't throw exceptions or undefined shift

    NMF uses the same varint type as ENC_VARINT_PROTOBUF, but limited
    to 32 bits. Use the common function, which prevents undefined
    shifts by setting a maximum size.

    Ensure that we don't throw an exception in the get_pdu_len function
    used by tcp_dissect_pdus - set a maximum length to decode in the
    varint, and if that's not enough, request more if we have fewer
    than 5 octets (the maximum encoded length for 32 bits) or fail
    if we have 5 or more (and set the PDU length to the rest of the
    segment.)

    Add an expert info for bad record sizes in the main parsing.

    Fix #19936

commit 04968e140f
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jul 20 07:50:20 2024 -0400

    nmf: Remove proto initialization

    Run convert-proto-init.py on the dissector

commit 2e7ca427b4
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Jul 20 15:44:10 2024 +0200

    convert-x11-helpers-to-C99-types

commit 5951fed220
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jul 20 11:05:14 2024 -0400

    Convert pidl .cnf files to C99 types

    Regenerate the pidl dissectors afterwards.

    Ping #19116

commit e6d5e8c815
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Jul 20 15:15:22 2024 +0200

    convert file-dissectors to C99 types

commit e9845bd3f9
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jul 20 06:35:06 2024 -0400

    6LoWPAN: Fix base of Page Number field

    This is added with proto_tree_add_bits_item and as an integer (from
    4 bits), which means that the base needs to be an actual display
    base and not the width of a field (as used for FT_BOOLEAN fields
    with a nonzero bitmask, which is not when using add_bits_item).

    It happens to work because 16 is BASE_PT_SCTP, and the field happens
    to be FT_UINT16, which is compatible with a port type.

    Fix #19934

commit bc5f7d729d
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Jul 20 15:10:33 2024 +0200

    Convert dissectors 1-9 to C99 types

commit 029dce389b
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Jul 20 14:59:41 2024 +0200

    Convert dissectors W to C99 types

commit 97f93df2e4
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Jul 20 14:35:32 2024 +0200

    Convert dissectors YZ to C99 types

commit af353f48f5
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Jul 20 14:32:03 2024 +0200

    Convert dissectors X to C99 types

commit ffdced10e8
Author: Anders Broman <a.broman58@gmail.com>
Date:   Sat Jul 20 13:19:41 2024 +0200

    Convert dissectors V to c99 types

commit 5d72821204
Author: Anders Broman <a.broman58@gmail.com>
Date:   Fri Jul 19 22:39:10 2024 +0200

    epan: convert dissectors S to C99 types

commit 75ea337b68
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Jul 18 13:58:17 2024 +0200

    epan: convert dissectors P to C99 types

commit f61c344fb9
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Jul 19 20:41:52 2024 -0400

    docs: Support more symbols in asciidoctor-pdf

    We have a couple characters used in the WSUG that aren't in the default
    fonts for asciidoctor-pdf, even the fallback fonts:
    Up Arrohead ⌃ (U+2303) & Down Arrowhead ⌄ (U+2304).

    asciidoctor-pdf uses the Noto Fonts by default, which have
    Noto Sans Symbols and Noto Sans Math fonts that are fairly small.
    Add them and add them as additional fallback fonts.

    Set the common font and theme path, and theme, in our AsciiDoctor
    CMake script.

commit 7274fe8c97
Author: Anders Broman <a.broman58@gmail.com>
Date:   Fri Jul 19 23:08:52 2024 +0200

    epan: convert dissectors T to C99 types

commit 866bb943f2
Author: Guy Harris <gharris@sonic.net>
Date:   Fri Jul 19 16:42:32 2024 -0700

    tvbuff.h: include headers to define macros used herein.

    This may squelch some cppcheck warnings.

commit cb9eac4bc2
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Fri Jul 19 19:24:33 2024 +0000

    check_typed_item_calls.py: trying to get warning count down

commit dbd3f3778e
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Jul 18 23:20:51 2024 +0200

    sysdig: add the latest kernel APIs

commit 38a1f99d7a
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Fri Jul 19 17:04:51 2024 +0200

    NAS EPS: upgrade dissector to v18.7.0

commit 650b164ad0
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Fri Jul 19 11:50:29 2024 +0200

    wsdg: specify debian sym link

commit bd12a6750f
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Fri Jul 19 09:40:00 2024 +0000

    SOMEIP: Fix a broken test

commit 4cd3c7e870
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Jul 18 16:58:54 2024 -0400

    Diameter 3GPP: Add Feature-List for SWx, S6b

    Add the interpretation of the Feature-List AVP bitmask for SWx and S6b,
    as defined in 3GPP TS 29.273 V18.4.0 (2024-05). Both tables say that
    they are for Feature-List-ID 1, but the spec says that the value shall
    always be set to 1 for the two applications as of the current release.

    Also, in the default case, only set the item to visible if it was
    visible before we set it to hidden. (Some items start out hidden if
    being faked, and odd things can happen with the use of
    proto_item_fill_label, strstr, and proto_item_append_text in
    packet-diameter.c if an item that was faked is made visible.)

commit f0a1fb231d
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Jul 18 23:36:51 2024 +0000

    Update netlink generation tool and update netlink nl82011 dissector

commit cbcb180095
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Jul 18 23:08:59 2024 +0000

    Update ISOBUS parameters

commit 734df63153
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Thu Jul 18 22:44:13 2024 +0000

    IANA added another IPv6 special block

commit 1ac5195df2
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 17 18:32:24 2024 +0200

    DOC: complement SNMP user table description

commit 315aaf2e77
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Thu Jul 18 15:57:47 2024 +0000

    FBZERO and GQUIC: chacha20 -> chacha12

commit da91cb25fa
Author: Martin Mathieson <martin.r.mathieson@googlemail.com>
Date:   Thu Jul 18 15:50:42 2024 +0000

    ORAN FH CUS: fix a check - dereference pointer before test

commit 4ce51e5667
Author: Stefan Metzmacher <metze@samba.org>
Date:   Thu Jul 11 13:35:42 2024 +0200

    windows-common: don't export legacy {NT,WERR,HRES}_errors

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit 7c0402e75b
Author: Stefan Metzmacher <metze@samba.org>
Date:   Wed Jul 17 09:17:30 2024 +0200

    pidl:dcerpc-*: regenerate dissectors after {NT,WERR,HRES}_errors_ext pidl changes

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit 46d74a4fbd
Author: Stefan Metzmacher <metze@samba.org>
Date:   Thu Jul 11 13:12:59 2024 +0200

    svcctl.cnf: make use of WERR_errors_ext

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit 003d4b0ac0
Author: Stefan Metzmacher <metze@samba.org>
Date:   Thu Jul 11 13:12:41 2024 +0200

    tools/pidl: make use of {NT,WERR,HRES}_errors_ext

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit 6e69523711
Author: Stefan Metzmacher <metze@samba.org>
Date:   Thu Jul 18 15:50:25 2024 +0200

    pidl:dcerpc-*: regenerate dissectors after BASE_DEC/HEX pidl changes

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit c58a16350b
Author: Stefan Metzmacher <metze@samba.org>
Date:   Thu Jul 18 14:45:53 2024 +0200

    tools/pidl: don't use hardcoded BASE_HEX nor BASE_DEC

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit 8eeb888ab2
Author: Stefan Metzmacher <metze@samba.org>
Date:   Thu Jul 11 13:33:46 2024 +0200

    dcerpc-{budb,butc}: regenerate after {NT,WERR}_errors_ext idl2wrs changes

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit d0e762051f
Author: Stefan Metzmacher <metze@samba.org>
Date:   Thu Jul 11 13:33:46 2024 +0200

    idl2wrs: make use of {NT,WERR}_errors_ext

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit d789da7260
Author: Stefan Metzmacher <metze@samba.org>
Date:   Thu Jul 11 13:30:38 2024 +0200

    smb-direct: make use of &NT_errors_ext

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit 29dee5fc82
Author: Stefan Metzmacher <metze@samba.org>
Date:   Thu Jul 11 13:30:26 2024 +0200

    kerberos: make use of &NT_errors_ext

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit ef30c03372
Author: Stefan Metzmacher <metze@samba.org>
Date:   Tue Nov 21 16:16:43 2017 +0100

    nmf: initial commit for [MC-NMF] .NET Message Framing Protocol

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit ce1e3ad96e
Author: Stefan Metzmacher <metze@samba.org>
Date:   Tue Oct 17 17:12:14 2017 +0200

    xml: add o:BinarySecurityToken => GSSAPI dissection

    See http://docs.oasis-open.org/wss/oasis-wss-kerberos-token-profile-1.1#GSS_Kerberosv5_AP_REQ

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit 3c042d997d
Author: Stefan Metzmacher <metze@samba.org>
Date:   Wed Jul 17 09:46:09 2024 +0200

    xml: run ./tools/convert-glib-types.py epan/dissectors/packet-xml.*

    Signed-off-by: Stefan Metzmacher <metze@samba.org>

commit 10b644a26f
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Jul 18 15:31:04 2024 +0200

    epan: convert dissectors U to C99 types

commit 18aa227772
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Jul 18 16:05:18 2024 +0200

    epan: convert dissectors R to C99 types

commit f7d0e4a633
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Jul 18 14:00:22 2024 +0200

    epan: convert dissectors Q to C99 types

commit 75fec70124
Author: Anders Broman <a.broman58@gmail.com>
Date:   Thu Jul 18 13:55:43 2024 +0200

    epan: convert dissectors O to C99 types

commit 5ac53351ff
Author: John Thacker <johnthacker@gmail.com>
Date:   Thu Jul 18 07:24:17 2024 -0400

    ieee80211: Eliminate false positive maybe-initialized

    I found a set of compiler flags that lead to this false positive from
    inlining:

    In function ‘add_ff_eht_mu_exclusive_80MHz_rpt’,
        inlined from ‘add_ff_eht_mu_exclusive_beamforming_rpt.isra’ at /home/johnthacker/wireshark/epan/dissectors/packet-ieee80211.c:17661:16:
    /home/johnthacker/wireshark/epan/dissectors/packet-ieee80211.c:17384:17: error: ‘snr’ may be used uninitialized [-Werror=maybe-uninitialized]
    17384 |           value = snr >> 4;
          |           ~~~~~~^~~~~~~~~~
    /home/johnthacker/wireshark/epan/dissectors/packet-ieee80211.c: In function ‘add_ff_eht_mu_exclusive_beamforming_rpt.isra’:
    /home/johnthacker/wireshark/epan/dissectors/packet-ieee80211.c:17330:10: note: ‘snr’ was declared here
    17330 |   int8_t snr, value;

    This can't happen because get_snr is always initialized to 1, and snr is
    retrieved in that case, but quiet this warning anyway.

commit 8f01b0aeea
Author: Stig Bjørlykke <stig@bjorlykke.org>
Date:   Wed Jul 17 22:47:17 2024 +0200

    Remove break after return

    A break after return is not needed. Solaris would give a
    "statement not reached" warning.

commit d15fc6e1ca
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Thu Jul 18 12:26:50 2024 +0200

    GSM A GM: upgrade dissector to v18.6.0

commit baea7be0ab
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Jul 17 20:15:08 2024 -0400

    wslua: Expose pinfo saved_can_desegment to Lua pktinfo

    Expose saved_can_desegment (read only) so that proxy protocols
    similar to SOCKS can be implemented in Lua properly.

    See https://ask.wireshark.org/question/35087/calling-existing-tls-lua-dissector-gives-wrong-dissection/
    for an example.

commit 7f96b474b8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 17 16:54:22 2024 -0700

    GitLab CI: Enable automatic pipeline cancellation

    Add a default job and make it interruptible. This should result in
    automatic pipeline cancellation when someone pushes new changes to a
    branch.

commit f85b22fd18
Author: Eugène Adell <eugene.adell@gmail.com>
Date:   Thu Jul 18 00:51:49 2024 +0000

    Qt: I/O Graph Throughput and zero values handling

commit 32c5280dfa
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Wed Jul 17 14:18:36 2024 -0500

    Qt: update filenames in comments; remove HelpContents icon property

    HelpContents icon removed in d3cd4c4b

commit 38c3cf5c2f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 17 11:59:59 2024 -0700

    Switch our GLib 64-bit format specifiers to their C99 equivalents

    Convert our code that uses G_GUINT64_FORMAT and G_GINT64_FORMAT to C99
    types, which includes replacing the GLib format specifiers with PRIu64
    and PRId64. Recommend the C99 specifiers over the GLib ones.

    Ping #19116
    Fixes #17895

commit 490bd19bb5
Author: Joakim Karlsson <oakimk@gmail.com>
Date:   Wed Jul 17 15:35:06 2024 +0200

    epan: convert dissectors N to C99 types

    Ping #19116

commit 81bdcbd378
Author: Joakim Karlsson <oakimk@gmail.com>
Date:   Wed Jul 17 15:00:06 2024 +0200

    epan: convert dissectors M to C99 types

    Ping #19116

commit 8156dd0d94
Author: Joakim Karlsson <oakimk@gmail.com>
Date:   Wed Jul 17 14:44:44 2024 +0200

    epan: convert dissectors L to C99 types

    Ping #19116

commit a275a44abf
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 17 22:20:25 2024 +0000

    Bluetooth: update UUID registery

commit 61c68a601f
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Wed Jul 17 23:49:59 2024 +0200

    BACAPP: Update vendor registery

    And complete the generator script at the same time.

commit 40e3bc99a5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jul 17 15:11:06 2024 -0700

    Version: 4.3.0 → 4.3.1

    [skip ci]
