commit 98d00f9a22
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Oct 3 18:47:13 2023 -0700

    Prep for 4.0.9

commit 512da54f18
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Jan 21 23:58:11 2023 -0500

    Gitlab CI: Switch to the OpenSUSE 15.4 container

    15.3 has reached EOL: https://en.opensuse.org/Lifetime

    (cherry picked from commit b71d87ed273fbadb92842d90ede49981ae1213e1)

commit 02a1e4b524
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri Sep 29 15:01:13 2023 -0700

    GitLab CI: Generate Sparkle signatures on macOS

    (cherry picked from 19a8e8eb and related commits)

    (cherry picked from commit cfe9bd8df578a4d140a72de096b2fe4512bc3f94)

    Conflicts:
            .gitlab-ci.yml

commit 2120375fd5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Oct 2 10:49:30 2023 -0700

    GitLab CI: Display filter reference workflow updates

commit 8ee8a05ab2
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Oct 1 16:19:24 2023 +0000

    [Automatic update for 2023-10-01]

    Update manuf, services enterprise numbers, translations, and other items.

commit 9b79e24b4c
Author: John Thacker <johnthacker@gmail.com>
Date:   Sat Sep 30 21:10:20 2023 -0400

    wsutil: memset mempbrk pattern when compiling

    Most of uses of ws_mempbrk use static ws_mempbrk_pattern structs so
    the pattern is automatically initialized to zero, but ensure that
    it is zero so that locally declared patterns don't have to be
    declared with = {0} (e.g., in cf_find_packet_data, where data is
    currently used unitialized but the compiler and static analysis
    doesn't catch it).

    This also allows re-compiling with a new pattern later.

    (backported from commit 3a0e70d6eba7d241e01e7091c450fe2c6f09f464)

commit 3cd3e39ead
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 27 20:42:31 2023 -0400

    Qt: Fix highlighting of protocol bytes when clicking proto tree item

    Commit d8ac2a046b85823019b6826e505aaa538e223484 broke the secondary
    highlighting of the surrounding protocol bytes when clicking a proto
    tree item, because it didn't find and set the parent field, which
    controls that setting.

    The field is selected twice by the ByteViewTab when clicked, once
    triggered by selectedChanged(), and once by clicked(). Previously
    only the former marked the protocol bytes, causing some brief
    flickering. Note that keyboard navigation and clicking the ByteViewText
    always worked to highlight the protocol bytes. (What is really needed
    is an equivalent to selectedChanged() that is sent even when the newly
    selected field is the same as the old one.)

    Also parent the new FieldInformation with the ProtoTree, so that
    ProtoTree::selectedFieldChanged() doesn't process a signal from
    the ProtoTree itself and clear and reselect an extra time.

    (backported from commit 24d88d3b74ec5b51568d2dbb8bc5a1d3ef39b9cd)

commit 0b684dc05a
Author: David Perry <boolean263@protonmail.com>
Date:   Tue Sep 26 08:02:16 2023 -0400

    dumpcap: `RINGBUFFER_MIN_NUM_FILES` logic error

    If `RINGBUFFER_MIN_NUM_FILES` is set greater than 0 in ringbuffer.h,
    a logic error causes that number of files to be used regardless of the
    user's desired number. Add braces to remove the logic error.

    (cherry picked from commit 47ae3fcdce7e351433605770ffe65da9aca676f2)

commit 42b5ce7705
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 25 10:32:46 2023 -0700

    GitLab CI: Adjust fuzz times

commit b6c9a20e97
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Thu Sep 21 12:04:27 2023 +0200

    ieee1905: Fix wrong tfs for BSS Configuration Report TLV

    Closed: #19352

    (cherry picked from commit b550f82167f90b943783b0b11540bd00a620741f)

commit a58ec47340
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 24 16:19:59 2023 +0000

    [Automatic update for 2023-09-24]

    Update manuf, services enterprise numbers, translations, and other items.

commit fb14591f54
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Sep 23 00:36:03 2023 -0700

    Work around stub routines in macOS 14 (Sonoma) libpcap.

    Some routines that are built only if libpcap 1.10.x is built with remote
    capture support, but that are unconditionally declared in pcap/pcap.h,
    now have stub implementations in macOS 14 that always fail and set the
    error string to "not supported".  (This was probably done because those
    routines are now declared as "weakly linked symbols":

    https://developer.apple.com/library/archive/documentation/MacOSX/Conceptual/BPFrameworks/Concepts/WeakLinking.html

    om macOS 14.)

    This means CMakeLists.txt finds them when you build on Sonoma, so we end
    up calling them.

    The only place where we didn't arrange that we *only* use them if the
    device name begins with rpcap://, indicating that it's a remote-capture
    URL, was the code in dumpcap that produces packet counts for the
    sparklines in the Wireshark main screen.  That meant that all opens
    failed, and dumpcap reported that failure to Wireshark, so no sparklines
    were drawn.  Check for rpcap:// in that case as well, and use
    pcap_open_live() if it's not present.

    For all code that calls the routines in question, if the any of the
    routines in question fail, check for an error string of "not supported",
    and replace it with "Remote capture not supported", so as to make the
    cause of failure clearer.

    Fixes #19349.

    (cherry picked from commit 1fb90793f54ab0ccd0492d2587c46d243b141935)

commit bed387ff67
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 21 18:22:03 2023 -0700

    GitLab CI: Fix a path

    Use Minio mc and not Visual Studio's Message Compiler.

    (cherry picked from commit cf5a2bba0dd53c806f0791099b035a64803087a7)

    Conflicts:
            .gitlab-ci.yml

commit a1a4bd8c32
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 21 14:08:58 2023 -0700

    GitLab CI: Use Minio mc to upload Windows packages

    (cherry picked from commit f81a863ed48778618a8990fb099597177919adea)

    Conflicts:
            .gitlab-ci.yml

commit 1a832516dd
Author: mivens <mark.ivens@vitrifi.net>
Date:   Wed Sep 20 17:27:00 2023 +0000

    Add hmac-md5 to algorithm_vals

    (cherry picked from commit fbc2fbe4a56098e5c45787b2f73e87817c7ee06a)

commit ac7e1f1e1c
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Sep 15 20:45:18 2023 -0400

    tacacs: Make expert info appear in dialog

    The if (tree) construct prevents the expert info from
    appearing when there's a null tree (i.e., Expert Info
    Dialog with no filter.) It's not really necessary here
    (or in most dissectors currently.)

    Related to #19325

    (cherry picked from commit a8f7cf2e70d51c4226e0d9442f18cd42cfcd7146)

commit 98273f6279
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 14 14:49:21 2023 -0700

    GNW: Change an assert to an expert info

    If our IntX value is too large, show an expert info instead of
    asserting.

    (cherry picked from commit 6f6a412a94c48f1d5fd74de1f181fa20584dac0d)

commit e847046334
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Sep 20 13:15:17 2023 -0700

    GitLab CI: More macOS code signing updates

    (cherry picked from commit 9c27eeb5ec3f07ff6762789dc41d4e58feed99f4)

commit dd1569d7c5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Sep 19 18:22:55 2023 -0700

    GitLab CI: Update our macOS code signing identity

    (cherry picked from commit e9695cd2642c59262325cecf66b474efc525d0b1)

commit f08719f62a
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 18 17:08:27 2023 -0700

    GitLab CI+macOS: Update code signing

    (cherry picked from commit a43a1645e596374b2302d3e4c88988102487f143)

commit e636669dd5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Sep 19 08:46:34 2023 -0700

    GitLab CI+macOS: Remove a CMake flag that's no longer valid

commit 1260c31e05
Author: John Thacker <johnthacker@gmail.com>
Date:   Sun Sep 17 07:42:34 2023 -0400

    Qt+Windows: Allow updating with an open file with no unsaved changes

    Add a FileCloseContext for updates, and use that when calling
    testCaptureFileClose in softwareUpdateRequested.

    In that context, rather than opening another dialog, just return
    false and try again later if there are unsaved changes, but go
    ahead and close the file if there are no changes (or if the
    user has set the preference not to be asked about unsaved changes.)

    This allows updating if the user has a file open with no changes,
    e.g. when opening Wireshark by double-clicking an existing file.

    Note that even though the WinSparkle dialogs aren't modal, and
    a user can bring the main window to the front, save or close the
    file and then click on Install Update again without having to
    redownload the update, it seems like a lot of users don't expect
    that. They also don't know about clicking on Help->Check for Updates
    in the menu bar, and think that the automatic update is the only
    way to check for updates.

    Fix #17658

    (cherry picked from commit 35fb3c94e5e84afc42b440e121ab79ff4ca60a1f)

commit 830b63855f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 14 18:12:18 2023 -0700

    test: Skip global name resolution tests on macOS

    Global name resolution tests on macOS require adding a 'hosts' file to
    Contents/MacOS in the application bundle. Newer versions of Xcode appear
    to leave this unwritable after we've created our application bundle. We
    arguably shouldn't modify the application bundle anyway, so skip global
    name resolution tests if we have an application bundle.

    (cherry picked from commit a7cf7fd56198fdce5462788d634bdc0669cf85ea)

    Conflicts:
            test/suite_nameres.py

commit 5e62d8c3ed
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon Sep 18 14:18:01 2023 -0700

    GitLab CI+macOS: Move notarization to GitLab CI

    Switch to notarytool since the notary service will stop supporting
    altool soon.

    (cherry picked from commit a00771d9c23fb5c348414f0cde0b3744968a4175)

commit 4f2c88acae
Author: reno <renovetrov@gmail.com>
Date:   Fri Sep 15 13:50:04 2023 +0300

    Fix repeated field32 protobuf dissection

    Packed repeated fields have wire type = 2
    according to https://protobuf.dev/programming-guides/encoding/#structure

    Wire_type here compared to PROTOBUF_WIRETYPE_FIXED32, which cause
    try of getting 8 bytes from tvb and malformed packet error as a result

    Changed to check value_size, it equals 4 or 8 by the moment it checked

    Closes #19342

    (cherry picked from commit cb49bb4d054aabcfc680a4a66c90a82828daccea)

commit cd6545e886
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Aug 11 07:34:44 2023 -0400

    IDN: Fix use of conversation

    The conversation_new() function last parameter is options, not
    a place to put a uint parameter like the channel id. Change
    the call to the conversation_full API in order to do what
    was intended, and avoid DISSECTOR_ASSERT messages.

    Only allocate the file scoped configuration data the first time
    it is encountered, instead of every time a frame is parsed.

    The message_info is allocated anew and filled in each time the
    packet is dissected, so that should be pinfo->pool allocated.

    Related to #16707, #19272

    Add conversation_type enums to stay in sync with the master branch.

    Fixes #19332

    (cherry picked from commit 9a49fdd3156643b015e0449a942a7be1b5078306)

    Conflicts:
            epan/conversation.h

commit 1b522c8fbf
Author: Dr. Lars Völker <lars.voelker@technica-engineering.de>
Date:   Sun Sep 17 19:43:40 2023 +0200

    IEEE1722: Add missing reserved field for PCM Audio (BUGFIX)

    This fixes a bug in the IEEE1722 dissector for PCM frames:
    "Dissector aaf incomplete in frame x".

    The IEEE1722 standards states that for PCM encoded AAF frames, the
    aaf_format_specific_data_2 (byte before payload) is called reserved.

    The IEEE1722 dissector just skipped the byte.

    (cherry picked from commit 9f67d5fd5f307ec15b7cc8959028f27c30f911cc)

commit 5825fbdf25
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 17 16:18:42 2023 +0000

    [Automatic update for 2023-09-17]

    Update manuf, services enterprise numbers, translations, and other items.

commit e600b9c95d
Author: John Thacker <johnthacker@gmail.com>
Date:   Fri Sep 15 17:01:22 2023 -0400

    RTP: Allow desegmenting on top of TCP desegmenting (RFC 4751)

    Save the current desegmentation state and restore it instead of
    setting it back to zero. This is needed in the case of RFC 4751
    RTP framed over TCP, where multiple RTP packets are contained in
    one TCP/IP frame, and the preference to check for RTP payload
    segmentation is enabled as well (as it is by default.)

    That's somewhat unusual, but it could happen if RTP packets over
    UDP use fragmentation, and then are individually encapsulated in
    TCP (without combining the payload) for forwarding by a middlebox,
    and then something like TSO is used.

    Fix #19345

    (cherry picked from commit 9f608b0fa0ea3ca3816976a6d20a0bc3a50dd49c)

commit f4cc7e1927
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 14 15:11:38 2023 -0700

    macOS: Fix our dSYM dmgbuild configs

    Newer versions of dmgbuild don't use biplist and neither does our
    config, so don't try to import it.

    [skip ci]

    (cherry picked from commit 870d78ac0556f061901f61cb55c08166ca1a1cc7)

commit 8aa2764b33
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 14 13:38:05 2023 -0700

    macOS: Fix our dmgbuild configs

    Newer versions of dmgbuild don't use biplist and neither does our
    config, so don't try to import it.

    [skip ci]

    (cherry picked from commit 61c0d095823e1fecbeab8fda54f4f4d3e6cf892e)

commit 3e694df730
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Sep 12 20:47:45 2023 -0400

    SCCP: Fix double-shifting/masking of RSN

    Just add the values with proto_tree_add_item. Getting the
    values, shifting, and then adding them with proto_tree_add_uint
    with a bitmask set ends up shifting twice.

    Fix #19336

    (cherry picked from commit fb845cc4c483bbbbc2ebdc65998220cdd02aa7ee)

commit 1dd45a65c1
Author: Jaap Keuter <jaap.keuter@xs4all.nl>
Date:   Tue Sep 12 20:30:30 2023 +0200

    Doc: update dissector README conversation text on conversation_type

commit 32a88641b8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 10 16:19:22 2023 +0000

    [Automatic update for 2023-09-10]

    Update manuf, services enterprise numbers, translations, and other items.

commit 112c84a495
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Sep 7 13:08:13 2023 -0700

    Qt: Style our overlay scroll bar

    Apply the application style to our child scroll bar. This ensures that
    it renders correctly in dark mode on Windows and should do so Linux as
    well. It already rendered correctly on macOS.

    Ping #18246

    (cherry picked from commit fdc6854761485a614a005a112cd074b5b3973ecd)

commit d78c00c4c8
Author: João Valverde <j@v6e.pt>
Date:   Wed Sep 6 18:18:59 2023 +0100

    dfilter: Fix printing of nanosecond fractions of time.

    The code is incorrectly also omitting zeros that are significant
    from the representation of fractional values of absolute time
    in display filters (with FTREPR_DFILTER).

    Instead of fixing the representation just remove the buggy code and
    include all 9 digits of fractional seconds, including trailing zeros
    to the right of the decimal point, which in this case can be inferred
    to indicate the precision (to the nanosecond).

commit b24d33d339
Author: João Valverde <j@v6e.pt>
Date:   Mon Sep 4 15:55:06 2023 +0100

    dfilter: Fix parsing a time format with "UTC"

    Before:

        Filter:
         frame.time <= "2002-12-31 13:56:31.3 UTC"

        Error: Unexpected data after time value.
          frame.time <= "2002-12-31 13:56:31.3 UTC"

    After:

        Filter:
         frame.time <= "2002-12-31 13:56:31.3 UTC"

        Instructions:
         0000 READ_TREE        frame.time       -> R0
         0001 IF_FALSE_GOTO    3
         0002 ANY_LE           R0 <= "2002-12-31 13:56:31.3+0000"
         0003 RETURN

commit db864540d1
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Sep 6 18:23:55 2023 -0700

    GitLab CI: Fix a file search

    (cherry picked from commit 98a99f616f4898c353a5a11ba51a7701f6dd8224)

commit 626554bd4d
Author: John Thacker <johnthacker@gmail.com>
Date:   Tue Sep 5 09:24:27 2023 -0400

    Fix storing first previously displayed packet in cf_reftime_packets

    If we don't have the timestamp of the previously displayed packet,
    we set the current packet as the previously displayed packet so
    that the delta time displayed is zero.

    Only do this if the current packet is actually displayed; otherwise,
    when setting or unsetting a time reference, the first displayed
    packet is given a delta time displayed from the first frame in
    the capture, regardless of whether the first frame is displayed
    or not. (The rest of the code properly handles cf->provider.prev_dis
    being NULL.)

    Fix #19324

    (cherry picked from commit 9ad2f8ee527c65a856749cb90611fac06ce524c7)

commit 5fe1d08979
Author: John Thacker <johnthacker@gmail.com>
Date:   Wed Sep 6 06:13:23 2023 -0400

    RTPS: Check for signed overflow

    The offset is a signed integer, and we use negative offsets
    to mean "offset counting from the end of the tvb." That means
    that we can still have an excessive loop without unsigned overflow
    or running off the end of the tvb, if the result of adding a large
    unsigned integer to the offset results in a small negative number.

    Just check if the result of the addition makes the offset move
    backwards.

    Fix #19322

    (backported from commit 0de07f8fe4f8e06da9084485e64a24c8f85a20f4)

commit e966bd5189
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue Sep 5 10:34:27 2023 -0700

    GitLab CI: Make sure our fuzz jobs fail correctly

    (cherry picked from commit 9e8d63f71e678ece3bfe64df7f5e1eebe45cfd8b)

commit e26ea1b3da
Author: Guy Harris <gharris@sonic.net>
Date:   Mon Sep 4 00:54:18 2023 -0700

    tibia: don't use string encodings for non-string items.

    We do not guarantee that will work, and, in fact, it doesn't work.

    (cherry picked from commit a0db76b4cce16d71d5a37b056ad30272542aff43)

commit 2c8b73c2b7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 3 16:30:42 2023 -0700

    GitLab CI: Switch to clang 16

    (cherry picked from commit 777152455823d839be104500861a32463453986e)

commit 311d9eea1b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Sep 3 16:19:39 2023 +0000

    [Automatic update for 2023-09-03]

    Update manuf, services enterprise numbers, translations, and other items.

commit 68ed587f9a
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Sep 2 17:24:47 2023 -0700

    editcap: improve -A and -B documentation.

    State up front that both ISO 8601 and Unix-time formats are supported.
    Describe each format in separate paragraphs.  Give more information
    about the Unix-time format.

    (cherry picked from commit 524910488e3e9f9ebb7d3901e99bd7161fd0dc68)

commit 17be8985f3
Author: Guy Harris <gharris@sonic.net>
Date:   Sat Sep 2 16:01:24 2023 -0700

    nstime: fix unix_epoch_to_nstime().

    The text format for UNIX Epoch times is <secs>[[.,]<nsecs>], with <secs>
    representing "seconds since the Epoch".

    The format of an nstime is a time_t and a nanoseonds value, where a
    time_t is normally "seconds since the Epoch" (don't get me started on
    why that's quoted and why I added "normally"; hint, it involves the
    words "leap" and "seconds").

    So all unix_epoch_to_nstime() needs to do is conveert <secs> from ASCII
    decimal to binary and use it as the time_t (if it fits) and, if there's
    a [.,]<nsecs>, convert <nsecs> it from ASCII decimal to binary (as an
    "after the decimal indicator" value) and use it as the nanoseconds,
    otherwise set the nanoseconds to 0.

    It does *not*, in particular, have to involve struct tm in any fashion;
    doing that runs the risk of dragging in local time, but this isn't local
    time.

    This also means that it doesn't depend on strptime supporting "%s";
    that's not specified in the Single UNIX Specification.

    (cherry picked from commit 9af86689dd53d2248de0ded478170713be4f1fcb)

commit e195342e82
Author: Anders Broman <anders.broman@ericsson.com>
Date:   Thu Aug 31 17:11:22 2023 +0200

    ITS: Accept RTCMEM v1 and v2

    Treat both as v2 for now.

    (cherry picked from commit 04ec5dcaee697f2319cbe0ffb5aed17cfd7ce1a4)

commit e5becf8b29
Author: David Perry <boolean263@protonmail.com>
Date:   Tue Sep 20 08:09:57 2022 -0400

    esl_eth: support nanosecond timestamps

    Applies the patch from #18308, in lieu of original commenter doing so.

    Closes #18308

    (cherry picked from commit 68a581afdcb08fd31aab88494a87e1243b3db15d)

commit c04008d846
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 16 16:02:58 2023 -0700

    NSIS: Update the donation page

    (cherry picked from commit 1a4d139953f59a2d9733db068be98c70704e8317)

commit 13207abe92
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Aug 27 16:19:28 2023 +0000

    [Automatic update for 2023-08-27]

    Update manuf, services enterprise numbers, translations, and other items.

commit 12476b4be2
Author: Alexis La Goutte <alexis.lagoutte@gmail.com>
Date:   Tue Aug 22 15:36:40 2023 +0200

    kakfa: fix sync_group_request missing version check for instance_id

    Close #19290

    (cherry picked from commit 7e7cd293720186ee0af4479e581d74c566112a66)

commit 39b7c01010
Author: Gerald Combs <gerald@wireshark.org>
Date:   Thu Aug 24 12:51:32 2023 -0700

    Qt: Delay deleting the interface frame context menu

    Delete the interface frame context menu using QMenu::deleteLater,
    otherwise we can run into QTBUG-106718.

    Fixes #19299

    (cherry picked from commit a3194d61f89bf2d67605fe8f26e0545c53f2addf)

commit 6b123f0ff9
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Aug 23 13:44:06 2023 -0700

    Version: 4.0.8 → 4.0.9

    [skip ci]
